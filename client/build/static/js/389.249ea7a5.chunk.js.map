{"version":3,"file":"static/js/389.249ea7a5.chunk.js","mappings":"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","sources":["css/views/myfriends.style.ts","components/views/myFriend.tsx"],"sourcesContent":["import styled, { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const MyFriendsGlobal = createGlobalStyle`\r\n  :root {\r\n    --myfriend-width: 350px;\r\n\r\n    // support\r\n    --myfriend-support-box-height: 40px;\r\n    --myfriend-support-btn-size: 35px;\r\n    \r\n    // li\r\n    --myfriend-li-height: 45px;\r\n    --myfriend-li-mini-size: 72px;\r\n    --myfriend-profile-img-size: 30px;\r\n    --myfriend-online-circle-size: 10px;\r\n  }\r\n`;\r\n\r\nexport const MyFriendsContainer = styled.div`\r\n  height: 100%;\r\n  width: var(--myfriend-width);\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-left: 1px solid var(--pwf-light-gray);\r\n\r\n  @media (max-width: 725px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\n// support ----------------------\r\nexport const MyFriendSupportBox = styled.div`\r\n  width: 100%;\r\n  height: var(--myfriend-support-box-height);\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid var(--pwf-light-gray);\r\n  justify-content: flex-end;\r\n\r\n  button {\r\n    width: var(--myfriend-support-btn-size);\r\n    height: var(--myfriend-support-btn-size);\r\n    background-color: inherit;\r\n    color: var(--pwf-gray);\r\n    border: none;\r\n    font-size: 16px;\r\n    margin: 0px 2px;\r\n\r\n    &:hover {\r\n      color: var(--pwf-white);\r\n    }\r\n  }\r\n\r\n  @media (max-width: 725px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const MyFriendBtn = styled.button`\r\n  position: relative;\r\n`;\r\n\r\nexport const RequestCount = styled.span<{ count: number }>`\r\n  position: absolute;\r\n  right: 0;\r\n  bottom: 3px;\r\n  width: 16px;\r\n  height: 16px;\r\n  font-size: 10px;\r\n  border-radius: 50%;\r\n  color: var(--pwf-white);\r\n  display: ${(p) => (p.count ? \"flex\" : \"none\")};\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: var(--pwf-blue);\r\n`;\r\n\r\nexport const MyFriendSearchBtn = styled.button``;\r\n\r\n// 친구검색\r\nexport const MyFriendSearchBox = styled.div<{ show: boolean }>`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: ${(p) => (p.show ? \"flex\" : \"none\")};\r\n  border-bottom: 1px solid var(--pwf-light-gray);\r\n`;\r\n\r\nexport const MyFriendSearchInput = styled.input`\r\n  flex: 1;\r\n  height: 100%;\r\n  background-color: inherit;\r\n  color: var(--pwf-white);\r\n  padding: 0px 8px;\r\n  border: none;\r\n`;\r\n\r\nexport const FriendSearchBtn = styled.button`\r\n  padding: 0px 8px;\r\n  background-color: inherit;\r\n  border: none;\r\n  outline: none;\r\n  color: var(--pwf-gray);\r\n\r\n  :hover {\r\n    color: var(--pwf-white);\r\n  }\r\n`;\r\n\r\n// 친구들 리스트\r\nexport const MyFriendsList = styled.ul`\r\n  width: 100%;\r\n  // overflow-y: auto;\r\n  height: calc(100% - var(--myfriend-support-box-height));\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n\r\n  &::-webkit-scrollbar {\r\n    width: var(--scroll-size);\r\n  }\r\n\r\n  &::-webkit-scrollbar-track {\r\n    background-color: inherit;\r\n    border-radius: 4px;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: var(--pwf-gray);\r\n    border-radius: 10px;\r\n  }\r\n\r\n  p {\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    color: var(--pwf-gray);\r\n    font-size: 15px;\r\n  }\r\n\r\n  @media (max-width: 725px) {\r\n    flex-direction: row;\r\n    height: var(--myfriend-li-mini-size);\r\n    border-bottom: 1px solid var(--pwf-light-gray);\r\n    // overflow-x: auto;\r\n  }\r\n`;\r\n\r\n// li\r\nexport const MyFriendLi = styled.li`\r\n  width: 100%;\r\n  height: var(--myfriend-li-height);\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0px 8px;\r\n  cursor: pointer;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    background-color: var(--pwf-background-transparent);\r\n  }\r\n\r\n  @media (max-width: 725px) {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    width: var(--myfriend-li-mini-size);\r\n    height: var(--myfriend-li-mini-size);\r\n  }\r\n`;\r\n\r\nexport const MyFriendLiProfileBox = styled.div`\r\n  width: var(--myfriend-profile-img-size);\r\n  height: var(--myfriend-profile-img-size);\r\n  position: relative;\r\n  margin-right: 13px;\r\n\r\n  @media (max-width: 725px) {\r\n    margin-right: 0px;\r\n  }\r\n`;\r\n\r\nexport const MyFriendLiImgCircle = styled.span`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  border: 1px solid var(--pwf-light-gray);\r\n`;\r\n\r\nexport const MyFriendLiImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\nexport const MyFriendOnlineCircle = styled.span`\r\n  width: var(--myfriend-online-circle-size);\r\n  height: var(--myfriend-online-circle-size);\r\n  border-radius: 50%;\r\n  position: absolute;\r\n  bottom: 3px;\r\n  right: -3px;\r\n  z-index: 161;\r\n  overflow: hidden;\r\n  background-color: green;\r\n`;\r\n\r\nexport const MyFriendLiNickname = styled.span`\r\n  color: var(--pwf-white);\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n\r\n  @media (max-width: 725px) {\r\n    width: 100%;\r\n  }\r\n`;\r\nexport const MyFriendSupBox = styled.div<{ menu: boolean }>`\r\n  display: ${(p) => (p.menu ? \"flex\" : \"none\")};\r\n  flex-direction: column;\r\n  align-items: center;\r\n  position: absolute;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 12;\r\n  overflow: hidden;\r\n  box-shadow: 1.5px 1.5px 1.5px 1.5px var(--pwf-background-transparent);\r\n  background-color: var(--pwf-signiture-color);\r\n\r\n  button {\r\n    padding: 6px;\r\n    background-color: inherit;\r\n    border: none;\r\n    outline: none;\r\n    color: var(--pwf-white);\r\n\r\n    &:hover {\r\n      background-color: var(--pwf-background-transparent-light);\r\n    }\r\n  }\r\n`;\r\n","import { useSelector } from \"react-redux\";\r\nimport * as SMF from \"../../css/views/myfriends.style\";\r\nimport { AppDispatch, RootState } from \"../../redux/store\";\r\n\r\nimport { User, UserComponent } from \"../../types/user\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { modalState } from \"../../redux/reducer/modalReducer\";\r\nimport { useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { FormSubmit, InputChange } from \"../../types/event\";\r\nimport { user_service } from \"../../service/user.service\";\r\nimport { AxiosError } from \"../../error/error\";\r\n\r\n// 내 친구\r\nexport const MyFriendLi = ({ user }: UserComponent) => {\r\n  let menuRef = useRef<HTMLDivElement | null>(null);\r\n  let [menu, setMenu] = useState<boolean>(false);\r\n  useEffect(() => {\r\n    const handleContextMenu = (e: MouseEvent) => {\r\n      e.preventDefault();\r\n    };\r\n\r\n    document.addEventListener(\"contextmenu\", handleContextMenu);\r\n    return () => {\r\n      document.removeEventListener(\"contextmenu\", handleContextMenu);\r\n    };\r\n  }, []);\r\n\r\n  const handleMenu = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    if (menuRef.current && e.button == 2) setMenu(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (menu && menuRef.current) menuRef.current.focus();\r\n  }, [menu]);\r\n\r\n  const deleteFriend = async () => {\r\n    try {\r\n      await user_service.deleteFriend(user.nickname!);\r\n    } catch (err: any) {\r\n      let { msg } = AxiosError(err);\r\n      alert(msg);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SMF.MyFriendLi key={user.id} onMouseDown={handleMenu}>\r\n      <SMF.MyFriendLiProfileBox>\r\n        <SMF.MyFriendLiImgCircle>\r\n          <SMF.MyFriendLiImg src={user.profile_img} />\r\n        </SMF.MyFriendLiImgCircle>\r\n        <SMF.MyFriendOnlineCircle></SMF.MyFriendOnlineCircle>\r\n      </SMF.MyFriendLiProfileBox>\r\n      <SMF.MyFriendLiNickname>{user.nickname}</SMF.MyFriendLiNickname>\r\n\r\n      <SMF.MyFriendSupBox\r\n        ref={menuRef}\r\n        tabIndex={0}\r\n        onBlur={() => setMenu(false)}\r\n        menu={menu}\r\n      >\r\n        <button onMouseDown={deleteFriend}>친구 삭제</button>\r\n      </SMF.MyFriendSupBox>\r\n    </SMF.MyFriendLi>\r\n  );\r\n};\r\n\r\n// 내 친구들리스트\r\nexport const MyFriends = () => {\r\n  let dispatch = useDispatch<AppDispatch>();\r\n  let request_friends = useSelector(\r\n    (state: RootState) => state.friend.request_friends\r\n  );\r\n  let friends = useSelector((state: RootState) => state.friend.friends);\r\n\r\n  let [searchState, setSearchState] = useState<boolean>(false);\r\n  let [searchNick, setSearchNick] = useState<string>(\"\");\r\n  let [searchLoading, setSearchLoading] = useState<boolean>(false);\r\n  let [searchResult, setSearchResult] = useState<User[]>([]);\r\n\r\n  useMemo(() => {\r\n    const searching = async () => {\r\n      try {\r\n        setSearchLoading(true);\r\n        const { data } = await user_service.searchFriendsByNick(searchNick);\r\n        setSearchResult(data);\r\n        setSearchLoading(false);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    if (searchNick !== \"\") searching();\r\n  }, [searchNick]);\r\n\r\n  return (\r\n    <>\r\n      <SMF.MyFriendsGlobal />\r\n      <SMF.MyFriendsContainer>\r\n        {/* 지원 */}\r\n        <SMF.MyFriendSupportBox>\r\n          {/* 친구요청 */}\r\n          <SMF.MyFriendBtn\r\n            title=\"친구추가\"\r\n            onClick={() =>\r\n              dispatch(modalState({ active: true, type: \"friend\" }))\r\n            }\r\n          >\r\n            <i className=\"fa-solid fa-user-plus\"></i>\r\n            <SMF.RequestCount count={Object.entries(request_friends).length}>\r\n              {Object.entries(request_friends).length}\r\n            </SMF.RequestCount>\r\n          </SMF.MyFriendBtn>\r\n          {/* 친구 검색 */}\r\n          <SMF.MyFriendSearchBtn onClick={() => setSearchState((c) => !c)}>\r\n            {!searchState ? (\r\n              <i className=\"fa-solid fa-magnifying-glass\"></i>\r\n            ) : (\r\n              <i className=\"fa-solid fa-x\"></i>\r\n            )}\r\n          </SMF.MyFriendSearchBtn>\r\n        </SMF.MyFriendSupportBox>\r\n        {/* 친구검색 부분 */}\r\n        <SMF.MyFriendSearchBox show={searchState}>\r\n          <SMF.MyFriendSearchInput\r\n            placeholder=\"친구 닉네임\"\r\n            value={searchNick}\r\n            onChange={(e: InputChange) => setSearchNick(e.target.value)}\r\n          />\r\n          <SMF.FriendSearchBtn>\r\n            <i className=\"fa-solid fa-magnifying-glass\"></i>\r\n          </SMF.FriendSearchBtn>\r\n        </SMF.MyFriendSearchBox>\r\n\r\n        {/* 친구들 리스트 */}\r\n        <SMF.MyFriendsList>\r\n          {searchState && searchNick !== \"\" ? (\r\n            searchLoading ? (\r\n              <p>검색중...</p>\r\n            ) : searchResult.length ? (\r\n              searchResult.map((val) => <MyFriendLi user={val} />)\r\n            ) : (\r\n              <p>조건에 맞는 친구가 없습니다</p>\r\n            )\r\n          ) : !Object.entries(friends).length ? (\r\n            <p>친구를 추가해 보세요</p>\r\n          ) : (\r\n            Object.entries(friends).map(([key, value]) => (\r\n              <MyFriendLi user={value} />\r\n            ))\r\n          )}\r\n        </SMF.MyFriendsList>\r\n      </SMF.MyFriendsContainer>\r\n    </>\r\n  );\r\n};\r\n"],"names":["MyFriendsGlobal","createGlobalStyle","MyFriendsContainer","styled","div","MyFriendSupportBox","MyFriendBtn","button","RequestCount","span","p","count","MyFriendSearchBtn","MyFriendSearchBox","show","MyFriendSearchInput","input","FriendSearchBtn","MyFriendsList","ul","MyFriendLi","li","MyFriendLiProfileBox","MyFriendLiImgCircle","MyFriendLiImg","img","MyFriendOnlineCircle","MyFriendLiNickname","MyFriendSupBox","menu","_ref","user","menuRef","useRef","setMenu","useState","useEffect","handleContextMenu","e","preventDefault","document","addEventListener","removeEventListener","current","focus","_jsxs","SMF","onMouseDown","children","_jsx","src","profile_img","nickname","ref","tabIndex","onBlur","async","user_service","deleteFriend","err","msg","AxiosError","alert","id","MyFriends","dispatch","useDispatch","request_friends","useSelector","state","friend","friends","searchState","setSearchState","searchNick","setSearchNick","searchLoading","setSearchLoading","searchResult","setSearchResult","useMemo","data","searchFriendsByNick","console","log","searching","_Fragment","title","onClick","modalState","active","type","className","Object","entries","length","c","placeholder","value","onChange","target","map","val","_ref2","key"],"sourceRoot":""}