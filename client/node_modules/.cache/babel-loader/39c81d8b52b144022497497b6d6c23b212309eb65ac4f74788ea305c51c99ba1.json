{"ast":null,"code":"import { AxiosError } from \"../error/error\";\nimport { HttpClient } from \"../network/http\";\nexport class authService extends HttpClient {\n  // 이메일 중복 체크\n  async emailOverlap(data) {\n    try {\n      return await this.axiosFetch(\"/email/overlap\", {\n        method: \"post\",\n        body: data\n      });\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  // 닉네임 중복 체크\n  async nicknameOverlap(data) {\n    try {\n      return await this.axiosFetch(\"/nickname/overlap\", {\n        method: \"post\",\n        body: data\n      });\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  // 인증코드  ----------------\n  async resendAuthcode(data) {\n    try {\n      return await this.axiosFetch(\"/send_authcode\", {\n        method: \"post\",\n        body: data\n      });\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  // 로그인 ---------------------------------\n  async login(data) {\n    try {\n      return await this.axiosFetch(\"/login\", {\n        method: \"post\",\n        body: data\n      });\n    } catch (err) {\n      throw AxiosError(err);\n    }\n  }\n\n  // 로그아웃\n  async logout() {\n    try {\n      return await this.axiosFetch(\"/logout\", {\n        method: \"post\"\n      });\n    } catch (err) {\n      throw err;\n    }\n  }\n}\nexport const auth_service = new authService();","map":{"version":3,"names":["AxiosError","HttpClient","authService","emailOverlap","data","axiosFetch","method","body","err","nicknameOverlap","resendAuthcode","login","logout","auth_service"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/service/auth.service.ts"],"sourcesContent":["import { AxiosError } from \"../error/error\";\r\nimport { HttpClient } from \"../network/http\";\r\n\r\nimport { User } from \"../types/user\";\r\n\r\nexport class authService extends HttpClient {\r\n  // 이메일 중복 체크\r\n  async emailOverlap(data: FormData) {\r\n    try {\r\n      return await this.axiosFetch<boolean>(\"/email/overlap\", {\r\n        method: \"post\",\r\n        body: data,\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  // 닉네임 중복 체크\r\n  async nicknameOverlap(data: FormData) {\r\n    try {\r\n      return await this.axiosFetch<boolean>(\"/nickname/overlap\", {\r\n        method: \"post\",\r\n        body: data,\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  // 인증코드  ----------------\r\n  async resendAuthcode(data: FormData) {\r\n    try {\r\n      return await this.axiosFetch<boolean>(\"/send_authcode\", {\r\n        method: \"post\",\r\n        body: data,\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  // 로그인 ---------------------------------\r\n  async login(data: FormData) {\r\n    try {\r\n      return await this.axiosFetch<User>(\"/login\", {\r\n        method: \"post\",\r\n        body: data,\r\n      });\r\n    } catch (err) {\r\n      throw AxiosError(err);\r\n    }\r\n  }\r\n\r\n  // 로그아웃\r\n  async logout() {\r\n    try {\r\n      return await this.axiosFetch<string>(\"/logout\", {\r\n        method: \"post\",\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n}\r\n\r\nexport const auth_service = new authService();\r\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,UAAU,QAAQ,iBAAiB;AAI5C,OAAO,MAAMC,WAAW,SAASD,UAAU,CAAC;EAC1C;EACA,MAAME,YAAYA,CAACC,IAAc,EAAE;IACjC,IAAI;MACF,OAAO,MAAM,IAAI,CAACC,UAAU,CAAU,gBAAgB,EAAE;QACtDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACR,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZ,MAAMA,GAAG;IACX;EACF;;EAEA;EACA,MAAMC,eAAeA,CAACL,IAAc,EAAE;IACpC,IAAI;MACF,OAAO,MAAM,IAAI,CAACC,UAAU,CAAU,mBAAmB,EAAE;QACzDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACR,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZ,MAAMA,GAAG;IACX;EACF;;EAEA;EACA,MAAME,cAAcA,CAACN,IAAc,EAAE;IACnC,IAAI;MACF,OAAO,MAAM,IAAI,CAACC,UAAU,CAAU,gBAAgB,EAAE;QACtDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACR,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZ,MAAMA,GAAG;IACX;EACF;;EAEA;EACA,MAAMG,KAAKA,CAACP,IAAc,EAAE;IAC1B,IAAI;MACF,OAAO,MAAM,IAAI,CAACC,UAAU,CAAO,QAAQ,EAAE;QAC3CC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACR,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZ,MAAMR,UAAU,CAACQ,GAAG,CAAC;IACvB;EACF;;EAEA;EACA,MAAMI,MAAMA,CAAA,EAAG;IACb,IAAI;MACF,OAAO,MAAM,IAAI,CAACP,UAAU,CAAS,SAAS,EAAE;QAC9CC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZ,MAAMA,GAAG;IACX;EACF;AACF;AAEA,OAAO,MAAMK,YAAY,GAAG,IAAIX,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}