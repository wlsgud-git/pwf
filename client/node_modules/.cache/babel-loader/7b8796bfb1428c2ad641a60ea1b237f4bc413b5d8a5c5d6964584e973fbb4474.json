{"ast":null,"code":"// import { getUser } from \"../reducer/userSlice\";\nimport { streamService } from \"../../service/stream.service\";\n\n// import { AppDispatch } from \"\";\n\n// types\n// import { UserAction, UserActionTypes } from \"../../types/user\";\n\nclass RoomAction extends streamService {\n  //   requestFriendHandle = createAsyncThunk(\n  //     \"request/friend\",\n  //     async (data: FormData): Promise<any> => {\n  //       try {\n  //         let res = await this.handleRequestFriend(data);\n  //         return await res!;\n  //       } catch (error) {\n  //         alert(error);\n  //       }\n  //     }\n  //   );\n}\nexport let roomAction = new RoomAction();","map":{"version":3,"names":["streamService","RoomAction","roomAction"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/redux/actions/roomAction.ts"],"sourcesContent":["// import { getUser } from \"../reducer/userSlice\";\r\nimport { streamService } from \"../../service/stream.service\";\r\nimport { userService } from \"../../service/user.service\";\r\n// import { AppDispatch } from \"\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// types\r\n// import { UserAction, UserActionTypes } from \"../../types/user\";\r\n\r\nclass RoomAction extends streamService {\r\n  //   requestFriendHandle = createAsyncThunk(\r\n  //     \"request/friend\",\r\n  //     async (data: FormData): Promise<any> => {\r\n  //       try {\r\n  //         let res = await this.handleRequestFriend(data);\r\n  //         return await res!;\r\n  //       } catch (error) {\r\n  //         alert(error);\r\n  //       }\r\n  //     }\r\n  //   );\r\n}\r\n\r\nexport let roomAction = new RoomAction();\r\n"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,8BAA8B;;AAE5D;;AAGA;AACA;;AAEA,MAAMC,UAAU,SAASD,aAAa,CAAC;EACrC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAAA;AAGF,OAAO,IAAIE,UAAU,GAAG,IAAID,UAAU,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}