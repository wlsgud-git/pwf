{"ast":null,"code":"import{HttpClient}from\"../network/http\";export class userService extends HttpClient{// 유저 ----------------\nasync getUser(){try{return await this.axiosFetch(\"/current\",{method:\"get\"});}catch(err){throw err;}}async deleteUser(email){try{return await this.axiosFetch(`/delete/${email}`,{method:\"delete\"});}catch(err){throw err;}}// 친구요청 ------------------------\n//\nasync handleRequestFriend(data){try{return await this.axiosFetch(`/request/friend/response`,{method:\"post\",body:data});}catch(err){throw err;}}// 친구요청\nasync requestFriend(data){try{return await this.axiosFetch(`/request/friend`,{method:\"post\",body:data});}catch(err){throw err;}}// signup -----------------------------\n// 회원가입\nasync account(data){try{return await this.axiosFetch(\"/account\",{method:\"post\",body:data});}catch(err){throw err;}}//회원가입 유저정보 보내기\nasync accountUser(data){try{return await this.axiosFetch(`/account/user`,{method:\"post\",body:data});}catch(err){throw err;}}async passwordChange(data){try{return await this.axiosFetch(\"/password_change\",{method:\"post\",body:data});}catch(err){throw err;}}}export const user_service=new userService();","map":{"version":3,"names":["HttpClient","userService","getUser","axiosFetch","method","err","deleteUser","email","handleRequestFriend","data","body","requestFriend","account","accountUser","passwordChange","user_service"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/service/user.service.ts"],"sourcesContent":["import { HttpClient } from \"../network/http\";\r\n\r\nimport { User } from \"../types/user\";\r\n\r\nexport class userService extends HttpClient {\r\n  // 유저 ----------------\r\n  async getUser() {\r\n    try {\r\n      return await this.axiosFetch<User>(\"/current\", { method: \"get\" });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  async deleteUser(email: string) {\r\n    try {\r\n      return await this.axiosFetch<string>(`/delete/${email}`, {\r\n        method: \"delete\",\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  // 친구요청 ------------------------\r\n  //\r\n  async handleRequestFriend(data: FormData) {\r\n    try {\r\n      return await this.axiosFetch<{\r\n        result: boolean;\r\n        sender: User;\r\n        msg: string;\r\n      }>(`/request/friend/response`, {\r\n        method: \"post\",\r\n        body: data,\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  // 친구요청\r\n  async requestFriend(data: FormData) {\r\n    try {\r\n      return await this.axiosFetch<User>(`/request/friend`, {\r\n        method: \"post\",\r\n        body: data,\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  // signup -----------------------------\r\n  // 회원가입\r\n  async account(data: FormData) {\r\n    try {\r\n      return await this.axiosFetch<boolean>(\"/account\", {\r\n        method: \"post\",\r\n        body: data,\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n  //회원가입 유저정보 보내기\r\n  async accountUser(data: FormData) {\r\n    try {\r\n      return await this.axiosFetch<User>(`/account/user`, {\r\n        method: \"post\",\r\n        body: data,\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  async passwordChange(data: FormData) {\r\n    try {\r\n      return await this.axiosFetch<string>(\"/password_change\", {\r\n        method: \"post\",\r\n        body: data,\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n}\r\n\r\nexport const user_service = new userService();\r\n"],"mappings":"AAAA,OAASA,UAAU,KAAQ,iBAAiB,CAI5C,MAAO,MAAM,CAAAC,WAAW,QAAS,CAAAD,UAAW,CAC1C;AACA,KAAM,CAAAE,OAAOA,CAAA,CAAG,CACd,GAAI,CACF,MAAO,MAAM,KAAI,CAACC,UAAU,CAAO,UAAU,CAAE,CAAEC,MAAM,CAAE,KAAM,CAAC,CAAC,CACnE,CAAE,MAAOC,GAAG,CAAE,CACZ,KAAM,CAAAA,GAAG,CACX,CACF,CAEA,KAAM,CAAAC,UAAUA,CAACC,KAAa,CAAE,CAC9B,GAAI,CACF,MAAO,MAAM,KAAI,CAACJ,UAAU,CAAS,WAAWI,KAAK,EAAE,CAAE,CACvDH,MAAM,CAAE,QACV,CAAC,CAAC,CACJ,CAAE,MAAOC,GAAG,CAAE,CACZ,KAAM,CAAAA,GAAG,CACX,CACF,CAEA;AACA;AACA,KAAM,CAAAG,mBAAmBA,CAACC,IAAc,CAAE,CACxC,GAAI,CACF,MAAO,MAAM,KAAI,CAACN,UAAU,CAIzB,0BAA0B,CAAE,CAC7BC,MAAM,CAAE,MAAM,CACdM,IAAI,CAAED,IACR,CAAC,CAAC,CACJ,CAAE,MAAOJ,GAAG,CAAE,CACZ,KAAM,CAAAA,GAAG,CACX,CACF,CAEA;AACA,KAAM,CAAAM,aAAaA,CAACF,IAAc,CAAE,CAClC,GAAI,CACF,MAAO,MAAM,KAAI,CAACN,UAAU,CAAO,iBAAiB,CAAE,CACpDC,MAAM,CAAE,MAAM,CACdM,IAAI,CAAED,IACR,CAAC,CAAC,CACJ,CAAE,MAAOJ,GAAG,CAAE,CACZ,KAAM,CAAAA,GAAG,CACX,CACF,CAEA;AACA;AACA,KAAM,CAAAO,OAAOA,CAACH,IAAc,CAAE,CAC5B,GAAI,CACF,MAAO,MAAM,KAAI,CAACN,UAAU,CAAU,UAAU,CAAE,CAChDC,MAAM,CAAE,MAAM,CACdM,IAAI,CAAED,IACR,CAAC,CAAC,CACJ,CAAE,MAAOJ,GAAG,CAAE,CACZ,KAAM,CAAAA,GAAG,CACX,CACF,CACA;AACA,KAAM,CAAAQ,WAAWA,CAACJ,IAAc,CAAE,CAChC,GAAI,CACF,MAAO,MAAM,KAAI,CAACN,UAAU,CAAO,eAAe,CAAE,CAClDC,MAAM,CAAE,MAAM,CACdM,IAAI,CAAED,IACR,CAAC,CAAC,CACJ,CAAE,MAAOJ,GAAG,CAAE,CACZ,KAAM,CAAAA,GAAG,CACX,CACF,CAEA,KAAM,CAAAS,cAAcA,CAACL,IAAc,CAAE,CACnC,GAAI,CACF,MAAO,MAAM,KAAI,CAACN,UAAU,CAAS,kBAAkB,CAAE,CACvDC,MAAM,CAAE,MAAM,CACdM,IAAI,CAAED,IACR,CAAC,CAAC,CACJ,CAAE,MAAOJ,GAAG,CAAE,CACZ,KAAM,CAAAA,GAAG,CACX,CACF,CACF,CAEA,MAAO,MAAM,CAAAU,YAAY,CAAG,GAAI,CAAAd,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}