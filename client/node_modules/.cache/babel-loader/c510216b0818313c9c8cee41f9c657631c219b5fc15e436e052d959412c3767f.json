{"ast":null,"code":"import { HttpClient } from \"../network/http\";\nexport class streamService extends HttpClient {\n  // 방 정보보기\n  async getStreamRoomData(id) {\n    try {\n      return await this.axiosFetch(\"/room/${id}\", {\n        method: \"get\"\n      });\n    } catch (err) {\n      throw err;\n    }\n  }\n  //\n  async createStreamRoom(data) {\n    try {\n      return await this.axiosFetch(\"/room\", {\n        method: \"post\",\n        body: data\n      });\n    } catch (err) {\n      throw err;\n    }\n  }\n}\nexport const stream_service = new streamService();","map":{"version":3,"names":["HttpClient","streamService","getStreamRoomData","id","axiosFetch","method","err","createStreamRoom","data","body","stream_service"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/service/streamservice.ts"],"sourcesContent":["import { HttpClient } from \"../network/http\";\r\nimport { Room } from \"../types/room\";\r\n\r\nexport class streamService extends HttpClient {\r\n  // 방 정보보기\r\n  async getStreamRoomData(id: number) {\r\n    try {\r\n      return await this.axiosFetch<Room>(\"/room/${id}\", { method: \"get\" });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n  //\r\n  async createStreamRoom(data: FormData) {\r\n    try {\r\n      return await this.axiosFetch<Room>(\"/room\", {\r\n        method: \"post\",\r\n        body: data,\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n}\r\n\r\nexport const stream_service = new streamService();\r\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,iBAAiB;AAG5C,OAAO,MAAMC,aAAa,SAASD,UAAU,CAAC;EAC5C;EACA,MAAME,iBAAiBA,CAACC,EAAU,EAAE;IAClC,IAAI;MACF,OAAO,MAAM,IAAI,CAACC,UAAU,CAAO,aAAa,EAAE;QAAEC,MAAM,EAAE;MAAM,CAAC,CAAC;IACtE,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAMA,GAAG;IACX;EACF;EACA;EACA,MAAMC,gBAAgBA,CAACC,IAAc,EAAE;IACrC,IAAI;MACF,OAAO,MAAM,IAAI,CAACJ,UAAU,CAAO,OAAO,EAAE;QAC1CC,MAAM,EAAE,MAAM;QACdI,IAAI,EAAED;MACR,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOF,GAAG,EAAE;MACZ,MAAMA,GAAG;IACX;EACF;AACF;AAEA,OAAO,MAAMI,cAAc,GAAG,IAAIT,aAAa,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}