{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashh1\\\\Desktop\\\\project\\\\PlayWithFriends\\\\client\\\\src\\\\components\\\\room\\\\main\\\\roomMain.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { socketClient } from \"../../../util/socket\";\nimport { emitter } from \"../../../util/event\";\n\n// css\nimport \"../../../css/room/main/roomMain.css\";\n\n// type\n\nimport { FriendStream } from \"../friendStream\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RoomMain = ({\n  user,\n  stream,\n  connects\n}) => {\n  _s();\n  let {\n    id\n  } = useParams();\n  let roomId = `room${id}`;\n  let navigate = useNavigate();\n  let localRef = useRef(null);\n  let localStreamRef = useRef(null);\n  let shareStreamRef = useRef(null);\n  let [audio, setAudio] = useState(true);\n  let [video, setVideo] = useState(true);\n  let [otherShare, setOtherShare] = useState({\n    state: false,\n    nickname: \"\"\n  });\n  let [shareStream, setShareStream] = useState(null);\n\n  // 다른 사용자 트랙 변경\n  let trackChange = stream => {\n    Object.entries(connects).forEach(([from, info]) => {\n      let sender = info.pc.getSenders().find(s => s.track.kind == \"video\");\n      if (sender) sender.replaceTrack(stream);\n    });\n  };\n\n  //내 화면 공유 시작\n  let ShareStart = async () => {\n    if (otherShare.state) {\n      alert(\"다른 이가 화면공유 중입니다\");\n      return;\n    }\n    let s_stream = await navigator.mediaDevices.getDisplayMedia({\n      video: true\n    });\n    let streamTrack = s_stream.getVideoTracks()[0];\n    socketClient.emit(\"share screen\", roomId, user.nickname);\n    trackChange(streamTrack);\n    setShareStream(s_stream);\n    setOtherShare(c => ({\n      ...c,\n      state: true\n    }));\n    streamTrack.onended = () => {\n      socketClient.emit(\"share screen off\", roomId);\n      trackChange(stream === null || stream === void 0 ? void 0 : stream.getVideoTracks()[0]);\n      setOtherShare(c => ({\n        ...c,\n        state: false\n      }));\n    };\n  };\n\n  // 다른 사용자가 화면 공유를 시작함\n  let otherScreenShare = from => {\n    setOtherShare(c => ({\n      ...c,\n      state: true,\n      nickname: from\n    }));\n  };\n\n  // 다른 사용자가 화면 공유를 종료함\n  let otherSCreenShareOFf = () => {\n    setOtherShare(c => ({\n      ...c,\n      state: false\n    }));\n  };\n\n  // 화면 on/off\n  let toggleMedia = type => {\n    let state = false;\n    if (!localStreamRef.current) return;\n    localStreamRef.current.getTracks().filter(track => track.kind === type).forEach(track => {\n      state = !track.enabled;\n      track.enabled = !track.enabled;\n    });\n    socketClient.emit(\"toggle track\", roomId, user.nickname, type, state);\n    type == \"audio\" ? setAudio(!audio) : setVideo(!video);\n  };\n\n  // 방을 떠남\n  let leaveRoom = () => {\n    if (user.nickname !== \"\") {\n      socketClient.emit(\"leave room\", user.nickname, roomId);\n      navigate(\"/\");\n    }\n  };\n\n  // useEffect ---------------\n\n  // 스트림 ref 설정\n  useEffect(() => {\n    if (stream) {\n      localRef.current.srcObject = stream;\n      localStreamRef.current = stream;\n    }\n  }, [stream]);\n\n  // 화면공유 소켓 초기화\n  useEffect(() => {\n    socketClient.on(\"share screen\", otherScreenShare);\n    socketClient.on(\"share screen off\", otherSCreenShareOFf);\n    return () => {\n      socketClient.off(\"share screen\", otherScreenShare);\n      socketClient.on(\"share screen off\", otherSCreenShareOFf);\n    };\n  }, []);\n  useEffect(() => {\n    let con = Object.entries(connects);\n    if (con.length && otherShare.state) {\n      let [shareMan, shareInfo] = con.find(([from, info]) => from === \"수찬갓\");\n      console.log(shareman);\n      // if(shareman)\n    }\n  }, [connects, otherShare.state]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pwf-streamRoom_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pwf-screen_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: otherShare.state ? \"share\" : \"user_screen_lists\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user_video_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: localRef,\n            autoPlay: true,\n            playsInline: true,\n            className: \"user_video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user_info_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: `fa-solid fa-microphone-lines${audio ? \"\" : \"-slash\"}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: `fa-solid fa-video${video ? \"\" : \"-slash\"}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: user.nickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), Object.entries(connects).map(([from, stream]) => /*#__PURE__*/_jsxDEV(FriendStream, {\n          from: from,\n          stream: stream\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"share_screen_container\",\n        style: {\n          display: otherShare.state ? \"flex\" : \"none\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: shareStreamRef,\n          autoPlay: true,\n          playsInline: true,\n          className: \"share_video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"streamRoom_footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user_video_options\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleMedia(\"audio\"),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fa-solid fa-microphone-lines${audio ? \"\" : \"-slash\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: audio ? \"음소거\" : \"음소거 해제\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          title: `비디오${video ? \"\" : \" 해제\"}`,\n          onClick: () => toggleMedia(\"video\"),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fa-solid fa-video${video ? \"\" : \"-slash\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: video ? \"비디오\" : \"비디오 해제\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room_options\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-user-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uCD08\\uB300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: ShareStart,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-brands fa-creative-commons-share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: `화면공유${otherShare.state ? \"X\" : \"\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-desktop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uB0B4 \\uBBF8\\uB514\\uC5B4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => emitter.emit(\"room menu\", true),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-brands fa-elementor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uBA54\\uB274\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"room_exit\",\n        onClick: leaveRoom,\n        children: \"\\uBC29\\uB098\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomMain, \"b2TgponpUOuoMHTfRB6mM3OsDsQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = RoomMain;\nvar _c;\n$RefreshReg$(_c, \"RoomMain\");","map":{"version":3,"names":["useEffect","useRef","useState","useNavigate","useParams","socketClient","emitter","FriendStream","jsxDEV","_jsxDEV","RoomMain","user","stream","connects","_s","id","roomId","navigate","localRef","localStreamRef","shareStreamRef","audio","setAudio","video","setVideo","otherShare","setOtherShare","state","nickname","shareStream","setShareStream","trackChange","Object","entries","forEach","from","info","sender","pc","getSenders","find","s","track","kind","replaceTrack","ShareStart","alert","s_stream","navigator","mediaDevices","getDisplayMedia","streamTrack","getVideoTracks","emit","c","onended","otherScreenShare","otherSCreenShareOFf","toggleMedia","type","current","getTracks","filter","enabled","leaveRoom","srcObject","on","off","con","length","shareMan","shareInfo","console","log","shareman","className","children","ref","autoPlay","playsInline","fileName","_jsxFileName","lineNumber","columnNumber","map","style","display","onClick","title","_c","$RefreshReg$"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/components/room/main/roomMain.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport { socketClient } from \"../../../util/socket\";\r\nimport { emitter } from \"../../../util/event\";\r\n\r\n// css\r\nimport \"../../../css/room/main/roomMain.css\";\r\n\r\n// type\r\nimport { User } from \"../../../types/user\";\r\nimport { PeerConnects } from \"../../../types/room\";\r\nimport { FriendStream } from \"../friendStream\";\r\nimport { info } from \"console\";\r\n\r\ninterface RoomMainProps {\r\n  user: User;\r\n  stream: MediaStream | null;\r\n  connects: object;\r\n}\r\n\r\nexport const RoomMain = ({ user, stream, connects }: RoomMainProps) => {\r\n  let { id } = useParams();\r\n  let roomId = `room${id}`;\r\n  let navigate = useNavigate();\r\n\r\n  let localRef = useRef<HTMLVideoElement | null>(null);\r\n  let localStreamRef = useRef<MediaStream | null>(null);\r\n\r\n  let shareStreamRef = useRef<HTMLVideoElement | null>(null);\r\n\r\n  let [audio, setAudio] = useState<boolean>(true);\r\n  let [video, setVideo] = useState<boolean>(true);\r\n\r\n  let [otherShare, setOtherShare] = useState<{\r\n    state: boolean;\r\n    nickname: string;\r\n  }>({ state: false, nickname: \"\" });\r\n  let [shareStream, setShareStream] = useState<MediaStream | null>(null);\r\n\r\n  // 다른 사용자 트랙 변경\r\n  let trackChange = (stream: any) => {\r\n    Object.entries(connects).forEach(([from, info]) => {\r\n      let sender = info.pc\r\n        .getSenders()\r\n        .find((s: any) => s.track.kind == \"video\");\r\n      if (sender) sender.replaceTrack(stream);\r\n    });\r\n  };\r\n\r\n  //내 화면 공유 시작\r\n  let ShareStart = async () => {\r\n    if (otherShare.state) {\r\n      alert(\"다른 이가 화면공유 중입니다\");\r\n      return;\r\n    }\r\n    let s_stream = await navigator.mediaDevices.getDisplayMedia({\r\n      video: true,\r\n    });\r\n    let streamTrack = s_stream.getVideoTracks()[0];\r\n\r\n    socketClient.emit(\"share screen\", roomId, user.nickname);\r\n    trackChange(streamTrack);\r\n    setShareStream(s_stream);\r\n    setOtherShare((c) => ({ ...c, state: true }));\r\n\r\n    streamTrack.onended = () => {\r\n      socketClient.emit(\"share screen off\", roomId);\r\n      trackChange(stream?.getVideoTracks()[0]);\r\n      setOtherShare((c) => ({ ...c, state: false }));\r\n    };\r\n  };\r\n\r\n  // 다른 사용자가 화면 공유를 시작함\r\n  let otherScreenShare = (from: string) => {\r\n    setOtherShare((c) => ({ ...c, state: true, nickname: from }));\r\n  };\r\n\r\n  // 다른 사용자가 화면 공유를 종료함\r\n  let otherSCreenShareOFf = () => {\r\n    setOtherShare((c) => ({ ...c, state: false }));\r\n  };\r\n\r\n  // 화면 on/off\r\n  let toggleMedia = (type: \"audio\" | \"video\") => {\r\n    let state: boolean = false;\r\n    if (!localStreamRef.current) return;\r\n\r\n    localStreamRef.current\r\n      .getTracks()\r\n      .filter((track) => track.kind === type)\r\n      .forEach((track) => {\r\n        state = !track.enabled;\r\n        track.enabled = !track.enabled;\r\n      });\r\n\r\n    socketClient.emit(\"toggle track\", roomId, user.nickname, type, state);\r\n    type == \"audio\" ? setAudio(!audio) : setVideo(!video);\r\n  };\r\n\r\n  // 방을 떠남\r\n  let leaveRoom = () => {\r\n    if (user.nickname !== \"\") {\r\n      socketClient.emit(\"leave room\", user.nickname, roomId);\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  // useEffect ---------------\r\n\r\n  // 스트림 ref 설정\r\n  useEffect(() => {\r\n    if (stream) {\r\n      localRef.current!.srcObject = stream;\r\n      localStreamRef.current = stream;\r\n    }\r\n  }, [stream]);\r\n\r\n  // 화면공유 소켓 초기화\r\n  useEffect(() => {\r\n    socketClient.on(\"share screen\", otherScreenShare);\r\n    socketClient.on(\"share screen off\", otherSCreenShareOFf);\r\n\r\n    return () => {\r\n      socketClient.off(\"share screen\", otherScreenShare);\r\n      socketClient.on(\"share screen off\", otherSCreenShareOFf);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let con = Object.entries(connects);\r\n    if (con.length && otherShare.state) {\r\n      let [shareMan, shareInfo] = con.find(([from, info]) => from === \"수찬갓\");\r\n      console.log(shareman);\r\n      // if(shareman)\r\n    }\r\n  }, [connects, otherShare.state]);\r\n\r\n  return (\r\n    <div className=\"pwf-streamRoom_container\">\r\n      {/* 화면창 */}\r\n      <div className=\"pwf-screen_container\">\r\n        {/* p2p 연결화면들 */}\r\n        <ul className={otherShare.state ? \"share\" : \"user_screen_lists\"}>\r\n          {/* 내 화면 */}\r\n          <div className=\"user_video_box\">\r\n            {/* 유저 비디오 */}\r\n            <video\r\n              ref={localRef}\r\n              autoPlay\r\n              playsInline\r\n              className=\"user_video\"\r\n            ></video>\r\n            {/* 유저 정보 */}\r\n            <div className=\"user_info_box\">\r\n              <div>\r\n                <span>\r\n                  <i\r\n                    className={`fa-solid fa-microphone-lines${\r\n                      audio ? \"\" : \"-slash\"\r\n                    }`}\r\n                  ></i>\r\n                </span>\r\n                <span>\r\n                  <i\r\n                    className={`fa-solid fa-video${video ? \"\" : \"-slash\"}`}\r\n                  ></i>\r\n                </span>\r\n              </div>\r\n              <span>{user.nickname}</span>\r\n            </div>\r\n          </div>\r\n          {/* 다른 참가자 스트리밍 */}\r\n          {Object.entries(connects).map(([from, stream]) => (\r\n            <FriendStream from={from} stream={stream} />\r\n          ))}\r\n        </ul>\r\n        {/* 화면 공유시 공유창 */}\r\n        <div\r\n          className=\"share_screen_container\"\r\n          style={{ display: otherShare.state ? \"flex\" : \"none\" }}\r\n        >\r\n          <video\r\n            ref={shareStreamRef}\r\n            autoPlay\r\n            playsInline\r\n            className=\"share_video\"\r\n          ></video>\r\n        </div>\r\n      </div>\r\n      {/* main footer */}\r\n      <footer className=\"streamRoom_footer\">\r\n        {/* 유저 음성 및 비디오 */}\r\n        <div className=\"user_video_options\">\r\n          {/* 음성 */}\r\n          <button onClick={() => toggleMedia(\"audio\")}>\r\n            <i\r\n              className={`fa-solid fa-microphone-lines${audio ? \"\" : \"-slash\"}`}\r\n            ></i>\r\n            <span>{audio ? \"음소거\" : \"음소거 해제\"}</span>\r\n          </button>\r\n          {/* 비디오 */}\r\n          <button\r\n            title={`비디오${video ? \"\" : \" 해제\"}`}\r\n            onClick={() => toggleMedia(\"video\")}\r\n          >\r\n            <i className={`fa-solid fa-video${video ? \"\" : \"-slash\"}`}></i>\r\n            <span>{video ? \"비디오\" : \"비디오 해제\"}</span>\r\n          </button>\r\n        </div>\r\n\r\n        {/* 비디오 메뉴 */}\r\n        <div className=\"room_options\">\r\n          <button>\r\n            <i className=\"fa-solid fa-user-plus\"></i>\r\n            <span>초대</span>\r\n          </button>\r\n\r\n          <button onClick={ShareStart}>\r\n            <i className=\"fa-brands fa-creative-commons-share\"></i>\r\n            <span>{`화면공유${otherShare.state ? \"X\" : \"\"}`}</span>\r\n          </button>\r\n\r\n          <button>\r\n            <i className=\"fa-solid fa-desktop\"></i>\r\n            <span>내 미디어</span>\r\n          </button>\r\n\r\n          <button onClick={() => emitter.emit(\"room menu\", true)}>\r\n            <i className=\"fa-brands fa-elementor\"></i>\r\n            <span>메뉴</span>\r\n          </button>\r\n        </div>\r\n        {/* 방 나가기 */}\r\n        <button className=\"room_exit\" onClick={leaveRoom}>\r\n          방나가기\r\n        </button>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}