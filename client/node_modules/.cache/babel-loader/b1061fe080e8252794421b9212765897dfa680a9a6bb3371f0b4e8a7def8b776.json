{"ast":null,"code":"import{useState}from\"react\";// css\nimport\"../../css/modal/authcode.css\";// service\nimport{auth_service}from\"../../service/auth.service\";// util\nimport{createFormData}from\"../../util/form\";// type\nimport{emitter}from\"../../util/event\";import{AxiosError}from\"../../error/error\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const Authcode=_ref=>{let{show,setShow,email,callback}=_ref;let[authcode,setAuthcode]=useState(\"\");let[time,setTime]=useState(180);// 모달 닫을때 해야될 것\nconst reset=()=>{setShow(false);setAuthcode(\"\");emitter.emit(\"modal\",{type:\"authcode\"});};const authcodeCheck=async e=>{e.preventDefault();try{await auth_service.checkAuthcode(createFormData({email,authcode}));reset();callback();}catch(err){let error=AxiosError(err);console.log(error);}};const resend=async()=>{try{let{message}=await auth_service.resendAuthcode(createFormData({email}));alert(message);setTime(180);}catch(err){console.log(err);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"authcode_modal\",style:{display:show?\"flex\":\"none\"},children:[/*#__PURE__*/_jsx(\"header\",{className:\"modal_header\",children:/*#__PURE__*/_jsx(\"button\",{onClick:reset,children:\"X\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"authcode_container\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"authcode_icon\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fa-solid fa-envelope-open-text\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"span\",{className:\"authcode_text\",children:[email,\"\\uB85C \\uC778\\uC99D\\uBC88\\uD638\\uAC00 \\uBC1C\\uC1A1\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"resend_btn\",onClick:resend,children:\"\\uCF54\\uB4DC \\uC7AC\\uC804\\uC1A1\"})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"authcode_form\",onSubmit:authcodeCheck,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"authcode_input_box\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:authcode,placeholder:\"\\uC778\\uC99D\\uBC88\\uD638\",onChange:e=>setAuthcode(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{children:\"03 : 00\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"authcode_btn\",children:\"\\uC778\\uC99D\\uBC88\\uD638 \\uD655\\uC778\"})]})]})]});};","map":{"version":3,"names":["useState","auth_service","createFormData","emitter","AxiosError","jsx","_jsx","jsxs","_jsxs","Authcode","_ref","show","setShow","email","callback","authcode","setAuthcode","time","setTime","reset","emit","type","authcodeCheck","e","preventDefault","checkAuthcode","err","error","console","log","resend","message","resendAuthcode","alert","className","style","display","children","onClick","onSubmit","value","placeholder","onChange","target"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/components/modal/authcode.tsx"],"sourcesContent":["import { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\n// css\r\nimport \"../../css/modal/authcode.css\";\r\n\r\n// service\r\nimport { auth_service } from \"../../service/auth.service\";\r\nimport { user_service } from \"../../service/user.service\";\r\n// util\r\nimport { createFormData } from \"../../util/form\";\r\n\r\n// type\r\nimport { User } from \"../../types/user\";\r\nimport { FormSubmit, InputChange } from \"../../types/event\";\r\nimport { ModalList } from \"../../page/modal\";\r\nimport { emitter } from \"../../util/event\";\r\nimport { AxiosError } from \"../../error/error\";\r\n\r\ninterface AuthcodeProps {\r\n  show: boolean;\r\n  setShow: any;\r\n  email: string;\r\n  callback: () => void;\r\n}\r\n\r\nexport const Authcode = ({ show, setShow, email, callback }: AuthcodeProps) => {\r\n  let [authcode, setAuthcode] = useState<string>(\"\");\r\n  let [time, setTime] = useState<number>(180);\r\n\r\n  // 모달 닫을때 해야될 것\r\n  const reset = () => {\r\n    setShow(false);\r\n    setAuthcode(\"\");\r\n    emitter.emit(\"modal\", { type: \"authcode\" });\r\n  };\r\n\r\n  const authcodeCheck = async (e: FormSubmit) => {\r\n    e.preventDefault();\r\n    try {\r\n      await auth_service.checkAuthcode(createFormData({ email, authcode }));\r\n\r\n      reset();\r\n      callback();\r\n    } catch (err) {\r\n      let error = AxiosError(err);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resend = async () => {\r\n    try {\r\n      let { message } = await auth_service.resendAuthcode(\r\n        createFormData({ email })\r\n      );\r\n      alert(message);\r\n      setTime(180);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"authcode_modal\" style={{ display: show ? \"flex\" : \"none\" }}>\r\n      <header className=\"modal_header\">\r\n        <button onClick={reset}>X</button>\r\n      </header>\r\n\r\n      <div className=\"authcode_container\">\r\n        {/* 인증코드 아이콘 */}\r\n        <span className=\"authcode_icon\">\r\n          <i className=\"fa-solid fa-envelope-open-text\"></i>\r\n        </span>\r\n        {/* 유저 이메일 정보와 코드 재전송 */}\r\n        <div>\r\n          <span className=\"authcode_text\">\r\n            {email}로 인증번호가 발송되었습니다.\r\n          </span>\r\n\r\n          <button className=\"resend_btn\" onClick={resend}>\r\n            코드 재전송\r\n          </button>\r\n        </div>\r\n        {/* 인증번호 폼 */}\r\n        <form className=\"authcode_form\" onSubmit={authcodeCheck}>\r\n          <div className=\"authcode_input_box\">\r\n            <input\r\n              type=\"text\"\r\n              value={authcode}\r\n              placeholder=\"인증번호\"\r\n              onChange={(e: InputChange) => setAuthcode(e.target.value)}\r\n            />\r\n            <span>03 : 00</span>\r\n          </div>\r\n          <button className=\"authcode_btn\">인증번호 확인</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}