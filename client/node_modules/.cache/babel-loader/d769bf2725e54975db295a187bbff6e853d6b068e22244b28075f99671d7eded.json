{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashh1\\\\Desktop\\\\project\\\\PlayWithFriends\\\\client\\\\src\\\\components\\\\room\\\\main\\\\roomMain.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { socketClient } from \"../../../util/socket\";\nimport { emitter } from \"../../../util/event\";\n\n// css\nimport \"../../../css/room/main/roomMain.css\";\n\n// type\n\nimport { FriendStream } from \"../friendStream\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RoomMain = ({\n  user,\n  stream,\n  connects,\n  participants\n}) => {\n  _s();\n  let {\n    id\n  } = useParams();\n  let roomId = `room${id}`;\n  let navigate = useNavigate();\n  let localRef = useRef(null);\n  let localStreamRef = useRef(null);\n  let shareStreamRef = useRef(null);\n  let [audio, setAudio] = useState(true);\n  let [video, setVideo] = useState(true);\n  let [otherShare, setOtherShare] = useState({\n    state: false,\n    nickname: \"\"\n  });\n  let [shareStream, setShareStream] = useState(null);\n\n  // 다른 사용자 트랙 변경\n  let trackChange = stream => {\n    Object.entries(connects).forEach(([from, info]) => {\n      let sender = info.pc.getSenders().find(s => s.track.kind == \"video\");\n      if (sender) sender.replaceTrack(stream);\n    });\n  };\n\n  // 화면 공유 과정\n  let changeProcess = (streamTrack, stream, state) => {\n    state ? socketClient.emit(\"share screen\", roomId, user.nickname) : socketClient.emit(\"share screen off\", roomId);\n    setShareStream(stream);\n    trackChange(streamTrack);\n    setOtherShare(c => ({\n      ...c,\n      state,\n      nickname: user.nickname\n    }));\n  };\n\n  //내 화면 공유 시작\n  let ShareStart = async () => {\n    if (otherShare.state) {\n      alert(\"다른 이가 화면공유 중입니다\");\n      return;\n    }\n    try {\n      let s_stream = await navigator.mediaDevices.getDisplayMedia({\n        video: true\n      });\n      let streamTrack = s_stream.getVideoTracks()[0];\n      changeProcess(streamTrack, s_stream, true);\n      streamTrack.onended = () => {\n        changeProcess(stream === null || stream === void 0 ? void 0 : stream.getVideoTracks()[0], null, false);\n      };\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // 상대가 화면 공유 시작시 상대방의 비디오 트랙을 shareSTream으로 설정\n  useEffect(() => {\n    let con = Object.entries(connects);\n    if (con.length && otherShare.state && otherShare.nickname !== \"\") {\n      let shareInfo = con.find(([from, info]) => from === otherShare.nickname);\n      if (shareInfo) {\n        let info = shareInfo[1];\n        info.pc.getReceivers().forEach(receive => {\n          setShareStream(new MediaStream([receive.track]));\n        });\n      }\n    }\n  }, [connects, otherShare.nickname]);\n\n  // 공유 스트림이 변경되면 공유 ref.srcObject 변경\n  useEffect(() => {\n    if (shareStream && shareStreamRef.current) {\n      shareStreamRef.current.srcObject = shareStream;\n    }\n  }, [shareStream]);\n\n  // 다른 사용자가 화면 공유를 시작함\n  let otherScreenShare = from => {\n    setOtherShare(c => ({\n      ...c,\n      state: true,\n      nickname: from\n    }));\n  };\n\n  // 다른 사용자가 화면 공유를 종료함\n  let otherSCreenShareOFf = () => {\n    setShareStream(null);\n    setOtherShare(c => ({\n      ...c,\n      state: false,\n      nickname: \"\"\n    }));\n  };\n\n  // 화면 on/off\n  let toggleMedia = type => {\n    let state = false;\n    if (!localStreamRef.current) return;\n    localStreamRef.current.getTracks().filter(track => track.kind === type).forEach(track => {\n      state = !track.enabled;\n      track.enabled = !track.enabled;\n    });\n    socketClient.emit(\"toggle track\", roomId, user.nickname, type, state);\n    type == \"audio\" ? setAudio(!audio) : setVideo(!video);\n  };\n\n  // 방을 떠남\n  let leaveRoom = () => {\n    if (user.nickname !== \"\") {\n      socketClient.emit(\"leave room\", user.nickname, roomId);\n      navigate(\"/\");\n    }\n  };\n\n  // useEffect ---------------\n\n  // 스트림 ref 설정\n  useEffect(() => {\n    if (stream) {\n      localRef.current.srcObject = stream;\n      localStreamRef.current = stream;\n    }\n  }, [stream]);\n\n  // 화면공유 소켓 초기화\n  useEffect(() => {\n    socketClient.on(\"share screen\", otherScreenShare);\n    socketClient.on(\"share screen off\", otherSCreenShareOFf);\n    return () => {\n      socketClient.off(\"share screen\", otherScreenShare);\n      socketClient.on(\"share screen off\", otherSCreenShareOFf);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pwf-streamRoom_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pwf-screen_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: otherShare.state ? \"share\" : \"user_screen_lists\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user_video_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: localRef,\n            autoPlay: true,\n            playsInline: true,\n            className: \"user_video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user_info_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: `fa-solid fa-microphone-lines${audio ? \"\" : \"-slash\"}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: `fa-solid fa-video${video ? \"\" : \"-slash\"}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: user.nickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), Object.entries(connects).map(([from, stream]) => /*#__PURE__*/_jsxDEV(FriendStream, {\n          from: from,\n          stream: stream\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"share_screen_container\",\n        style: {\n          display: otherShare.state ? \"flex\" : \"none\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: shareStreamRef,\n          autoPlay: true,\n          playsInline: true,\n          className: \"share_video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"share_user_nickname\",\n          children: otherShare.nickname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"streamRoom_footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user_video_options\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleMedia(\"audio\"),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fa-solid fa-microphone-lines${audio ? \"\" : \"-slash\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: audio ? \"음소거\" : \"음소거 해제\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          title: `비디오${video ? \"\" : \" 해제\"}`,\n          onClick: () => toggleMedia(\"video\"),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fa-solid fa-video${video ? \"\" : \"-slash\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: video ? \"비디오\" : \"비디오 해제\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room_options\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => emitter.emit(\"modal\", {\n            type: \"invitation\",\n            open: true\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-user-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uCD08\\uB300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: ShareStart,\n          style: {\n            color: otherShare.state ? \"var(--pwf-blue)\" : \"white\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-brands fa-creative-commons-share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD654\\uBA74\\uACF5\\uC720\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-desktop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uB0B4 \\uBBF8\\uB514\\uC5B4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => emitter.emit(\"room menu\", true),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-brands fa-elementor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uBA54\\uB274\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"room_exit\",\n        onClick: leaveRoom,\n        children: \"\\uBC29\\uB098\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomMain, \"Yy8+wCWH+M7BcEocy34Ba2bNdpQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = RoomMain;\nvar _c;\n$RefreshReg$(_c, \"RoomMain\");","map":{"version":3,"names":["useEffect","useRef","useState","useNavigate","useParams","socketClient","emitter","FriendStream","jsxDEV","_jsxDEV","RoomMain","user","stream","connects","participants","_s","id","roomId","navigate","localRef","localStreamRef","shareStreamRef","audio","setAudio","video","setVideo","otherShare","setOtherShare","state","nickname","shareStream","setShareStream","trackChange","Object","entries","forEach","from","info","sender","pc","getSenders","find","s","track","kind","replaceTrack","changeProcess","streamTrack","emit","c","ShareStart","alert","s_stream","navigator","mediaDevices","getDisplayMedia","getVideoTracks","onended","err","console","log","con","length","shareInfo","getReceivers","receive","MediaStream","current","srcObject","otherScreenShare","otherSCreenShareOFf","toggleMedia","type","getTracks","filter","enabled","leaveRoom","on","off","className","children","ref","autoPlay","playsInline","fileName","_jsxFileName","lineNumber","columnNumber","map","style","display","onClick","title","open","color","_c","$RefreshReg$"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/components/room/main/roomMain.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport { socketClient } from \"../../../util/socket\";\r\nimport { emitter } from \"../../../util/event\";\r\n\r\n// css\r\nimport \"../../../css/room/main/roomMain.css\";\r\n\r\n// type\r\nimport { User } from \"../../../types/user\";\r\nimport { Room } from \"../../../types/room\";\r\nimport { PeerConnects } from \"../../../types/room\";\r\nimport { FriendStream } from \"../friendStream\";\r\nimport { info } from \"console\";\r\n\r\ninterface RoomMainProps {\r\n  user: User;\r\n  stream: MediaStream | null;\r\n  connects: object;\r\n  participants: Room[\"participants\"];\r\n}\r\n\r\nexport const RoomMain = ({\r\n  user,\r\n  stream,\r\n  connects,\r\n  participants,\r\n}: RoomMainProps) => {\r\n  let { id } = useParams();\r\n  let roomId = `room${id}`;\r\n  let navigate = useNavigate();\r\n\r\n  let localRef = useRef<HTMLVideoElement | null>(null);\r\n  let localStreamRef = useRef<MediaStream | null>(null);\r\n\r\n  let shareStreamRef = useRef<HTMLVideoElement | null>(null);\r\n\r\n  let [audio, setAudio] = useState<boolean>(true);\r\n  let [video, setVideo] = useState<boolean>(true);\r\n\r\n  let [otherShare, setOtherShare] = useState<{\r\n    state: boolean;\r\n    nickname: string;\r\n  }>({ state: false, nickname: \"\" });\r\n  let [shareStream, setShareStream] = useState<MediaStream | null>(null);\r\n\r\n  // 다른 사용자 트랙 변경\r\n  let trackChange = (stream: any) => {\r\n    Object.entries(connects).forEach(([from, info]) => {\r\n      let sender = info.pc\r\n        .getSenders()\r\n        .find((s: any) => s.track.kind == \"video\");\r\n      if (sender) sender.replaceTrack(stream);\r\n    });\r\n  };\r\n\r\n  // 화면 공유 과정\r\n  let changeProcess = (\r\n    streamTrack: MediaStreamTrack | undefined,\r\n    stream: MediaStream | null,\r\n    state: boolean\r\n  ) => {\r\n    state\r\n      ? socketClient.emit(\"share screen\", roomId, user.nickname)\r\n      : socketClient.emit(\"share screen off\", roomId);\r\n\r\n    setShareStream(stream);\r\n    trackChange(streamTrack);\r\n    setOtherShare((c) => ({ ...c, state, nickname: user.nickname! }));\r\n  };\r\n\r\n  //내 화면 공유 시작\r\n  let ShareStart = async () => {\r\n    if (otherShare.state) {\r\n      alert(\"다른 이가 화면공유 중입니다\");\r\n      return;\r\n    }\r\n    try {\r\n      let s_stream = await navigator.mediaDevices.getDisplayMedia({\r\n        video: true,\r\n      });\r\n      let streamTrack = s_stream.getVideoTracks()[0];\r\n\r\n      changeProcess(streamTrack, s_stream, true);\r\n\r\n      streamTrack.onended = () => {\r\n        changeProcess(stream?.getVideoTracks()[0], null, false);\r\n      };\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  // 상대가 화면 공유 시작시 상대방의 비디오 트랙을 shareSTream으로 설정\r\n  useEffect(() => {\r\n    let con = Object.entries(connects);\r\n    if (con.length && otherShare.state && otherShare.nickname !== \"\") {\r\n      let shareInfo = con.find(([from, info]) => from === otherShare.nickname);\r\n      if (shareInfo) {\r\n        let info = shareInfo[1];\r\n        info.pc.getReceivers().forEach((receive: any) => {\r\n          setShareStream(new MediaStream([receive.track]));\r\n        });\r\n      }\r\n    }\r\n  }, [connects, otherShare.nickname]);\r\n\r\n  // 공유 스트림이 변경되면 공유 ref.srcObject 변경\r\n  useEffect(() => {\r\n    if (shareStream && shareStreamRef.current) {\r\n      shareStreamRef.current.srcObject = shareStream;\r\n    }\r\n  }, [shareStream]);\r\n\r\n  // 다른 사용자가 화면 공유를 시작함\r\n  let otherScreenShare = (from: string) => {\r\n    setOtherShare((c) => ({ ...c, state: true, nickname: from }));\r\n  };\r\n\r\n  // 다른 사용자가 화면 공유를 종료함\r\n  let otherSCreenShareOFf = () => {\r\n    setShareStream(null);\r\n    setOtherShare((c) => ({ ...c, state: false, nickname: \"\" }));\r\n  };\r\n\r\n  // 화면 on/off\r\n  let toggleMedia = (type: \"audio\" | \"video\") => {\r\n    let state: boolean = false;\r\n    if (!localStreamRef.current) return;\r\n\r\n    localStreamRef.current\r\n      .getTracks()\r\n      .filter((track) => track.kind === type)\r\n      .forEach((track) => {\r\n        state = !track.enabled;\r\n        track.enabled = !track.enabled;\r\n      });\r\n\r\n    socketClient.emit(\"toggle track\", roomId, user.nickname, type, state);\r\n    type == \"audio\" ? setAudio(!audio) : setVideo(!video);\r\n  };\r\n\r\n  // 방을 떠남\r\n  let leaveRoom = () => {\r\n    if (user.nickname !== \"\") {\r\n      socketClient.emit(\"leave room\", user.nickname, roomId);\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  // useEffect ---------------\r\n\r\n  // 스트림 ref 설정\r\n  useEffect(() => {\r\n    if (stream) {\r\n      localRef.current!.srcObject = stream;\r\n      localStreamRef.current = stream;\r\n    }\r\n  }, [stream]);\r\n\r\n  // 화면공유 소켓 초기화\r\n  useEffect(() => {\r\n    socketClient.on(\"share screen\", otherScreenShare);\r\n    socketClient.on(\"share screen off\", otherSCreenShareOFf);\r\n\r\n    return () => {\r\n      socketClient.off(\"share screen\", otherScreenShare);\r\n      socketClient.on(\"share screen off\", otherSCreenShareOFf);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"pwf-streamRoom_container\">\r\n      {/* 화면창 */}\r\n      <div className=\"pwf-screen_container\">\r\n        {/* p2p 연결화면들 */}\r\n        <ul className={otherShare.state ? \"share\" : \"user_screen_lists\"}>\r\n          {/* 내 화면 */}\r\n          <div className=\"user_video_box\">\r\n            {/* 유저 비디오 */}\r\n            <video\r\n              ref={localRef}\r\n              autoPlay\r\n              playsInline\r\n              className=\"user_video\"\r\n            ></video>\r\n            {/* 유저 정보 */}\r\n            <div className=\"user_info_box\">\r\n              <div>\r\n                <span>\r\n                  <i\r\n                    className={`fa-solid fa-microphone-lines${\r\n                      audio ? \"\" : \"-slash\"\r\n                    }`}\r\n                  ></i>\r\n                </span>\r\n                <span>\r\n                  <i\r\n                    className={`fa-solid fa-video${video ? \"\" : \"-slash\"}`}\r\n                  ></i>\r\n                </span>\r\n              </div>\r\n              <span>{user.nickname}</span>\r\n            </div>\r\n          </div>\r\n          {/* 다른 참가자 스트리밍 */}\r\n          {Object.entries(connects).map(([from, stream]) => (\r\n            <FriendStream from={from} stream={stream} />\r\n          ))}\r\n        </ul>\r\n        {/* 화면 공유시 공유창 */}\r\n        <div\r\n          className=\"share_screen_container\"\r\n          style={{ display: otherShare.state ? \"flex\" : \"none\" }}\r\n        >\r\n          <video\r\n            ref={shareStreamRef}\r\n            autoPlay\r\n            playsInline\r\n            className=\"share_video\"\r\n          ></video>\r\n          <span className=\"share_user_nickname\">{otherShare.nickname}</span>\r\n        </div>\r\n      </div>\r\n      {/* main footer */}\r\n      <footer className=\"streamRoom_footer\">\r\n        {/* 유저 음성 및 비디오 */}\r\n        <div className=\"user_video_options\">\r\n          {/* 음성 */}\r\n          <button onClick={() => toggleMedia(\"audio\")}>\r\n            <i\r\n              className={`fa-solid fa-microphone-lines${audio ? \"\" : \"-slash\"}`}\r\n            ></i>\r\n            <span>{audio ? \"음소거\" : \"음소거 해제\"}</span>\r\n          </button>\r\n          {/* 비디오 */}\r\n          <button\r\n            title={`비디오${video ? \"\" : \" 해제\"}`}\r\n            onClick={() => toggleMedia(\"video\")}\r\n          >\r\n            <i className={`fa-solid fa-video${video ? \"\" : \"-slash\"}`}></i>\r\n            <span>{video ? \"비디오\" : \"비디오 해제\"}</span>\r\n          </button>\r\n        </div>\r\n\r\n        {/* 비디오 메뉴 */}\r\n        <div className=\"room_options\">\r\n          {/* 방에 친구초대 */}\r\n          <button\r\n            onClick={() =>\r\n              emitter.emit(\"modal\", { type: \"invitation\", open: true })\r\n            }\r\n          >\r\n            <i className=\"fa-solid fa-user-plus\"></i>\r\n            <span>초대</span>\r\n          </button>\r\n          {/* 화면공유 */}\r\n          <button\r\n            onClick={ShareStart}\r\n            style={{ color: otherShare.state ? \"var(--pwf-blue)\" : \"white\" }}\r\n          >\r\n            <i className=\"fa-brands fa-creative-commons-share\"></i>\r\n            <span>화면공유</span>\r\n          </button>\r\n          {/* 내 미디어 변경 */}\r\n          <button>\r\n            <i className=\"fa-solid fa-desktop\"></i>\r\n            <span>내 미디어</span>\r\n          </button>\r\n          {/* 메뉴 */}\r\n          <button onClick={() => emitter.emit(\"room menu\", true)}>\r\n            <i className=\"fa-brands fa-elementor\"></i>\r\n            <span>메뉴</span>\r\n          </button>\r\n        </div>\r\n        {/* 방 나가기 */}\r\n        <button className=\"room_exit\" onClick={leaveRoom}>\r\n          방나가기\r\n        </button>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}