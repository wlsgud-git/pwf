{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashh1\\\\Desktop\\\\project\\\\PlayWithFriends\\\\client\\\\src\\\\page\\\\streamroom.tsx\",\n  _s = $RefreshSig$();\nimport \"../css/room/streamRoom.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { stream_service } from \"../service/stream.service\";\nimport { useSelector } from \"react-redux\";\n\n// type\n// import { Room } from \"../types/room\";\n\n// component\nimport { createFormData } from \"../util/form\";\nimport { connectRoom } from \"../util/stream\";\nimport { Menu } from \"../components/room/menu\";\nimport { Stream } from \"../components/room/stream\";\nimport { StreamContext } from \"../context/stream.context\";\nimport { useContextSelector } from \"use-context-selector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StreamRoom = () => {\n  _s();\n  let {\n    id\n  } = useParams();\n  let navigate = useNavigate();\n  // using\n  let user = useSelector(state => state.user);\n  let room = useContextSelector(StreamContext, ctx => ctx.room);\n  let {\n    setRoom,\n    setParticipants\n  } = useSetStream();\n  let [token, setToken] = useState(\"\");\n\n  // 방 연결\n  let roomConnect = async () => {\n    try {\n      let room = await connectRoom(token);\n      setRoom(room);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // 참가자 참가\n  let joinParticipant = who => setParticipants(c => ({\n    ...c,\n    [who]: {}\n  }));\n\n  // 다른 참가자 트랙세팅\n  let setParticipantTrack = (who, track) => {\n    track.kind == \"video\" ? setParticipants(c => ({\n      ...c,\n      [who]: {\n        ...c[who],\n        video_state: true,\n        video_track: track\n      }\n    })) : setParticipants(c => ({\n      ...c,\n      [who]: {\n        ...c[who],\n        audio_state: true,\n        audio_track: track\n      }\n    }));\n  };\n\n  // 유저 트랙상태 변경\n  let changeTrackState = (who, track, state) => {\n    setParticipants(c => ({\n      ...c,\n      [who]: {\n        ...c[who],\n        video_state: track.kind == \"video\" ? state : c[who].video_state,\n        audio_state: track.kind == \"audio\" ? state : c[who].audio_state\n      }\n    }));\n  };\n\n  // init ------------------------------------------\n  useEffect(() => {\n    let start = async () => {\n      try {\n        let token = await stream_service.roomAccessToken(createFormData({\n          room: `room${id}`,\n          identity: user.nickname\n        }));\n        setToken(token);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    start();\n  }, []);\n\n  // token으로 room 연결\n  useEffect(() => {\n    if (token == \"\") return;\n    roomConnect();\n  }, [token]);\n\n  // 방 이벤트\n  useEffect(() => {\n    if (!room) return;\n\n    // 새 참가자 관련\n    room.on(\"participantConnected\", participant => {\n      let identity = participant.identity;\n      joinParticipant(identity);\n      participant.on(\"trackSubscribed\", track => setParticipantTrack(identity, track));\n      participant.on(\"trackMuted\", track => changeTrackState(identity, track, false));\n      participant.on(\"trackUnmuted\", track => changeTrackState(identity, track, true));\n    });\n    //   // 기준 참가자 관련\n    room.remoteParticipants.forEach(participant => {\n      let identity = participant.identity;\n      joinParticipant(identity);\n      participant.getTrackPublications().forEach(pub => {\n        if (pub.isSubscribed && pub.track) setParticipantTrack(identity, pub.track);\n      });\n      participant.on(\"trackMuted\", track => changeTrackState(identity, track, false));\n      participant.on(\"trackUnmuted\", track => changeTrackState(identity, track, false));\n    });\n  }, [room]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page streamRoom_page\",\n    children: [/*#__PURE__*/_jsxDEV(Stream, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s(StreamRoom, \"8ipZjcmW7aGp4uPLvEwtReC2NjU=\", true, function () {\n  return [useParams, useNavigate, useSelector, useContextSelector];\n});\n_c = StreamRoom;\nvar _c;\n$RefreshReg$(_c, \"StreamRoom\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","stream_service","useSelector","createFormData","connectRoom","Menu","Stream","StreamContext","useContextSelector","jsxDEV","_jsxDEV","StreamRoom","_s","id","navigate","user","state","room","ctx","setRoom","setParticipants","useSetStream","token","setToken","roomConnect","err","console","log","joinParticipant","who","c","setParticipantTrack","track","kind","video_state","video_track","audio_state","audio_track","changeTrackState","start","roomAccessToken","identity","nickname","on","participant","remoteParticipants","forEach","getTrackPublications","pub","isSubscribed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/page/streamroom.tsx"],"sourcesContent":["import \"../css/room/streamRoom.css\";\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { socketClient } from \"../util/socket\";\r\nimport { stream_service } from \"../service/stream.service\";\r\nimport { emitter } from \"../util/event\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\";\r\nimport {\r\n  Track,\r\n  Room,\r\n  RemoteParticipant,\r\n  RemoteTrackPublication,\r\n  createLocalTracks,\r\n  LocalVideoTrack,\r\n  LocalAudioTrack,\r\n  RemoteVideoTrack,\r\n  RemoteAudioTrack,\r\n  RemoteTrack,\r\n  LocalTrack,\r\n  TrackPublication,\r\n} from \"livekit-client\";\r\n\r\n// type\r\n// import { Room } from \"../types/room\";\r\nimport { User } from \"../types/user\";\r\nimport { PeerConnects } from \"../types/room\";\r\n\r\n// component\r\nimport { createFormData } from \"../util/form\";\r\nimport {\r\n  connectRoom,\r\n  getMediaStream,\r\n  getStream,\r\n  getTrack,\r\n} from \"../util/stream\";\r\nimport {\r\n  LocalTrackProps,\r\n  RemoteTrackProps,\r\n  TrackProps,\r\n  UserTrackProps,\r\n} from \"../types/stream.types\";\r\nimport { Menu } from \"../components/room/menu\";\r\nimport { Stream } from \"../components/room/stream\";\r\nimport {\r\n  setUseStream,\r\n  StreamContext,\r\n  StreamProvider,\r\n} from \"../context/stream.context\";\r\nimport { useContextSelector } from \"use-context-selector\";\r\n\r\nexport const StreamRoom = () => {\r\n  let { id } = useParams();\r\n  let navigate = useNavigate();\r\n  // using\r\n  let user = useSelector((state: RootState) => state.user);\r\n  let room = useContextSelector(StreamContext, (ctx) => ctx.room);\r\n  let { setRoom, setParticipants } = useSetStream();\r\n\r\n  let [token, setToken] = useState<string>(\"\");\r\n\r\n  // 방 연결\r\n  let roomConnect = async () => {\r\n    try {\r\n      let room = await connectRoom(token);\r\n      setRoom(room);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  // 참가자 참가\r\n  let joinParticipant = (who: string) =>\r\n    setParticipants((c: UserTrackProps) => ({ ...c, [who]: {} }));\r\n\r\n  // 다른 참가자 트랙세팅\r\n  let setParticipantTrack = (who: string, track: Track) => {\r\n    track.kind == \"video\"\r\n      ? setParticipants((c: UserTrackProps) => ({\r\n          ...c,\r\n          [who]: {\r\n            ...c[who],\r\n            video_state: true,\r\n            video_track: track as RemoteVideoTrack,\r\n          },\r\n        }))\r\n      : setParticipants((c: UserTrackProps) => ({\r\n          ...c,\r\n          [who]: {\r\n            ...c[who],\r\n            audio_state: true,\r\n            audio_track: track as RemoteAudioTrack,\r\n          },\r\n        }));\r\n  };\r\n\r\n  // 유저 트랙상태 변경\r\n  let changeTrackState = (\r\n    who: string,\r\n    track: TrackPublication,\r\n    state: boolean\r\n  ) => {\r\n    setParticipants((c: UserTrackProps) => ({\r\n      ...c,\r\n      [who]: {\r\n        ...c[who],\r\n        video_state: track.kind == \"video\" ? state : c[who].video_state,\r\n        audio_state: track.kind == \"audio\" ? state : c[who].audio_state,\r\n      },\r\n    }));\r\n  };\r\n\r\n  // init ------------------------------------------\r\n  useEffect(() => {\r\n    let start = async () => {\r\n      try {\r\n        let token = await stream_service.roomAccessToken(\r\n          createFormData({ room: `room${id}`, identity: user.nickname })\r\n        );\r\n        setToken(token);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    start();\r\n  }, []);\r\n\r\n  // token으로 room 연결\r\n  useEffect(() => {\r\n    if (token == \"\") return;\r\n    roomConnect();\r\n  }, [token]);\r\n\r\n  // 방 이벤트\r\n  useEffect(() => {\r\n    if (!room) return;\r\n\r\n    // 새 참가자 관련\r\n    room.on(\"participantConnected\", (participant: RemoteParticipant) => {\r\n      let identity = participant.identity;\r\n      joinParticipant(identity);\r\n      participant.on(\"trackSubscribed\", (track) =>\r\n        setParticipantTrack(identity, track)\r\n      );\r\n      participant.on(\"trackMuted\", (track) =>\r\n        changeTrackState(identity, track, false)\r\n      );\r\n      participant.on(\"trackUnmuted\", (track) =>\r\n        changeTrackState(identity, track, true)\r\n      );\r\n    });\r\n    //   // 기준 참가자 관련\r\n    room.remoteParticipants.forEach((participant: RemoteParticipant) => {\r\n      let identity = participant.identity;\r\n      joinParticipant(identity);\r\n      participant.getTrackPublications().forEach((pub) => {\r\n        if (pub.isSubscribed && pub.track)\r\n          setParticipantTrack(identity, pub.track);\r\n      });\r\n      participant.on(\"trackMuted\", (track) =>\r\n        changeTrackState(identity, track, false)\r\n      );\r\n      participant.on(\"trackUnmuted\", (track) =>\r\n        changeTrackState(identity, track, false)\r\n      );\r\n    });\r\n  }, [room]);\r\n\r\n  return (\r\n    <div className=\"page streamRoom_page\">\r\n      {/* 참가자들의 화면 부분 */}\r\n      <Stream />\r\n      {/* 참가자들 채팅 / 참가자 목록 */}\r\n      <Menu />\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}