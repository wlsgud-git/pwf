{"ast":null,"code":"import{HttpClient}from\"../network/http\";export class authService extends HttpClient{// 이메일 중복 체크\nasync emailOverlap(data){try{return await this.axiosFetch(\"/email/overlap\",{method:\"post\",body:data});}catch(err){throw err;}}// 닉네임 중복 체크\nasync nicknameOverlap(data){try{return await this.axiosFetch(\"/nickname/overlap\",{method:\"post\",body:data});}catch(err){throw err;}}// 인증코드  ----------------\nasync resendAuthcode(data){try{return await this.axiosFetch(\"/authcode/resend\",{method:\"post\",body:data});}catch(err){throw err;}}async checkAuthcode(data){try{return await this.axiosFetch(\"/authcode/check\",{method:\"post\",body:data});}catch(err){throw err;}}// 로그인 ---------------------------------\nasync login(data){try{return await this.axiosFetch(\"/login\",{method:\"post\",body:data});}catch(err){throw err;}}// 로그아웃\nasync logout(){try{return await this.axiosFetch(\"/logout\",{method:\"post\"});}catch(err){throw err;}}}export const auth_service=new authService();","map":{"version":3,"names":["HttpClient","authService","emailOverlap","data","axiosFetch","method","body","err","nicknameOverlap","resendAuthcode","checkAuthcode","login","logout","auth_service"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/service/auth.service.ts"],"sourcesContent":["import { AxiosError } from \"../error/error\";\r\nimport { HttpClient } from \"../network/http\";\r\n\r\nimport { User } from \"../types/user\";\r\n\r\nexport class authService extends HttpClient {\r\n  // 이메일 중복 체크\r\n  async emailOverlap(data: FormData) {\r\n    try {\r\n      return await this.axiosFetch<boolean>(\"/email/overlap\", {\r\n        method: \"post\",\r\n        body: data,\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  // 닉네임 중복 체크\r\n  async nicknameOverlap(data: FormData) {\r\n    try {\r\n      return await this.axiosFetch<boolean>(\"/nickname/overlap\", {\r\n        method: \"post\",\r\n        body: data,\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  // 인증코드  ----------------\r\n  async resendAuthcode(data: FormData) {\r\n    try {\r\n      return await this.axiosFetch<boolean>(\"/authcode/resend\", {\r\n        method: \"post\",\r\n        body: data,\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  async checkAuthcode(data: FormData) {\r\n    try {\r\n      return await this.axiosFetch<boolean>(\"/authcode/check\", {\r\n        method: \"post\",\r\n        body: data,\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  // 로그인 ---------------------------------\r\n  async login(data: FormData) {\r\n    try {\r\n      return await this.axiosFetch<User>(\"/login\", {\r\n        method: \"post\",\r\n        body: data,\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  // 로그아웃\r\n  async logout() {\r\n    try {\r\n      return await this.axiosFetch<string>(\"/logout\", {\r\n        method: \"post\",\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n}\r\n\r\nexport const auth_service = new authService();\r\n"],"mappings":"AACA,OAASA,UAAU,KAAQ,iBAAiB,CAI5C,MAAO,MAAM,CAAAC,WAAW,QAAS,CAAAD,UAAW,CAC1C;AACA,KAAM,CAAAE,YAAYA,CAACC,IAAc,CAAE,CACjC,GAAI,CACF,MAAO,MAAM,KAAI,CAACC,UAAU,CAAU,gBAAgB,CAAE,CACtDC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEH,IACR,CAAC,CAAC,CACJ,CAAE,MAAOI,GAAG,CAAE,CACZ,KAAM,CAAAA,GAAG,CACX,CACF,CAEA;AACA,KAAM,CAAAC,eAAeA,CAACL,IAAc,CAAE,CACpC,GAAI,CACF,MAAO,MAAM,KAAI,CAACC,UAAU,CAAU,mBAAmB,CAAE,CACzDC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEH,IACR,CAAC,CAAC,CACJ,CAAE,MAAOI,GAAG,CAAE,CACZ,KAAM,CAAAA,GAAG,CACX,CACF,CAEA;AACA,KAAM,CAAAE,cAAcA,CAACN,IAAc,CAAE,CACnC,GAAI,CACF,MAAO,MAAM,KAAI,CAACC,UAAU,CAAU,kBAAkB,CAAE,CACxDC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEH,IACR,CAAC,CAAC,CACJ,CAAE,MAAOI,GAAG,CAAE,CACZ,KAAM,CAAAA,GAAG,CACX,CACF,CAEA,KAAM,CAAAG,aAAaA,CAACP,IAAc,CAAE,CAClC,GAAI,CACF,MAAO,MAAM,KAAI,CAACC,UAAU,CAAU,iBAAiB,CAAE,CACvDC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEH,IACR,CAAC,CAAC,CACJ,CAAE,MAAOI,GAAG,CAAE,CACZ,KAAM,CAAAA,GAAG,CACX,CACF,CAEA;AACA,KAAM,CAAAI,KAAKA,CAACR,IAAc,CAAE,CAC1B,GAAI,CACF,MAAO,MAAM,KAAI,CAACC,UAAU,CAAO,QAAQ,CAAE,CAC3CC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEH,IACR,CAAC,CAAC,CACJ,CAAE,MAAOI,GAAG,CAAE,CACZ,KAAM,CAAAA,GAAG,CACX,CACF,CAEA;AACA,KAAM,CAAAK,MAAMA,CAAA,CAAG,CACb,GAAI,CACF,MAAO,MAAM,KAAI,CAACR,UAAU,CAAS,SAAS,CAAE,CAC9CC,MAAM,CAAE,MACV,CAAC,CAAC,CACJ,CAAE,MAAOE,GAAG,CAAE,CACZ,KAAM,CAAAA,GAAG,CACX,CACF,CACF,CAEA,MAAO,MAAM,CAAAM,YAAY,CAAG,GAAI,CAAAZ,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}