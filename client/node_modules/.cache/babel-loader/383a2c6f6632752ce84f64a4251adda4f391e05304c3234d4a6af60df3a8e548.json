{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashh1\\\\Desktop\\\\project\\\\PlayWithFriends\\\\client\\\\src\\\\components\\\\modal\\\\friend.tsx\",\n  _s = $RefreshSig$();\nimport \"../css/friend.css\";\nimport { useState } from \"react\";\nimport { user_service } from \"../../service/userservice\";\nimport { createFormData } from \"../../util/form\";\nimport { errorHandling } from \"../../error/error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// 친구요청 보낸 친구들 리스트\n// export const RequestFriendLi = (props: { data: User }) => {\n//   let dispatch = useDispatch<AppDispatch>();\n//   let user = useSelector((state: RootState) => state.user);\n\n//   const handleRequestFriend = async (response: boolean) => {\n//     try {\n//       let formdata = createFormData({\n//         receiver: user.nickname,\n//         sender: props.data.nickname,\n//         response,\n//       });\n//       dispatch(userAction.requestFriendHandle(formdata));\n//     } catch (err) {\n//       alert(err);\n//     }\n//   };\n\n//   return (\n//     <li className=\"pwf_req_friend_li\">\n//       <div className=\"pwf_req_friend_info\">\n//         <span className=\"pwf_req_friend_img\">\n//           <img src={props.data.profile_img} />\n//         </span>\n//         <span>{props.data.nickname} </span>\n//       </div>\n//       <div className=\"pwf_req_friend_btn_box\">\n//         <button\n//           className=\"friend_req_accept\"\n//           onClick={() => handleRequestFriend(true)}\n//         >\n//           수락\n//         </button>\n//         <button\n//           className=\"friend_req_refuse\"\n//           onClick={() => handleRequestFriend(false)}\n//         >\n//           거절\n//         </button>\n//       </div>\n//     </li>\n//   );\n// };\n\n// 친구 관련 모달\nexport const FriendModal = ({\n  user,\n  type\n}) => {\n  _s();\n  let [error, setError] = useState({\n    state: false,\n    msg: \"\"\n  });\n  let [nickname, setNickname] = useState(\"\");\n\n  // 친구요청\n  const requestFriend = async e => {\n    e.preventDefault();\n    try {\n      let formdata = createFormData({\n        res_nickname: nickname,\n        req_nickname: user.nickname,\n        state: false\n      });\n      let res = await user_service.requestFriend(formdata);\n      alert(`${nickname}에게 친구요청이 전송되었습니다`);\n      setNickname(\"\");\n    } catch (err) {\n      let {\n        msg\n      } = errorHandling(err);\n      msg = !msg ? \"친구이거나 중복된 친구요청입니다.\" : msg;\n      setError(c => ({\n        ...c,\n        state: true,\n        msg\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pwf_friend_modal\",\n    style: {\n      display: type == \"friend\" ? \"flex\" : \"none\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"friend_content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"friend_search_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"friend_search_form\",\n          onSubmit: requestFriend,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            style: {\n              border: `1px solid var(--pwf-${error.state ? \"red\" : \"gray\"})`\n            },\n            value: nickname,\n            onChange: e => {\n              setNickname(e.target.value);\n              setError(c => ({\n                ...c,\n                state: false\n              }));\n            },\n            placeholder: \"\\uCE5C\\uAD6C\\uC694\\uCCAD \\uB2C9\\uB124\\uC784\",\n            spellCheck: false,\n            className: \"friend_search_input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"friend_search_error\",\n          style: {\n            display: error.state ? \"flex\" : \"none\"\n          },\n          children: error.msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"friend_request_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uCE5C\\uAD6C\\uC694\\uCCAD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"request_friends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(FriendModal, \"eNyAl7hd5AmlCjKzoFHDHHQO3Uc=\");\n_c = FriendModal;\nvar _c;\n$RefreshReg$(_c, \"FriendModal\");","map":{"version":3,"names":["useState","user_service","createFormData","errorHandling","jsxDEV","_jsxDEV","FriendModal","user","type","_s","error","setError","state","msg","nickname","setNickname","requestFriend","e","preventDefault","formdata","res_nickname","req_nickname","res","alert","err","c","className","style","display","children","onSubmit","border","value","onChange","target","placeholder","spellCheck","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/components/modal/friend.tsx"],"sourcesContent":["import \"../css/friend.css\";\r\nimport { useState, useEffect, ChangeEvent } from \"react\";\r\nimport { emitter } from \"../../util/event\";\r\nimport { FormSubmit, InputChange } from \"../../types/event\";\r\nimport { user_service } from \"../../service/userservice\";\r\nimport { createFormData } from \"../../util/form\";\r\nimport { errorHandling } from \"../../error/error\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState, AppDispatch } from \"../../context/store\";\r\nimport { User, UserComponent } from \"../../types/user\";\r\nimport { userAction } from \"../../context/actions/userAction\";\r\n\r\ninterface ComponentProps {\r\n  user: User;\r\n  type: string;\r\n}\r\n\r\n// 친구요청 보낸 친구들 리스트\r\n// export const RequestFriendLi = (props: { data: User }) => {\r\n//   let dispatch = useDispatch<AppDispatch>();\r\n//   let user = useSelector((state: RootState) => state.user);\r\n\r\n//   const handleRequestFriend = async (response: boolean) => {\r\n//     try {\r\n//       let formdata = createFormData({\r\n//         receiver: user.nickname,\r\n//         sender: props.data.nickname,\r\n//         response,\r\n//       });\r\n//       dispatch(userAction.requestFriendHandle(formdata));\r\n//     } catch (err) {\r\n//       alert(err);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <li className=\"pwf_req_friend_li\">\r\n//       <div className=\"pwf_req_friend_info\">\r\n//         <span className=\"pwf_req_friend_img\">\r\n//           <img src={props.data.profile_img} />\r\n//         </span>\r\n//         <span>{props.data.nickname} </span>\r\n//       </div>\r\n//       <div className=\"pwf_req_friend_btn_box\">\r\n//         <button\r\n//           className=\"friend_req_accept\"\r\n//           onClick={() => handleRequestFriend(true)}\r\n//         >\r\n//           수락\r\n//         </button>\r\n//         <button\r\n//           className=\"friend_req_refuse\"\r\n//           onClick={() => handleRequestFriend(false)}\r\n//         >\r\n//           거절\r\n//         </button>\r\n//       </div>\r\n//     </li>\r\n//   );\r\n// };\r\n\r\n// 친구 관련 모달\r\nexport const FriendModal = ({ user, type }: ComponentProps) => {\r\n  let [error, setError] = useState<{ state: boolean; msg: string }>({\r\n    state: false,\r\n    msg: \"\",\r\n  });\r\n  let [nickname, setNickname] = useState<string>(\"\");\r\n\r\n  // 친구요청\r\n  const requestFriend = async (e: FormSubmit) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      let formdata = createFormData({\r\n        res_nickname: nickname,\r\n        req_nickname: user.nickname,\r\n        state: false,\r\n      });\r\n      let res = await user_service.requestFriend(formdata);\r\n      alert(`${nickname}에게 친구요청이 전송되었습니다`);\r\n      setNickname(\"\");\r\n    } catch (err) {\r\n      let { msg } = errorHandling(err);\r\n      msg = !msg ? \"친구이거나 중복된 친구요청입니다.\" : msg;\r\n      setError((c) => ({ ...c, state: true, msg }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"pwf_friend_modal\"\r\n      style={{ display: type == \"friend\" ? \"flex\" : \"none\" }}\r\n    >\r\n      <div className=\"friend_content\">\r\n        {/* 친추요청 검색 */}\r\n        <div className=\"friend_search_box\">\r\n          <form className=\"friend_search_form\" onSubmit={requestFriend}>\r\n            <input\r\n              type=\"text\"\r\n              style={{\r\n                border: `1px solid var(--pwf-${error.state ? \"red\" : \"gray\"})`,\r\n              }}\r\n              value={nickname}\r\n              onChange={(e: InputChange) => {\r\n                setNickname(e.target.value);\r\n                setError((c) => ({ ...c, state: false }));\r\n              }}\r\n              placeholder=\"친구요청 닉네임\"\r\n              spellCheck={false}\r\n              className=\"friend_search_input\"\r\n            />\r\n          </form>\r\n          <span\r\n            className=\"friend_search_error\"\r\n            style={{ display: error.state ? \"flex\" : \"none\" }}\r\n          >\r\n            {error.msg}\r\n          </span>\r\n        </div>\r\n        {/* 친추 리스트 */}\r\n        <div className=\"friend_request_box\">\r\n          <label>친구요청</label>\r\n          <ul className=\"request_friends\">\r\n            {/* {user.request_friends && user.request_friends.length ? (\r\n              user.request_friends.map((val) => <RequestFriendLi data={val} />)\r\n            ) : (\r\n              <p>친구요청이 없습니다.</p>\r\n            )} */}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}