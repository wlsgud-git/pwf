{"ast":null,"code":"import { createElement, createContext as createContextOrig, useContext as useContextOrig, useEffect, useLayoutEffect, useReducer, useRef, useState } from 'react';\nimport { unstable_NormalPriority as NormalPriority, unstable_runWithPriority as runWithPriority } from 'scheduler';\nconst CONTEXT_VALUE = Symbol();\nconst ORIGINAL_PROVIDER = Symbol();\nconst isSSR = typeof window === 'undefined' || /ServerSideRendering/.test(window.navigator && window.navigator.userAgent);\nconst useIsomorphicLayoutEffect = isSSR ? useEffect : useLayoutEffect;\n// for preact that doesn't have runWithPriority\nconst runWithNormalPriority = runWithPriority ? fn => {\n  try {\n    runWithPriority(NormalPriority, fn);\n  } catch (e) {\n    if (e.message === 'Not implemented.') {\n      fn();\n    } else {\n      throw e;\n    }\n  }\n} : fn => fn();\nconst createProvider = ProviderOrig => {\n  const ContextProvider = ({\n    value,\n    children\n  }) => {\n    const valueRef = useRef(value);\n    const versionRef = useRef(0);\n    const [resolve, setResolve] = useState(null);\n    if (resolve) {\n      resolve(value);\n      setResolve(null);\n    }\n    const contextValue = useRef();\n    if (!contextValue.current) {\n      const listeners = new Set();\n      const update = (fn, options) => {\n        versionRef.current += 1;\n        const action = {\n          n: versionRef.current\n        };\n        if (options === null || options === void 0 ? void 0 : options.suspense) {\n          action.n *= -1; // this is intentional to make it temporary version\n          action.p = new Promise(r => {\n            setResolve(() => v => {\n              action.v = v;\n              delete action.p;\n              r(v);\n            });\n          });\n        }\n        listeners.forEach(listener => listener(action));\n        fn();\n      };\n      contextValue.current = {\n        [CONTEXT_VALUE]: {\n          /* \"v\"alue     */v: valueRef,\n          /* versio\"n\"   */n: versionRef,\n          /* \"l\"isteners */l: listeners,\n          /* \"u\"pdate    */u: update\n        }\n      };\n    }\n    useIsomorphicLayoutEffect(() => {\n      valueRef.current = value;\n      versionRef.current += 1;\n      runWithNormalPriority(() => {\n        contextValue.current[CONTEXT_VALUE].l.forEach(listener => {\n          listener({\n            n: versionRef.current,\n            v: value\n          });\n        });\n      });\n    }, [value]);\n    return createElement(ProviderOrig, {\n      value: contextValue.current\n    }, children);\n  };\n  return ContextProvider;\n};\nconst identity = x => x;\n/**\n * This creates a special context for `useContextSelector`.\n *\n * @example\n * import { createContext } from 'use-context-selector';\n *\n * const PersonContext = createContext({ firstName: '', familyName: '' });\n */\nexport function createContext(defaultValue) {\n  const context = createContextOrig({\n    [CONTEXT_VALUE]: {\n      /* \"v\"alue     */v: {\n        current: defaultValue\n      },\n      /* versio\"n\"   */n: {\n        current: -1\n      },\n      /* \"l\"isteners */l: new Set(),\n      /* \"u\"pdate    */u: f => f()\n    }\n  });\n  context[ORIGINAL_PROVIDER] = context.Provider;\n  context.Provider = createProvider(context.Provider);\n  delete context.Consumer; // no support for Consumer\n  return context;\n}\n/**\n * This hook returns context selected value by selector.\n *\n * It will only accept context created by `createContext`.\n * It will trigger re-render if only the selected value is referentially changed.\n *\n * The selector should return referentially equal result for same input for better performance.\n *\n * @example\n * import { useContextSelector } from 'use-context-selector';\n *\n * const firstName = useContextSelector(PersonContext, (state) => state.firstName);\n */\nexport function useContextSelector(context, selector) {\n  const contextValue = useContextOrig(context)[CONTEXT_VALUE];\n  if (typeof process === 'object' && process.env.NODE_ENV !== 'production') {\n    if (!contextValue) {\n      throw new Error('useContextSelector requires special context');\n    }\n  }\n  const {\n    /* \"v\"alue     */v: {\n      current: value\n    },\n    /* versio\"n\"   */n: {\n      current: version\n    },\n    /* \"l\"isteners */l: listeners\n  } = contextValue;\n  const selected = selector(value);\n  const [state, dispatch] = useReducer((prev, action) => {\n    if (!action) {\n      // case for `dispatch()` below\n      return [value, selected];\n    }\n    if ('p' in action) {\n      throw action.p;\n    }\n    if (action.n === version) {\n      if (Object.is(prev[1], selected)) {\n        return prev; // bail out\n      }\n      return [value, selected];\n    }\n    try {\n      if ('v' in action) {\n        if (Object.is(prev[0], action.v)) {\n          return prev; // do not update\n        }\n        const nextSelected = selector(action.v);\n        if (Object.is(prev[1], nextSelected)) {\n          return prev; // do not update\n        }\n        return [action.v, nextSelected];\n      }\n    } catch (_e) {\n      // ignored (stale props or some other reason)\n    }\n    return [...prev]; // schedule update\n  }, [value, selected]);\n  if (!Object.is(state[1], selected)) {\n    // schedule re-render\n    // this is safe because it's self contained\n    dispatch();\n  }\n  useIsomorphicLayoutEffect(() => {\n    listeners.add(dispatch);\n    return () => {\n      listeners.delete(dispatch);\n    };\n  }, [listeners]);\n  return state[1];\n}\n/**\n * This hook returns the entire context value.\n * Use this instead of React.useContext for consistent behavior.\n *\n * @example\n * import { useContext } from 'use-context-selector';\n *\n * const person = useContext(PersonContext);\n */\nexport function useContext(context) {\n  return useContextSelector(context, identity);\n}\n/**\n * This hook returns an update function to wrap an updating function\n *\n * Use this for a function that will change a value in\n * concurrent rendering in React 18.\n * Otherwise, there's no need to use this hook.\n *\n * @example\n * import { useContextUpdate } from 'use-context-selector';\n *\n * const update = useContextUpdate();\n *\n * // Wrap set state function\n * update(() => setState(...));\n *\n * // Experimental suspense mode\n * update(() => setState(...), { suspense: true });\n */\nexport function useContextUpdate(context) {\n  const contextValue = useContextOrig(context)[CONTEXT_VALUE];\n  if (typeof process === 'object' && process.env.NODE_ENV !== 'production') {\n    if (!contextValue) {\n      throw new Error('useContextUpdate requires special context');\n    }\n  }\n  const {\n    u: update\n  } = contextValue;\n  return update;\n}\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * This is a Provider component for bridging multiple react roots\n *\n * @example\n * const valueToBridge = useBridgeValue(PersonContext);\n * return (\n *   <Renderer>\n *     <BridgeProvider context={PersonContext} value={valueToBridge}>\n *       {children}\n *     </BridgeProvider>\n *   </Renderer>\n * );\n */\nexport const BridgeProvider = ({\n  context,\n  value,\n  children\n}) => {\n  const {\n    [ORIGINAL_PROVIDER]: ProviderOrig\n  } = context;\n  if (typeof process === 'object' && process.env.NODE_ENV !== 'production') {\n    if (!ProviderOrig) {\n      throw new Error('BridgeProvider requires special context');\n    }\n  }\n  return createElement(ProviderOrig, {\n    value\n  }, children);\n};\n/**\n * This hook return a value for BridgeProvider\n */\nexport const useBridgeValue = context => {\n  const bridgeValue = useContextOrig(context);\n  if (typeof process === 'object' && process.env.NODE_ENV !== 'production') {\n    if (!bridgeValue[CONTEXT_VALUE]) {\n      throw new Error('useBridgeValue requires special context');\n    }\n  }\n  return bridgeValue;\n};","map":{"version":3,"names":["createElement","createContext","createContextOrig","useContext","useContextOrig","useEffect","useLayoutEffect","useReducer","useRef","useState","unstable_NormalPriority","NormalPriority","unstable_runWithPriority","runWithPriority","CONTEXT_VALUE","Symbol","ORIGINAL_PROVIDER","isSSR","window","test","navigator","userAgent","useIsomorphicLayoutEffect","runWithNormalPriority","fn","e","message","createProvider","ProviderOrig","ContextProvider","value","children","valueRef","versionRef","resolve","setResolve","contextValue","current","listeners","Set","update","options","action","n","suspense","p","Promise","r","v","forEach","listener","l","u","identity","x","defaultValue","context","f","Provider","Consumer","useContextSelector","selector","process","env","NODE_ENV","Error","version","selected","state","dispatch","prev","Object","is","nextSelected","_e","add","delete","useContextUpdate","BridgeProvider","useBridgeValue","bridgeValue"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/node_modules/use-context-selector/dist/index.js"],"sourcesContent":["import { createElement, createContext as createContextOrig, useContext as useContextOrig, useEffect, useLayoutEffect, useReducer, useRef, useState, } from 'react';\nimport { unstable_NormalPriority as NormalPriority, unstable_runWithPriority as runWithPriority, } from 'scheduler';\nconst CONTEXT_VALUE = Symbol();\nconst ORIGINAL_PROVIDER = Symbol();\nconst isSSR = typeof window === 'undefined' ||\n    /ServerSideRendering/.test(window.navigator && window.navigator.userAgent);\nconst useIsomorphicLayoutEffect = isSSR ? useEffect : useLayoutEffect;\n// for preact that doesn't have runWithPriority\nconst runWithNormalPriority = runWithPriority\n    ? (fn) => {\n        try {\n            runWithPriority(NormalPriority, fn);\n        }\n        catch (e) {\n            if (e.message === 'Not implemented.') {\n                fn();\n            }\n            else {\n                throw e;\n            }\n        }\n    }\n    : (fn) => fn();\nconst createProvider = (ProviderOrig) => {\n    const ContextProvider = ({ value, children, }) => {\n        const valueRef = useRef(value);\n        const versionRef = useRef(0);\n        const [resolve, setResolve] = useState(null);\n        if (resolve) {\n            resolve(value);\n            setResolve(null);\n        }\n        const contextValue = useRef();\n        if (!contextValue.current) {\n            const listeners = new Set();\n            const update = (fn, options) => {\n                versionRef.current += 1;\n                const action = {\n                    n: versionRef.current,\n                };\n                if (options === null || options === void 0 ? void 0 : options.suspense) {\n                    action.n *= -1; // this is intentional to make it temporary version\n                    action.p = new Promise((r) => {\n                        setResolve(() => (v) => {\n                            action.v = v;\n                            delete action.p;\n                            r(v);\n                        });\n                    });\n                }\n                listeners.forEach((listener) => listener(action));\n                fn();\n            };\n            contextValue.current = {\n                [CONTEXT_VALUE]: {\n                    /* \"v\"alue     */ v: valueRef,\n                    /* versio\"n\"   */ n: versionRef,\n                    /* \"l\"isteners */ l: listeners,\n                    /* \"u\"pdate    */ u: update,\n                },\n            };\n        }\n        useIsomorphicLayoutEffect(() => {\n            valueRef.current = value;\n            versionRef.current += 1;\n            runWithNormalPriority(() => {\n                contextValue.current[CONTEXT_VALUE].l.forEach((listener) => {\n                    listener({ n: versionRef.current, v: value });\n                });\n            });\n        }, [value]);\n        return createElement(ProviderOrig, { value: contextValue.current }, children);\n    };\n    return ContextProvider;\n};\nconst identity = (x) => x;\n/**\n * This creates a special context for `useContextSelector`.\n *\n * @example\n * import { createContext } from 'use-context-selector';\n *\n * const PersonContext = createContext({ firstName: '', familyName: '' });\n */\nexport function createContext(defaultValue) {\n    const context = createContextOrig({\n        [CONTEXT_VALUE]: {\n            /* \"v\"alue     */ v: { current: defaultValue },\n            /* versio\"n\"   */ n: { current: -1 },\n            /* \"l\"isteners */ l: new Set(),\n            /* \"u\"pdate    */ u: (f) => f(),\n        },\n    });\n    context[ORIGINAL_PROVIDER] = context.Provider;\n    context.Provider = createProvider(context.Provider);\n    delete context.Consumer; // no support for Consumer\n    return context;\n}\n/**\n * This hook returns context selected value by selector.\n *\n * It will only accept context created by `createContext`.\n * It will trigger re-render if only the selected value is referentially changed.\n *\n * The selector should return referentially equal result for same input for better performance.\n *\n * @example\n * import { useContextSelector } from 'use-context-selector';\n *\n * const firstName = useContextSelector(PersonContext, (state) => state.firstName);\n */\nexport function useContextSelector(context, selector) {\n    const contextValue = useContextOrig(context)[CONTEXT_VALUE];\n    if (typeof process === 'object' && process.env.NODE_ENV !== 'production') {\n        if (!contextValue) {\n            throw new Error('useContextSelector requires special context');\n        }\n    }\n    const { \n    /* \"v\"alue     */ v: { current: value }, \n    /* versio\"n\"   */ n: { current: version }, \n    /* \"l\"isteners */ l: listeners, } = contextValue;\n    const selected = selector(value);\n    const [state, dispatch] = useReducer((prev, action) => {\n        if (!action) {\n            // case for `dispatch()` below\n            return [value, selected];\n        }\n        if ('p' in action) {\n            throw action.p;\n        }\n        if (action.n === version) {\n            if (Object.is(prev[1], selected)) {\n                return prev; // bail out\n            }\n            return [value, selected];\n        }\n        try {\n            if ('v' in action) {\n                if (Object.is(prev[0], action.v)) {\n                    return prev; // do not update\n                }\n                const nextSelected = selector(action.v);\n                if (Object.is(prev[1], nextSelected)) {\n                    return prev; // do not update\n                }\n                return [action.v, nextSelected];\n            }\n        }\n        catch (_e) {\n            // ignored (stale props or some other reason)\n        }\n        return [...prev]; // schedule update\n    }, [value, selected]);\n    if (!Object.is(state[1], selected)) {\n        // schedule re-render\n        // this is safe because it's self contained\n        dispatch();\n    }\n    useIsomorphicLayoutEffect(() => {\n        listeners.add(dispatch);\n        return () => {\n            listeners.delete(dispatch);\n        };\n    }, [listeners]);\n    return state[1];\n}\n/**\n * This hook returns the entire context value.\n * Use this instead of React.useContext for consistent behavior.\n *\n * @example\n * import { useContext } from 'use-context-selector';\n *\n * const person = useContext(PersonContext);\n */\nexport function useContext(context) {\n    return useContextSelector(context, identity);\n}\n/**\n * This hook returns an update function to wrap an updating function\n *\n * Use this for a function that will change a value in\n * concurrent rendering in React 18.\n * Otherwise, there's no need to use this hook.\n *\n * @example\n * import { useContextUpdate } from 'use-context-selector';\n *\n * const update = useContextUpdate();\n *\n * // Wrap set state function\n * update(() => setState(...));\n *\n * // Experimental suspense mode\n * update(() => setState(...), { suspense: true });\n */\nexport function useContextUpdate(context) {\n    const contextValue = useContextOrig(context)[CONTEXT_VALUE];\n    if (typeof process === 'object' && process.env.NODE_ENV !== 'production') {\n        if (!contextValue) {\n            throw new Error('useContextUpdate requires special context');\n        }\n    }\n    const { u: update } = contextValue;\n    return update;\n}\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * This is a Provider component for bridging multiple react roots\n *\n * @example\n * const valueToBridge = useBridgeValue(PersonContext);\n * return (\n *   <Renderer>\n *     <BridgeProvider context={PersonContext} value={valueToBridge}>\n *       {children}\n *     </BridgeProvider>\n *   </Renderer>\n * );\n */\nexport const BridgeProvider = ({ context, value, children, }) => {\n    const { [ORIGINAL_PROVIDER]: ProviderOrig } = context;\n    if (typeof process === 'object' && process.env.NODE_ENV !== 'production') {\n        if (!ProviderOrig) {\n            throw new Error('BridgeProvider requires special context');\n        }\n    }\n    return createElement(ProviderOrig, { value }, children);\n};\n/**\n * This hook return a value for BridgeProvider\n */\nexport const useBridgeValue = (context) => {\n    const bridgeValue = useContextOrig(context);\n    if (typeof process === 'object' && process.env.NODE_ENV !== 'production') {\n        if (!bridgeValue[CONTEXT_VALUE]) {\n            throw new Error('useBridgeValue requires special context');\n        }\n    }\n    return bridgeValue;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}