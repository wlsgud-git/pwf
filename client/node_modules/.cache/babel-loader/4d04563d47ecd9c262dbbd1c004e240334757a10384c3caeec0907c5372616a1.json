{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashh1\\\\Desktop\\\\project\\\\PlayWithFriends\\\\client\\\\src\\\\page\\\\streamroom.tsx\",\n  _s = $RefreshSig$();\nimport \"../css/room/streamRoom.css\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { stream_service } from \"../service/stream.service\";\nimport { useSelector } from \"react-redux\";\n// type\n\n// component\nimport { createFormData } from \"../util/form\";\nimport { connectRoom } from \"../util/stream\";\nimport { Menu } from \"../components/room/menu\";\nimport { Stream } from \"../components/room/stream\";\nimport { useSetStream } from \"../context/stream.context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StreamRoom = () => {\n  _s();\n  let {\n    id\n  } = useParams();\n  // using\n  let user = useSelector(state => state.user);\n  let {\n    setRoom\n  } = useSetStream();\n\n  // 방 연결\n  let roomConnect = async () => {\n    try {\n      let token = await stream_service.roomAccessToken(createFormData({\n        room: `room${id}`,\n        identity: user.nickname\n      }));\n      let room = await connectRoom(token);\n      setRoom(room);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // 방 연결\n  useEffect(() => {\n    roomConnect();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page streamRoom_page\",\n    children: [/*#__PURE__*/_jsxDEV(Stream, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(StreamRoom, \"0GqeS349fD8oCxMRKB3pPF8INAg=\", false, function () {\n  return [useParams, useSelector, useSetStream];\n});\n_c = StreamRoom;\nvar _c;\n$RefreshReg$(_c, \"StreamRoom\");","map":{"version":3,"names":["React","useEffect","useParams","stream_service","useSelector","createFormData","connectRoom","Menu","Stream","useSetStream","jsxDEV","_jsxDEV","StreamRoom","_s","id","user","state","setRoom","roomConnect","token","roomAccessToken","room","identity","nickname","err","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/page/streamroom.tsx"],"sourcesContent":["import \"../css/room/streamRoom.css\";\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { stream_service } from \"../service/stream.service\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\";\r\n\r\n// type\r\n\r\n// component\r\nimport { createFormData } from \"../util/form\";\r\nimport { connectRoom } from \"../util/stream\";\r\nimport { Menu } from \"../components/room/menu\";\r\nimport { Stream } from \"../components/room/stream\";\r\nimport { useSetStream, StreamContext } from \"../context/stream.context\";\r\nimport { useContextSelector } from \"use-context-selector\";\r\nimport { Invitation } from \"../components/modal/invitation\";\r\n\r\nexport const StreamRoom = () => {\r\n  let { id } = useParams();\r\n  // using\r\n  let user = useSelector((state: RootState) => state.user);\r\n\r\n  let { setRoom } = useSetStream();\r\n\r\n  // 방 연결\r\n  let roomConnect = async () => {\r\n    try {\r\n      let token = await stream_service.roomAccessToken(\r\n        createFormData({ room: `room${id}`, identity: user.nickname })\r\n      );\r\n      let room = await connectRoom(token);\r\n      setRoom(room);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  // 방 연결\r\n  useEffect(() => {\r\n    roomConnect();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"page streamRoom_page\">\r\n      {/* 참가자들의 화면 부분 */}\r\n      <Stream />\r\n      {/* 참가자들 채팅 / 참가자 목록 */}\r\n      <Menu />\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAO,4BAA4B;AAEnC,OAAOA,KAAK,IAAIC,SAAS,QAA0B,OAAO;AAC1D,SAAsBC,SAAS,QAAQ,kBAAkB;AACzD,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,WAAW,QAAQ,aAAa;AAGzC;;AAEA;AACA,SAASC,cAAc,QAAQ,cAAc;AAC7C,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,IAAI,QAAQ,yBAAyB;AAC9C,SAASC,MAAM,QAAQ,2BAA2B;AAClD,SAASC,YAAY,QAAuB,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIxE,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,IAAI;IAAEC;EAAG,CAAC,GAAGZ,SAAS,CAAC,CAAC;EACxB;EACA,IAAIa,IAAI,GAAGX,WAAW,CAAEY,KAAgB,IAAKA,KAAK,CAACD,IAAI,CAAC;EAExD,IAAI;IAAEE;EAAQ,CAAC,GAAGR,YAAY,CAAC,CAAC;;EAEhC;EACA,IAAIS,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,IAAIC,KAAK,GAAG,MAAMhB,cAAc,CAACiB,eAAe,CAC9Cf,cAAc,CAAC;QAAEgB,IAAI,EAAE,OAAOP,EAAE,EAAE;QAAEQ,QAAQ,EAAEP,IAAI,CAACQ;MAAS,CAAC,CAC/D,CAAC;MACD,IAAIF,IAAI,GAAG,MAAMf,WAAW,CAACa,KAAK,CAAC;MACnCF,OAAO,CAACI,IAAI,CAAC;IACf,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;;EAED;EACAvB,SAAS,CAAC,MAAM;IACdiB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKgB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBAEnCjB,OAAA,CAACH,MAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEVrB,OAAA,CAACJ,IAAI;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACnB,EAAA,CAjCWD,UAAU;EAAA,QACRV,SAAS,EAEXE,WAAW,EAEJK,YAAY;AAAA;AAAAwB,EAAA,GALnBrB,UAAU;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}