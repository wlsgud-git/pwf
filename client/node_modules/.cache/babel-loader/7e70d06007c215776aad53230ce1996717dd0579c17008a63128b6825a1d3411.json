{"ast":null,"code":"import\"../../css/friend.css\";import{useState}from\"react\";import{user_service}from\"../../service/userservice\";import{createFormData}from\"../../util/form\";import{errorHandling}from\"../../error/error\";import{useDispatch}from\"react-redux\";import{userAction}from\"../../context/actions/userAction\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// 친구요청 보낸 친구들 리스트\nexport const RequestFriendLi=_ref=>{let{receiver,sender}=_ref;let dispatch=useDispatch();const handleRequestFriend=async response=>{try{let formdata=createFormData({receiver,sender,response});dispatch(userAction.requestFriendHandle(formdata));}catch(err){alert(err);}};return/*#__PURE__*/_jsxs(\"li\",{className:\"pwf_req_friend_li\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pwf_req_friend_info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"pwf_req_friend_img\",children:/*#__PURE__*/_jsx(\"img\",{src:sender.profile_img})}),/*#__PURE__*/_jsxs(\"span\",{children:[sender.nickname,\" \"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pwf_req_friend_btn_box\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"friend_req_accept\",onClick:()=>handleRequestFriend(true),children:\"\\uC218\\uB77D\"}),/*#__PURE__*/_jsx(\"button\",{className:\"friend_req_refuse\",onClick:()=>handleRequestFriend(false),children:\"\\uAC70\\uC808\"})]})]});};// 친구 관련 모달\nexport const FriendModal=_ref2=>{let{user,type}=_ref2;let[error,setError]=useState({state:false,msg:\"\"});let[nickname,setNickname]=useState(\"\");// 친구요청\nconst requestFriend=async e=>{e.preventDefault();try{let formdata=createFormData({res_nickname:nickname,req_nickname:user.nickname,state:false});let res=await user_service.requestFriend(formdata);alert(`${nickname}에게 친구요청이 전송되었습니다`);setNickname(\"\");}catch(err){let{msg}=errorHandling(err);msg=!msg?\"친구이거나 중복된 친구요청입니다.\":msg;setError(c=>({...c,state:true,msg}));}};return/*#__PURE__*/_jsx(\"div\",{className:\"pwf_friend_modal\",style:{display:type==\"friend\"?\"flex\":\"none\"},children:/*#__PURE__*/_jsxs(\"div\",{className:\"friend_content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"friend_search_box\",children:[/*#__PURE__*/_jsx(\"form\",{className:\"friend_search_form\",onSubmit:requestFriend,children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",style:{border:`1px solid var(--pwf-${error.state?\"red\":\"gray\"})`},value:nickname,onChange:e=>{setNickname(e.target.value);setError(c=>({...c,state:false}));},placeholder:\"\\uCE5C\\uAD6C\\uC694\\uCCAD \\uB2C9\\uB124\\uC784\",spellCheck:false,className:\"friend_search_input\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"friend_search_error\",style:{display:error.state?\"flex\":\"none\"},children:error.msg})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"friend_request_box\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uCE5C\\uAD6C\\uC694\\uCCAD\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"request_friends\",children:user.request_friends&&user.request_friends.length?user.request_friends.map(val=>/*#__PURE__*/_jsx(RequestFriendLi,{receiver:user,sender:val})):/*#__PURE__*/_jsx(\"p\",{children:\"\\uCE5C\\uAD6C\\uC694\\uCCAD\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})})]})]})});};","map":{"version":3,"names":["useState","user_service","createFormData","errorHandling","useDispatch","userAction","jsx","_jsx","jsxs","_jsxs","RequestFriendLi","_ref","receiver","sender","dispatch","handleRequestFriend","response","formdata","requestFriendHandle","err","alert","className","children","src","profile_img","nickname","onClick","FriendModal","_ref2","user","type","error","setError","state","msg","setNickname","requestFriend","e","preventDefault","res_nickname","req_nickname","res","c","style","display","onSubmit","border","value","onChange","target","placeholder","spellCheck","request_friends","length","map","val"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/components/modal/friend.tsx"],"sourcesContent":["import \"../../css/friend.css\";\r\nimport { useState, useEffect, ChangeEvent } from \"react\";\r\nimport { emitter } from \"../../util/event\";\r\nimport { FormSubmit, InputChange } from \"../../types/event\";\r\nimport { user_service } from \"../../service/userservice\";\r\nimport { createFormData } from \"../../util/form\";\r\nimport { errorHandling } from \"../../error/error\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState, AppDispatch } from \"../../context/store\";\r\nimport { User, UserComponent } from \"../../types/user\";\r\nimport { userAction } from \"../../context/actions/userAction\";\r\n\r\ninterface ComponentProps {\r\n  user: User;\r\n  type: string;\r\n}\r\n\r\ninterface RequestFriendProps {\r\n  receiver: User;\r\n  sender: User;\r\n  response?: boolean;\r\n}\r\n\r\n// 친구요청 보낸 친구들 리스트\r\nexport const RequestFriendLi = ({ receiver, sender }: RequestFriendProps) => {\r\n  let dispatch = useDispatch<AppDispatch>();\r\n\r\n  const handleRequestFriend = async (response: boolean) => {\r\n    try {\r\n      let formdata = createFormData({\r\n        receiver,\r\n        sender,\r\n        response,\r\n      });\r\n      dispatch(userAction.requestFriendHandle(formdata));\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li className=\"pwf_req_friend_li\">\r\n      <div className=\"pwf_req_friend_info\">\r\n        <span className=\"pwf_req_friend_img\">\r\n          <img src={sender.profile_img} />\r\n        </span>\r\n        <span>{sender.nickname} </span>\r\n      </div>\r\n      <div className=\"pwf_req_friend_btn_box\">\r\n        <button\r\n          className=\"friend_req_accept\"\r\n          onClick={() => handleRequestFriend(true)}\r\n        >\r\n          수락\r\n        </button>\r\n        <button\r\n          className=\"friend_req_refuse\"\r\n          onClick={() => handleRequestFriend(false)}\r\n        >\r\n          거절\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\n// 친구 관련 모달\r\nexport const FriendModal = ({ user, type }: ComponentProps) => {\r\n  let [error, setError] = useState<{ state: boolean; msg: string }>({\r\n    state: false,\r\n    msg: \"\",\r\n  });\r\n  let [nickname, setNickname] = useState<string>(\"\");\r\n\r\n  // 친구요청\r\n  const requestFriend = async (e: FormSubmit) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      let formdata = createFormData({\r\n        res_nickname: nickname,\r\n        req_nickname: user.nickname,\r\n        state: false,\r\n      });\r\n      let res = await user_service.requestFriend(formdata);\r\n      alert(`${nickname}에게 친구요청이 전송되었습니다`);\r\n      setNickname(\"\");\r\n    } catch (err) {\r\n      let { msg } = errorHandling(err);\r\n      msg = !msg ? \"친구이거나 중복된 친구요청입니다.\" : msg;\r\n      setError((c) => ({ ...c, state: true, msg }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"pwf_friend_modal\"\r\n      style={{ display: type == \"friend\" ? \"flex\" : \"none\" }}\r\n    >\r\n      <div className=\"friend_content\">\r\n        {/* 친추요청 검색 */}\r\n        <div className=\"friend_search_box\">\r\n          <form className=\"friend_search_form\" onSubmit={requestFriend}>\r\n            <input\r\n              type=\"text\"\r\n              style={{\r\n                border: `1px solid var(--pwf-${error.state ? \"red\" : \"gray\"})`,\r\n              }}\r\n              value={nickname}\r\n              onChange={(e: InputChange) => {\r\n                setNickname(e.target.value);\r\n                setError((c) => ({ ...c, state: false }));\r\n              }}\r\n              placeholder=\"친구요청 닉네임\"\r\n              spellCheck={false}\r\n              className=\"friend_search_input\"\r\n            />\r\n          </form>\r\n          <span\r\n            className=\"friend_search_error\"\r\n            style={{ display: error.state ? \"flex\" : \"none\" }}\r\n          >\r\n            {error.msg}\r\n          </span>\r\n        </div>\r\n        {/* 친추 리스트 */}\r\n        <div className=\"friend_request_box\">\r\n          <label>친구요청</label>\r\n          <ul className=\"request_friends\">\r\n            {user.request_friends && user.request_friends.length ? (\r\n              user.request_friends.map((val) => (\r\n                <RequestFriendLi receiver={user} sender={val} />\r\n              ))\r\n            ) : (\r\n              <p>친구요청이 없습니다.</p>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}