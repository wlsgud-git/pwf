{"ast":null,"code":"import { combineReducers } from \"@reduxjs/toolkit\";\nimport UserReducer from \"./userReducer\";\nimport FriendReducer from \"./friendReducer\";\nimport RoomReducer from \"./roomReducer\";\nconst rootReducer = combineReducers({\n  user: UserReducer,\n  friend: FriendReducer,\n  room: RoomReducer\n});\nconst resetReducer = (state, action) => {\n  if (action.type == \"RESET_ALL_STATE\") {}\n};\nexport default rootReducer;","map":{"version":3,"names":["combineReducers","UserReducer","FriendReducer","RoomReducer","rootReducer","user","friend","room","resetReducer","state","action","type"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/redux/reducer/rootReducer.ts"],"sourcesContent":["import { combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nimport UserReducer from \"./userReducer\";\r\nimport FriendReducer from \"./friendReducer\";\r\nimport RoomReducer from \"./roomReducer\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user: UserReducer,\r\n  friend: FriendReducer,\r\n  room: RoomReducer,\r\n});\r\n\r\nconst resetReducer = (state: any, action: any) => {\r\n  if (action.type == \"RESET_ALL_STATE\") {\r\n  }\r\n};\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\nexport default rootReducer;\r\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,kBAAkB;AAElD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,WAAW,MAAM,eAAe;AAGvC,MAAMC,WAAW,GAAGJ,eAAe,CAAC;EAClCK,IAAI,EAAEJ,WAAW;EACjBK,MAAM,EAAEJ,aAAa;EACrBK,IAAI,EAAEJ;AACR,CAAC,CAAC;AAEF,MAAMK,YAAY,GAAGA,CAACC,KAAU,EAAEC,MAAW,KAAK;EAChD,IAAIA,MAAM,CAACC,IAAI,IAAI,iBAAiB,EAAE,CACtC;AACF,CAAC;AAGD,eAAeP,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}