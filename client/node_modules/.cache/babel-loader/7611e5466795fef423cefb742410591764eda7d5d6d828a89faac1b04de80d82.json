{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashh1\\\\Desktop\\\\project\\\\PlayWithFriends\\\\client\\\\src\\\\context\\\\stream.context.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet StreamContext = /*#__PURE__*/createContext(undefined);\n// let SetStreamContext = createContext<any>(undefined);\n\nexport const StreamProvider = ({\n  children\n}) => {\n  _s();\n  const [room, setRoom] = useState(null);\n  let [participants, setParticipants] = useState({});\n  let value = useMemo(() => ({\n    room,\n    participants,\n    setRoom,\n    setParticipants\n  }), [room, participants]);\n  return /*#__PURE__*/_jsxDEV(StreamContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(StreamProvider, \"bfNpJEc+JB6b9h4wiJxKH/FKRfE=\");\n_c = StreamProvider;\nexport let useStream = () => {\n  _s2();\n  const context = useContext(StreamContext);\n  if (context === undefined) throw new Error(\"value가 없다고\");\n  return context;\n};\n_s2(useStream, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"StreamProvider\");","map":{"version":3,"names":["createContext","useContext","useMemo","useState","jsxDEV","_jsxDEV","StreamContext","undefined","StreamProvider","children","_s","room","setRoom","participants","setParticipants","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useStream","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/context/stream.context.tsx"],"sourcesContent":["import { Room } from \"livekit-client\";\r\nimport { createContext, ReactNode, useContext, useMemo, useState } from \"react\";\r\nimport { TrackProps, UserTrackProps } from \"../types/stream.types\";\r\n\r\nlet StreamContext = createContext<any>(undefined);\r\n// let SetStreamContext = createContext<any>(undefined);\r\n\r\nexport const StreamProvider = ({ children }: { children: ReactNode }) => {\r\n  const [room, setRoom] = useState<any>(null);\r\n  let [participants, setParticipants] = useState<UserTrackProps>({});\r\n\r\n  let value = useMemo(\r\n    () => ({\r\n      room,\r\n      participants,\r\n\r\n      setRoom,\r\n      setParticipants,\r\n    }),\r\n    [room, participants]\r\n  );\r\n\r\n  return (\r\n    <StreamContext.Provider value={value}>{children}</StreamContext.Provider>\r\n  );\r\n};\r\n\r\nexport let useStream = () => {\r\n  const context = useContext(StreamContext);\r\n  if (context === undefined) throw new Error(\"value가 없다고\");\r\n  return context;\r\n};\r\n"],"mappings":";;;AACA,SAASA,aAAa,EAAaC,UAAU,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhF,IAAIC,aAAa,gBAAGN,aAAa,CAAMO,SAAS,CAAC;AACjD;;AAEA,OAAO,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAkC,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAM,IAAI,CAAC;EAC3C,IAAI,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAiB,CAAC,CAAC,CAAC;EAElE,IAAIY,KAAK,GAAGb,OAAO,CACjB,OAAO;IACLS,IAAI;IACJE,YAAY;IAEZD,OAAO;IACPE;EACF,CAAC,CAAC,EACF,CAACH,IAAI,EAAEE,YAAY,CACrB,CAAC;EAED,oBACER,OAAA,CAACC,aAAa,CAACU,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAN,QAAA,EAAEA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAyB,CAAC;AAE7E,CAAC;AAACV,EAAA,CAlBWF,cAAc;AAAAa,EAAA,GAAdb,cAAc;AAoB3B,OAAO,IAAIc,SAAS,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGvB,UAAU,CAACK,aAAa,CAAC;EACzC,IAAIkB,OAAO,KAAKjB,SAAS,EAAE,MAAM,IAAIkB,KAAK,CAAC,YAAY,CAAC;EACxD,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CAJSD,SAAS;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}