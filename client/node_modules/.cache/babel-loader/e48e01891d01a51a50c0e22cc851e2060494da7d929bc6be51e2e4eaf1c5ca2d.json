{"ast":null,"code":"import{useEffect,useState}from\"react\";import{emitter}from\"../../util/event\";import\"../../css/room/chat.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatLi=_ref=>{let{user,content,me}=_ref;return/*#__PURE__*/_jsx(\"div\",{className:\"chat_container\",children:/*#__PURE__*/_jsxs(\"li\",{className:\"chat_li\",style:{float:me?\"right\":\"left\"},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat_user\",style:{display:me?\"none\":\"flex\"},children:[/*#__PURE__*/_jsx(\"span\",{className:\"chat_user_profile\",children:/*#__PURE__*/_jsx(\"img\",{src:user.profile_img})}),/*#__PURE__*/_jsx(\"span\",{className:\"chat_user_nickname\",children:user.nickname})]}),/*#__PURE__*/_jsx(\"span\",{className:\"chat_content\",children:content})]})});};export const Chat=_ref2=>{let{user,connects,state}=_ref2;let[input,setInput]=useState(\"\");let[conversation,setConversation]=useState([]);let sendChat=async e=>{e.preventDefault();let connect_list=Object.entries(connects);if(input==\"\"||!connect_list.length)return;// 내 인풋 전송하기\nconnect_list.forEach(_ref3=>{let[from,info]=_ref3;info.channel.send(JSON.stringify({user,content:input}));});setConversation(c=>[...c,{user,content:input}]);setInput(\"\");};// 상대방 채팅 인지\nuseEffect(()=>{const handler=_ref4=>{let{user,content}=_ref4;setConversation(c=>[...c,{user,content}]);};emitter.on(\"menu chat\",handler);return()=>{emitter.off(\"menu chat\",handler);};},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"menu_chat_container\",style:{display:state?\"flex\":\"none\"},children:[/*#__PURE__*/_jsx(\"ul\",{className:\"chat_conversations\",children:conversation.length?conversation.map(val=>/*#__PURE__*/_jsx(ChatLi,{user:val.user,content:val.content,me:val.user.nickname==user.nickname})):\"\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chat_form_container\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"chat_form\",onSubmit:sendChat,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"chat_input\",spellCheck:\"false\",placeholder:\"\\uCC44\\uD305\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",value:input,onChange:e=>setInput(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"chat_btn\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fa-solid fa-paper-plane\"})})]})})]});};","map":{"version":3,"names":["useEffect","useState","emitter","jsx","_jsx","jsxs","_jsxs","ChatLi","_ref","user","content","me","className","children","style","float","display","src","profile_img","nickname","Chat","_ref2","connects","state","input","setInput","conversation","setConversation","sendChat","e","preventDefault","connect_list","Object","entries","length","forEach","_ref3","from","info","channel","send","JSON","stringify","c","handler","_ref4","on","off","map","val","onSubmit","type","spellCheck","placeholder","value","onChange","target"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/components/room/chat.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { FormSubmit, InputChange } from \"../../types/event\";\r\nimport { emitter } from \"../../util/event\";\r\n\r\nimport \"../../css/room/chat.css\";\r\nimport { User } from \"../../types/user\";\r\n\r\ninterface ChatProps {\r\n  user: User;\r\n  connects: object;\r\n  state: boolean;\r\n}\r\n\r\ninterface ChatingInterface {\r\n  user: User;\r\n  content: string;\r\n  me?: boolean;\r\n}\r\n\r\nconst ChatLi = ({ user, content, me }: ChatingInterface) => {\r\n  return (\r\n    <div className=\"chat_container\">\r\n      <li\r\n        className=\"chat_li\"\r\n        style={{\r\n          float: me ? \"right\" : \"left\",\r\n        }}\r\n      >\r\n        <div className=\"chat_user\" style={{ display: me ? \"none\" : \"flex\" }}>\r\n          <span className=\"chat_user_profile\">\r\n            <img src={user.profile_img} />\r\n          </span>\r\n          <span className=\"chat_user_nickname\">{user.nickname}</span>\r\n        </div>\r\n        <span className=\"chat_content\">{content}</span>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Chat = ({ user, connects, state }: ChatProps) => {\r\n  let [input, setInput] = useState<string>(\"\");\r\n  let [conversation, setConversation] = useState<ChatingInterface[]>([]);\r\n\r\n  let sendChat = async (e: FormSubmit) => {\r\n    e.preventDefault();\r\n    let connect_list = Object.entries(connects);\r\n\r\n    if (input == \"\" || !connect_list.length) return;\r\n\r\n    // 내 인풋 전송하기\r\n    connect_list.forEach(([from, info]) => {\r\n      info.channel.send(JSON.stringify({ user, content: input }));\r\n    });\r\n\r\n    setConversation((c) => [...c, { user, content: input }]);\r\n    setInput(\"\");\r\n  };\r\n\r\n  // 상대방 채팅 인지\r\n  useEffect(() => {\r\n    const handler = ({ user, content }: ChatingInterface) => {\r\n      setConversation((c) => [...c, { user, content }]);\r\n    };\r\n\r\n    emitter.on(\"menu chat\", handler);\r\n\r\n    return () => {\r\n      emitter.off(\"menu chat\", handler);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"menu_chat_container\"\r\n      style={{ display: state ? \"flex\" : \"none\" }}\r\n    >\r\n      <ul className=\"chat_conversations\">\r\n        {conversation.length\r\n          ? conversation.map((val: ChatingInterface) => (\r\n              <ChatLi\r\n                user={val.user}\r\n                content={val.content}\r\n                me={val.user.nickname == user.nickname}\r\n              />\r\n            ))\r\n          : \"\"}\r\n      </ul>\r\n      {/* 채팅입력부분 */}\r\n      <div className=\"chat_form_container\">\r\n        <form className=\"chat_form\" onSubmit={sendChat}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"chat_input\"\r\n            spellCheck=\"false\"\r\n            placeholder=\"채팅을 입력하세요.\"\r\n            value={input}\r\n            onChange={(e: InputChange) => setInput(e.target.value)}\r\n          />\r\n          <button className=\"chat_btn\">\r\n            <i className=\"fa-solid fa-paper-plane\"></i>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}