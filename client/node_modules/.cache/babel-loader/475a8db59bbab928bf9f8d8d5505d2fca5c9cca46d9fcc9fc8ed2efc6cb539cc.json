{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashh1\\\\Desktop\\\\project\\\\PlayWithFriends\\\\client\\\\src\\\\components\\\\room\\\\menu\\\\chat.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { emitter } from \"../../../util/event\";\nimport \"../../../css/room/menu/chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatLi = ({\n  user,\n  content,\n  me\n}) => {\n  _s();\n  useEffect(() => {\n    console.log(me, user, content);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [\" \", content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n_s(ChatLi, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ChatLi;\nexport const Chat = ({\n  user,\n  connects,\n  state\n}) => {\n  _s2();\n  let [input, setInput] = useState(\"\");\n  let [conversation, setConversation] = useState([]);\n  let sendChat = async e => {\n    e.preventDefault();\n    let connect_list = Object.entries(connects);\n    if (input == \"\" || !connect_list.length) return;\n\n    // 내 인풋 전송하기\n    connect_list.forEach(([from, info]) => {\n      info.channel.send(JSON.stringify({\n        user,\n        content: input\n      }));\n    });\n    setConversation(c => [...c, {\n      user,\n      content: input\n    }]);\n    setInput(\"\");\n  };\n\n  // 상대방 채팅 인지\n  useEffect(() => {\n    const handler = ({\n      user,\n      content\n    }) => {\n      setConversation(c => [...c, {\n        user,\n        content\n      }]);\n    };\n    emitter.on(\"menu chat\", handler);\n    return () => {\n      emitter.off(\"menu chat\", handler);\n    };\n  }, []);\n  useEffect(() => {\n    console.log(conversation);\n  }, [conversation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu_chat_container\",\n    style: {\n      display: state ? \"flex\" : \"none\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"chat_conversations\",\n      children: conversation.length ? conversation.map(val => /*#__PURE__*/_jsxDEV(ChatLi, {\n        user: val.user,\n        content: val.content,\n        me: val.user.nickname == user.nickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }, this)) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_form_container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"chat_form\",\n        onSubmit: sendChat,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"chat_input\",\n          spellCheck: \"false\",\n          placeholder: \"\\uCC44\\uD305\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n          value: input,\n          onChange: e => setInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chat_btn\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-paper-plane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s2(Chat, \"p4QG5y8DafhJU3R/IoBw4YZLhe0=\");\n_c2 = Chat;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChatLi\");\n$RefreshReg$(_c2, \"Chat\");","map":{"version":3,"names":["useEffect","useState","emitter","jsxDEV","_jsxDEV","ChatLi","user","content","me","_s","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Chat","connects","state","_s2","input","setInput","conversation","setConversation","sendChat","e","preventDefault","connect_list","Object","entries","length","forEach","from","info","channel","send","JSON","stringify","c","handler","on","off","className","style","display","map","val","nickname","onSubmit","type","spellCheck","placeholder","value","onChange","target","_c2","$RefreshReg$"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/components/room/menu/chat.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { FormSubmit, InputChange } from \"../../../types/event\";\r\nimport { emitter } from \"../../../util/event\";\r\n\r\nimport \"../../../css/room/menu/chat.css\";\r\nimport { User } from \"../../../types/user\";\r\n\r\ninterface ChatProps {\r\n  user: User;\r\n  connects: object;\r\n  state: boolean;\r\n}\r\n\r\ninterface ChatingInterface {\r\n  user: User;\r\n  content: string;\r\n  me?: boolean;\r\n}\r\n\r\nconst ChatLi = ({ user, content, me }: ChatingInterface) => {\r\n  useEffect(() => {\r\n    console.log(me, user, content);\r\n  }, []);\r\n  return <li> {content}</li>;\r\n};\r\n\r\nexport const Chat = ({ user, connects, state }: ChatProps) => {\r\n  let [input, setInput] = useState<string>(\"\");\r\n  let [conversation, setConversation] = useState<ChatingInterface[]>([]);\r\n\r\n  let sendChat = async (e: FormSubmit) => {\r\n    e.preventDefault();\r\n    let connect_list = Object.entries(connects);\r\n\r\n    if (input == \"\" || !connect_list.length) return;\r\n\r\n    // 내 인풋 전송하기\r\n    connect_list.forEach(([from, info]) => {\r\n      info.channel.send(JSON.stringify({ user, content: input }));\r\n    });\r\n\r\n    setConversation((c) => [...c, { user, content: input }]);\r\n    setInput(\"\");\r\n  };\r\n\r\n  // 상대방 채팅 인지\r\n  useEffect(() => {\r\n    const handler = ({ user, content }: ChatingInterface) => {\r\n      setConversation((c) => [...c, { user, content }]);\r\n    };\r\n\r\n    emitter.on(\"menu chat\", handler);\r\n\r\n    return () => {\r\n      emitter.off(\"menu chat\", handler);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(conversation);\r\n  }, [conversation]);\r\n\r\n  return (\r\n    <div\r\n      className=\"menu_chat_container\"\r\n      style={{ display: state ? \"flex\" : \"none\" }}\r\n    >\r\n      <ul className=\"chat_conversations\">\r\n        {conversation.length\r\n          ? conversation.map((val: ChatingInterface) => (\r\n              <ChatLi\r\n                user={val.user}\r\n                content={val.content}\r\n                me={val.user.nickname == user.nickname}\r\n              />\r\n            ))\r\n          : \"\"}\r\n      </ul>\r\n      {/* 채팅입력부분 */}\r\n      <div className=\"chat_form_container\">\r\n        <form className=\"chat_form\" onSubmit={sendChat}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"chat_input\"\r\n            spellCheck=\"false\"\r\n            placeholder=\"채팅을 입력하세요.\"\r\n            value={input}\r\n            onChange={(e: InputChange) => setInput(e.target.value)}\r\n          />\r\n          <button className=\"chat_btn\">\r\n            <i className=\"fa-solid fa-paper-plane\"></i>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}