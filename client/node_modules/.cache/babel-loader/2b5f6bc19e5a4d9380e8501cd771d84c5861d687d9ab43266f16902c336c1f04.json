{"ast":null,"code":"import{useEffect,useRef,useState}from\"react\";import{useNavigate,useParams}from\"react-router-dom\";import{socketClient}from\"../../util/socket\";import{emitter}from\"../../util/event\";// css\nimport\"../../css/room/roomMain.css\";import\"../../css/invitation.css\";// type\n// import { PeerConnects } from \"../../types/room\";\nimport{FriendStream}from\"./friendStream\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const InvitationLi=_ref=>{let{user}=_ref;return/*#__PURE__*/_jsxs(\"li\",{className:\"invitation_li\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"invitation_profile_box\",children:/*#__PURE__*/_jsx(\"img\",{src:user.profile_img})}),/*#__PURE__*/_jsx(\"span\",{className:\"invitation_nickname\",children:user.nickname})]}),/*#__PURE__*/_jsx(\"button\",{children:\"\\uCD08\\uB300\"})]});};// 친구 관련 모달\nexport const Invitation=_ref2=>{let{user,show,setShow,participants}=_ref2;function reset(){setShow(false);emitter.emit(\"modal\",{type:\"invitation\"});}let[invitationList,setInvitationList]=useState([]);useEffect(()=>{let list=[];if(user&&user.friends.length&&participants&&participants.length)for(var i=0;i<user.friends.length;i++){let pusher=true;let cn=user.friends[i].nickname;for(var j=0;j<participants.length;j++){let ccn=participants[j].nickname;if(cn==ccn){pusher=false;break;}}if(pusher)list.push(user.friends[i]);}setInvitationList(list.map(val=>val));},[participants]);return/*#__PURE__*/_jsxs(\"div\",{className:\"invitation_modal\",style:{display:show?\"flex\":\"none\"},children:[/*#__PURE__*/_jsx(\"header\",{className:\"modal_header\",children:/*#__PURE__*/_jsx(\"button\",{onClick:reset,children:\"X\"})}),/*#__PURE__*/_jsx(\"ul\",{className:\"invitation_list\",children:invitationList.length?invitationList.map(val=>/*#__PURE__*/_jsx(InvitationLi,{user:val})):/*#__PURE__*/_jsx(\"p\",{children:\"\\uCD08\\uB300\\uD560 \\uCE5C\\uAD6C\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})})]});};export const RoomMain=_ref3=>{let{user,stream,connects,participants}=_ref3;let{id}=useParams();let roomId=`room${id}`;let navigate=useNavigate();let localRef=useRef(null);let localStreamRef=useRef(null);let shareStreamRef=useRef(null);let[audio,setAudio]=useState(true);let[video,setVideo]=useState(true);let[otherShare,setOtherShare]=useState({state:false,nickname:\"\"});let[shareStream,setShareStream]=useState(null);let[showInvitation,setShowInvitation]=useState(false);let openModal=()=>{setShowInvitation(true);emitter.emit(\"modal\",{type:\"invitation\",open:true});};// 다른 사용자 트랙 변경\nlet trackChange=stream=>{Object.entries(connects).forEach(_ref4=>{let[from,info]=_ref4;let sender=info.pc.getSenders().find(s=>s.track.kind==\"video\");if(sender)sender.replaceTrack(stream);});};// 화면 공유 과정\nlet changeProcess=(streamTrack,stream,state)=>{state?socketClient.emit(\"share screen\",roomId,user.nickname):socketClient.emit(\"share screen off\",roomId);setShareStream(stream);trackChange(streamTrack);setOtherShare(c=>({...c,state,nickname:user.nickname}));};//내 화면 공유 시작\nlet ShareStart=async()=>{if(otherShare.state){alert(\"다른 이가 화면공유 중입니다\");return;}try{let s_stream=await navigator.mediaDevices.getDisplayMedia({video:true});let streamTrack=s_stream.getVideoTracks()[0];changeProcess(streamTrack,s_stream,true);streamTrack.onended=()=>{changeProcess(stream===null||stream===void 0?void 0:stream.getVideoTracks()[0],null,false);};}catch(err){console.log(err);}};// 다른 사용자가 화면 공유를 시작함\nlet otherScreenShare=from=>{setOtherShare(c=>({...c,state:true,nickname:from}));};// 다른 사용자가 화면 공유를 종료함\nlet otherSCreenShareOFf=()=>{setShareStream(null);setOtherShare(c=>({...c,state:false,nickname:\"\"}));};// 화면 on/off\nlet toggleMedia=type=>{let state=false;if(!localStreamRef.current)return;localStreamRef.current.getTracks().filter(track=>track.kind===type).forEach(track=>{state=!track.enabled;track.enabled=!track.enabled;});socketClient.emit(\"toggle track\",roomId,user.nickname,type,state);type==\"audio\"?setAudio(!audio):setVideo(!video);};// 방을 떠남\nlet leaveRoom=()=>{if(user.nickname!==\"\"){socketClient.emit(\"leave room\",user.nickname,roomId);navigate(\"/\");}};// useEffect ---------------\n// 스트림 ref 설정\nuseEffect(()=>{if(stream){localRef.current.srcObject=stream;localStreamRef.current=stream;}},[stream]);// 화면공유 소켓 초기화\nuseEffect(()=>{socketClient.on(\"share screen\",otherScreenShare);socketClient.on(\"share screen off\",otherSCreenShareOFf);return()=>{socketClient.off(\"share screen\",otherScreenShare);socketClient.on(\"share screen off\",otherSCreenShareOFf);};},[]);// 상대가 화면 공유 시작시 상대방의 비디오 트랙을 shareSTream으로 설정\nuseEffect(()=>{let con=Object.entries(connects);if(con.length&&otherShare.state&&otherShare.nickname!==\"\"){let shareInfo=con.find(_ref5=>{let[from,info]=_ref5;return from===otherShare.nickname;});if(shareInfo){let info=shareInfo[1];info.pc.getReceivers().forEach(receive=>{setShareStream(new MediaStream([receive.track]));});}}},[connects,otherShare.nickname]);// 공유 스트림이 변경되면 공유 ref.srcObject 변경\nuseEffect(()=>{if(shareStream&&shareStreamRef.current){shareStreamRef.current.srcObject=shareStream;}},[shareStream]);return/*#__PURE__*/_jsxs(\"div\",{className:\"pwf-streamRoom_container\",children:[/*#__PURE__*/_jsx(Invitation,{user:user,show:showInvitation,setShow:setShowInvitation,participants:participants}),/*#__PURE__*/_jsxs(\"div\",{className:\"pwf-screen_container\",children:[/*#__PURE__*/_jsxs(\"ul\",{className:otherShare.state?\"share\":\"user_screen_lists\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user_video_box\",children:[/*#__PURE__*/_jsx(\"video\",{ref:localRef,autoPlay:true,playsInline:true,className:\"user_video\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"user_info_box\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(\"i\",{className:`fa-solid fa-microphone-lines${audio?\"\":\"-slash\"}`})}),/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(\"i\",{className:`fa-solid fa-video${video?\"\":\"-slash\"}`})})]}),/*#__PURE__*/_jsx(\"span\",{children:user.nickname})]})]}),Object.entries(connects).map(_ref6=>{let[from,stream]=_ref6;return/*#__PURE__*/_jsx(FriendStream,{from:from,stream:stream});})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"share_screen_container\",style:{display:otherShare.state?\"flex\":\"none\"},children:[/*#__PURE__*/_jsx(\"video\",{ref:shareStreamRef,autoPlay:true,playsInline:true,className:\"share_video\"}),/*#__PURE__*/_jsx(\"span\",{className:\"share_user_nickname\",children:otherShare.nickname})]})]}),/*#__PURE__*/_jsxs(\"footer\",{className:\"streamRoom_footer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user_video_options\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>toggleMedia(\"audio\"),children:[/*#__PURE__*/_jsx(\"i\",{className:`fa-solid fa-microphone-lines${audio?\"\":\"-slash\"}`}),/*#__PURE__*/_jsx(\"span\",{children:audio?\"음소거\":\"음소거 해제\"})]}),/*#__PURE__*/_jsxs(\"button\",{title:`비디오${video?\"\":\" 해제\"}`,onClick:()=>toggleMedia(\"video\"),children:[/*#__PURE__*/_jsx(\"i\",{className:`fa-solid fa-video${video?\"\":\"-slash\"}`}),/*#__PURE__*/_jsx(\"span\",{children:video?\"비디오\":\"비디오 해제\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"room_options\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:openModal,children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa-solid fa-user-plus\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\uCD08\\uB300\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:ShareStart,style:{color:otherShare.state?\"var(--pwf-blue)\":\"white\"},children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa-brands fa-creative-commons-share\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\uD654\\uBA74\\uACF5\\uC720\"})]}),/*#__PURE__*/_jsxs(\"button\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa-solid fa-desktop\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\uB0B4 \\uBBF8\\uB514\\uC5B4\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>emitter.emit(\"room menu\",true),children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa-brands fa-elementor\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\uBA54\\uB274\"})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"room_exit\",onClick:leaveRoom,children:\"\\uBC29\\uB098\\uAC00\\uAE30\"})]})]});};","map":{"version":3,"names":["useEffect","useRef","useState","useNavigate","useParams","socketClient","emitter","FriendStream","jsx","_jsx","jsxs","_jsxs","InvitationLi","_ref","user","className","children","src","profile_img","nickname","Invitation","_ref2","show","setShow","participants","reset","emit","type","invitationList","setInvitationList","list","friends","length","i","pusher","cn","j","ccn","push","map","val","style","display","onClick","RoomMain","_ref3","stream","connects","id","roomId","navigate","localRef","localStreamRef","shareStreamRef","audio","setAudio","video","setVideo","otherShare","setOtherShare","state","shareStream","setShareStream","showInvitation","setShowInvitation","openModal","open","trackChange","Object","entries","forEach","_ref4","from","info","sender","pc","getSenders","find","s","track","kind","replaceTrack","changeProcess","streamTrack","c","ShareStart","alert","s_stream","navigator","mediaDevices","getDisplayMedia","getVideoTracks","onended","err","console","log","otherScreenShare","otherSCreenShareOFf","toggleMedia","current","getTracks","filter","enabled","leaveRoom","srcObject","on","off","con","shareInfo","_ref5","getReceivers","receive","MediaStream","ref","autoPlay","playsInline","_ref6","title","color"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/components/room/roomMain.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport { socketClient } from \"../../util/socket\";\r\nimport { emitter } from \"../../util/event\";\r\n\r\n// css\r\nimport \"../../css/room/roomMain.css\";\r\nimport \"../../css/invitation.css\";\r\n\r\n// type\r\nimport { User } from \"../../types/user\";\r\nimport { Room } from \"../../types/room\";\r\n// import { PeerConnects } from \"../../types/room\";\r\nimport { FriendStream } from \"./friendStream\";\r\n\r\ninterface RoomMainProps {\r\n  user: User;\r\n  stream: MediaStream | null;\r\n  connects: object;\r\n  participants: Room[\"participants\"];\r\n}\r\n\r\ninterface InvitationProps {\r\n  user: User;\r\n  show: boolean;\r\n  setShow: any;\r\n  participants: Room[\"participants\"];\r\n}\r\n\r\nconst InvitationLi = ({ user }: { [user: string]: User }) => {\r\n  return (\r\n    <li className=\"invitation_li\">\r\n      {/* 유저 정보 */}\r\n      <div>\r\n        <span className=\"invitation_profile_box\">\r\n          <img src={user.profile_img} />\r\n        </span>\r\n        <span className=\"invitation_nickname\">{user.nickname}</span>\r\n      </div>\r\n      {/* 초대버튼 */}\r\n      <button>초대</button>\r\n    </li>\r\n  );\r\n};\r\n\r\n// 친구 관련 모달\r\nexport const Invitation = ({\r\n  user,\r\n  show,\r\n  setShow,\r\n  participants,\r\n}: InvitationProps) => {\r\n  function reset() {\r\n    setShow(false);\r\n    emitter.emit(\"modal\", { type: \"invitation\" });\r\n  }\r\n\r\n  let [invitationList, setInvitationList] = useState<User[]>([]);\r\n\r\n  useEffect(() => {\r\n    let list: User[] = [];\r\n    if (user && user.friends!.length && participants && participants.length)\r\n      for (var i = 0; i < user.friends!.length; i++) {\r\n        let pusher = true;\r\n        let cn = user.friends![i].nickname;\r\n        for (var j = 0; j < participants!.length; j++) {\r\n          let ccn = participants![j].nickname;\r\n          if (cn == ccn) {\r\n            pusher = false;\r\n            break;\r\n          }\r\n        }\r\n        if (pusher) list.push(user.friends![i]);\r\n      }\r\n    setInvitationList(list.map((val) => val));\r\n  }, [participants]);\r\n\r\n  return (\r\n    <div\r\n      className=\"invitation_modal\"\r\n      style={{ display: show ? \"flex\" : \"none\" }}\r\n    >\r\n      <header className=\"modal_header\">\r\n        <button onClick={reset}>X</button>\r\n      </header>\r\n\r\n      <ul className=\"invitation_list\">\r\n        {invitationList.length ? (\r\n          invitationList.map((val) => <InvitationLi user={val} />)\r\n        ) : (\r\n          <p>초대할 친구가 없습니다.</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const RoomMain = ({\r\n  user,\r\n  stream,\r\n  connects,\r\n  participants,\r\n}: RoomMainProps) => {\r\n  let { id } = useParams();\r\n  let roomId = `room${id}`;\r\n  let navigate = useNavigate();\r\n\r\n  let localRef = useRef<HTMLVideoElement | null>(null);\r\n  let localStreamRef = useRef<MediaStream | null>(null);\r\n\r\n  let shareStreamRef = useRef<HTMLVideoElement | null>(null);\r\n\r\n  let [audio, setAudio] = useState<boolean>(true);\r\n  let [video, setVideo] = useState<boolean>(true);\r\n\r\n  let [otherShare, setOtherShare] = useState<{\r\n    state: boolean;\r\n    nickname: string;\r\n  }>({ state: false, nickname: \"\" });\r\n  let [shareStream, setShareStream] = useState<MediaStream | null>(null);\r\n  let [showInvitation, setShowInvitation] = useState<boolean>(false);\r\n\r\n  let openModal = () => {\r\n    setShowInvitation(true);\r\n    emitter.emit(\"modal\", { type: \"invitation\", open: true });\r\n  };\r\n\r\n  // 다른 사용자 트랙 변경\r\n  let trackChange = (stream: any) => {\r\n    Object.entries(connects).forEach(([from, info]) => {\r\n      let sender = info.pc\r\n        .getSenders()\r\n        .find((s: any) => s.track.kind == \"video\");\r\n      if (sender) sender.replaceTrack(stream);\r\n    });\r\n  };\r\n\r\n  // 화면 공유 과정\r\n  let changeProcess = (\r\n    streamTrack: MediaStreamTrack | undefined,\r\n    stream: MediaStream | null,\r\n    state: boolean\r\n  ) => {\r\n    state\r\n      ? socketClient.emit(\"share screen\", roomId, user.nickname)\r\n      : socketClient.emit(\"share screen off\", roomId);\r\n\r\n    setShareStream(stream);\r\n    trackChange(streamTrack);\r\n    setOtherShare((c) => ({ ...c, state, nickname: user.nickname! }));\r\n  };\r\n\r\n  //내 화면 공유 시작\r\n  let ShareStart = async () => {\r\n    if (otherShare.state) {\r\n      alert(\"다른 이가 화면공유 중입니다\");\r\n      return;\r\n    }\r\n    try {\r\n      let s_stream = await navigator.mediaDevices.getDisplayMedia({\r\n        video: true,\r\n      });\r\n      let streamTrack = s_stream.getVideoTracks()[0];\r\n\r\n      changeProcess(streamTrack, s_stream, true);\r\n\r\n      streamTrack.onended = () => {\r\n        changeProcess(stream?.getVideoTracks()[0], null, false);\r\n      };\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  // 다른 사용자가 화면 공유를 시작함\r\n  let otherScreenShare = (from: string) => {\r\n    setOtherShare((c) => ({ ...c, state: true, nickname: from }));\r\n  };\r\n\r\n  // 다른 사용자가 화면 공유를 종료함\r\n  let otherSCreenShareOFf = () => {\r\n    setShareStream(null);\r\n    setOtherShare((c) => ({ ...c, state: false, nickname: \"\" }));\r\n  };\r\n\r\n  // 화면 on/off\r\n  let toggleMedia = (type: \"audio\" | \"video\") => {\r\n    let state: boolean = false;\r\n    if (!localStreamRef.current) return;\r\n\r\n    localStreamRef.current\r\n      .getTracks()\r\n      .filter((track) => track.kind === type)\r\n      .forEach((track) => {\r\n        state = !track.enabled;\r\n        track.enabled = !track.enabled;\r\n      });\r\n\r\n    socketClient.emit(\"toggle track\", roomId, user.nickname, type, state);\r\n    type == \"audio\" ? setAudio(!audio) : setVideo(!video);\r\n  };\r\n\r\n  // 방을 떠남\r\n  let leaveRoom = () => {\r\n    if (user.nickname !== \"\") {\r\n      socketClient.emit(\"leave room\", user.nickname, roomId);\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  // useEffect ---------------\r\n\r\n  // 스트림 ref 설정\r\n  useEffect(() => {\r\n    if (stream) {\r\n      localRef.current!.srcObject = stream;\r\n      localStreamRef.current = stream;\r\n    }\r\n  }, [stream]);\r\n\r\n  // 화면공유 소켓 초기화\r\n  useEffect(() => {\r\n    socketClient.on(\"share screen\", otherScreenShare);\r\n    socketClient.on(\"share screen off\", otherSCreenShareOFf);\r\n\r\n    return () => {\r\n      socketClient.off(\"share screen\", otherScreenShare);\r\n      socketClient.on(\"share screen off\", otherSCreenShareOFf);\r\n    };\r\n  }, []);\r\n\r\n  // 상대가 화면 공유 시작시 상대방의 비디오 트랙을 shareSTream으로 설정\r\n  useEffect(() => {\r\n    let con = Object.entries(connects);\r\n    if (con.length && otherShare.state && otherShare.nickname !== \"\") {\r\n      let shareInfo = con.find(([from, info]) => from === otherShare.nickname);\r\n      if (shareInfo) {\r\n        let info = shareInfo[1];\r\n        info.pc.getReceivers().forEach((receive: any) => {\r\n          setShareStream(new MediaStream([receive.track]));\r\n        });\r\n      }\r\n    }\r\n  }, [connects, otherShare.nickname]);\r\n\r\n  // 공유 스트림이 변경되면 공유 ref.srcObject 변경\r\n  useEffect(() => {\r\n    if (shareStream && shareStreamRef.current) {\r\n      shareStreamRef.current.srcObject = shareStream;\r\n    }\r\n  }, [shareStream]);\r\n\r\n  return (\r\n    <div className=\"pwf-streamRoom_container\">\r\n      {/* modal */}\r\n      <Invitation\r\n        user={user}\r\n        show={showInvitation}\r\n        setShow={setShowInvitation}\r\n        participants={participants}\r\n      />\r\n      {/* 화면창 */}\r\n      <div className=\"pwf-screen_container\">\r\n        {/* p2p 연결화면들 */}\r\n        <ul className={otherShare.state ? \"share\" : \"user_screen_lists\"}>\r\n          {/* 내 화면 */}\r\n          <div className=\"user_video_box\">\r\n            {/* 유저 비디오 */}\r\n            <video\r\n              ref={localRef}\r\n              autoPlay\r\n              playsInline\r\n              className=\"user_video\"\r\n            ></video>\r\n            {/* 유저 정보 */}\r\n            <div className=\"user_info_box\">\r\n              <div>\r\n                <span>\r\n                  <i\r\n                    className={`fa-solid fa-microphone-lines${\r\n                      audio ? \"\" : \"-slash\"\r\n                    }`}\r\n                  ></i>\r\n                </span>\r\n                <span>\r\n                  <i\r\n                    className={`fa-solid fa-video${video ? \"\" : \"-slash\"}`}\r\n                  ></i>\r\n                </span>\r\n              </div>\r\n              <span>{user.nickname}</span>\r\n            </div>\r\n          </div>\r\n          {/* 다른 참가자 스트리밍 */}\r\n          {Object.entries(connects).map(([from, stream]) => (\r\n            <FriendStream from={from} stream={stream} />\r\n          ))}\r\n        </ul>\r\n        {/* 화면 공유시 공유창 */}\r\n        <div\r\n          className=\"share_screen_container\"\r\n          style={{ display: otherShare.state ? \"flex\" : \"none\" }}\r\n        >\r\n          <video\r\n            ref={shareStreamRef}\r\n            autoPlay\r\n            playsInline\r\n            className=\"share_video\"\r\n          ></video>\r\n          <span className=\"share_user_nickname\">{otherShare.nickname}</span>\r\n        </div>\r\n      </div>\r\n      {/* main footer */}\r\n      <footer className=\"streamRoom_footer\">\r\n        {/* 유저 음성 및 비디오 */}\r\n        <div className=\"user_video_options\">\r\n          {/* 음성 */}\r\n          <button onClick={() => toggleMedia(\"audio\")}>\r\n            <i\r\n              className={`fa-solid fa-microphone-lines${audio ? \"\" : \"-slash\"}`}\r\n            ></i>\r\n            <span>{audio ? \"음소거\" : \"음소거 해제\"}</span>\r\n          </button>\r\n          {/* 비디오 */}\r\n          <button\r\n            title={`비디오${video ? \"\" : \" 해제\"}`}\r\n            onClick={() => toggleMedia(\"video\")}\r\n          >\r\n            <i className={`fa-solid fa-video${video ? \"\" : \"-slash\"}`}></i>\r\n            <span>{video ? \"비디오\" : \"비디오 해제\"}</span>\r\n          </button>\r\n        </div>\r\n\r\n        {/* 비디오 메뉴 */}\r\n        <div className=\"room_options\">\r\n          {/* 방에 친구초대 */}\r\n          <button onClick={openModal}>\r\n            <i className=\"fa-solid fa-user-plus\"></i>\r\n            <span>초대</span>\r\n          </button>\r\n          {/* 화면공유 */}\r\n          <button\r\n            onClick={ShareStart}\r\n            style={{ color: otherShare.state ? \"var(--pwf-blue)\" : \"white\" }}\r\n          >\r\n            <i className=\"fa-brands fa-creative-commons-share\"></i>\r\n            <span>화면공유</span>\r\n          </button>\r\n          {/* 내 미디어 변경 */}\r\n          <button>\r\n            <i className=\"fa-solid fa-desktop\"></i>\r\n            <span>내 미디어</span>\r\n          </button>\r\n          {/* 메뉴 */}\r\n          <button onClick={() => emitter.emit(\"room menu\", true)}>\r\n            <i className=\"fa-brands fa-elementor\"></i>\r\n            <span>메뉴</span>\r\n          </button>\r\n        </div>\r\n        {/* 방 나가기 */}\r\n        <button className=\"room_exit\" onClick={leaveRoom}>\r\n          방나가기\r\n        </button>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}