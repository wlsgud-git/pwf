{"ast":null,"code":"// library\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { userAction } from \"../actions/userAction\";\n\n// type\n\nconst initialState = {\n  id: 0,\n  nickname: \"\",\n  profile_img: \"\",\n  friends: [],\n  email: \"\"\n  //   profile_img: \"\",\n  //   my_friends: [],\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  // reducer\n  reducers: {},\n  // actions\n  extraReducers: builder => {\n    builder.addCase(userAction.getUserAction.fulfilled, (state, action) => {\n      if (action.payload) state = action.payload;\n    });\n  }\n});\n\n// export const { getUser } = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","userAction","initialState","id","nickname","profile_img","friends","email","userSlice","name","reducers","extraReducers","builder","addCase","getUserAction","fulfilled","state","action","payload","reducer"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/context/reducer/userReducer.ts"],"sourcesContent":["// library\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nimport { userAction } from \"../actions/userAction\";\r\n\r\n// type\r\nimport { User } from \"../../types/user\";\r\n\r\ninterface userReducer {\r\n  // getUser(state: User, info: PayloadAction<User>): void;\r\n  //   createUser(state: User, info: PayloadAction<string>): void;\r\n  //   updateUser: (state: User, info: User) => void;\r\n  //   deleteUser: (state: User, id: string) => void;\r\n}\r\n\r\nconst initialState: User = {\r\n  id: 0,\r\n  nickname: \"\",\r\n  profile_img: \"\",\r\n  friends: [],\r\n  email: \"\",\r\n  //   profile_img: \"\",\r\n  //   my_friends: [],\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState, // reducer\r\n  reducers: {} satisfies userReducer, // actions\r\n  extraReducers: (builder) => {\r\n    builder.addCase(userAction.getUserAction.fulfilled, (state, action) => {\r\n      if (action.payload) state = action.payload;\r\n    });\r\n  },\r\n});\r\n\r\n// export const { getUser } = userSlice.actions;\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAuB,kBAAkB;AAE7D,SAASC,UAAU,QAAQ,uBAAuB;;AAElD;;AAUA,MAAMC,YAAkB,GAAG;EACzBC,EAAE,EAAE,CAAC;EACLC,QAAQ,EAAE,EAAE;EACZC,WAAW,EAAE,EAAE;EACfC,OAAO,EAAE,EAAE;EACXC,KAAK,EAAE;EACP;EACA;AACF,CAAC;AAED,MAAMC,SAAS,GAAGR,WAAW,CAAC;EAC5BS,IAAI,EAAE,MAAM;EACZP,YAAY;EAAE;EACdQ,QAAQ,EAAE,CAAC,CAAuB;EAAE;EACpCC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACZ,UAAU,CAACa,aAAa,CAACC,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACrE,IAAIA,MAAM,CAACC,OAAO,EAAEF,KAAK,GAAGC,MAAM,CAACC,OAAO;IAC5C,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACA,eAAeV,SAAS,CAACW,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}