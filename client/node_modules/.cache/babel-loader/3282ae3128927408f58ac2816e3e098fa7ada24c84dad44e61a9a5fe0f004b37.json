{"ast":null,"code":"// 이메일 인가\nexport const emailValidate = async (email, set_email) => {\n  let result = email.toString().trim().toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n  try {\n    if (!result) set_email(c => ({\n      ...c,\n      error: true\n    }));\n  } catch (err) {}\n};\n\n// 비밀번호 인가\nexport const passwordValidate = (password, set_password) => {\n  return password.trim().toLowerCase().match(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!*?&])[A-Za-z\\d@$!%*?&]{8,20}$/);\n};","map":{"version":3,"names":["emailValidate","email","set_email","result","toString","trim","toLowerCase","match","c","error","err","passwordValidate","password","set_password"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/validation/auth.ts"],"sourcesContent":["import { Dispatch } from \"react\";\r\n\r\ninterface InputProps {\r\n  error: boolean;\r\n  error_msg: string;\r\n  value: string;\r\n}\r\n\r\n// 이메일 인가\r\nexport const emailValidate = async (\r\n  email: string,\r\n  set_email: Dispatch<React.SetStateAction<InputProps>>\r\n) => {\r\n  let result = email\r\n    .toString()\r\n    .trim()\r\n    .toLowerCase()\r\n    .match(\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n    );\r\n  try {\r\n    if (!result) set_email((c) => ({ ...c, error: true }));\r\n  } catch (err) {}\r\n};\r\n\r\n// 비밀번호 인가\r\nexport const passwordValidate = (\r\n  password: string,\r\n  set_password: () => void\r\n) => {\r\n  return password\r\n    .trim()\r\n    .toLowerCase()\r\n    .match(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!*?&])[A-Za-z\\d@$!%*?&]{8,20}$/);\r\n};\r\n"],"mappings":"AAQA;AACA,OAAO,MAAMA,aAAa,GAAG,MAAAA,CAC3BC,KAAa,EACbC,SAAqD,KAClD;EACH,IAAIC,MAAM,GAAGF,KAAK,CACfG,QAAQ,CAAC,CAAC,CACVC,IAAI,CAAC,CAAC,CACNC,WAAW,CAAC,CAAC,CACbC,KAAK,CACJ,wJACF,CAAC;EACH,IAAI;IACF,IAAI,CAACJ,MAAM,EAAED,SAAS,CAAEM,CAAC,KAAM;MAAE,GAAGA,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC,CAAC;EACxD,CAAC,CAAC,OAAOC,GAAG,EAAE,CAAC;AACjB,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAGA,CAC9BC,QAAgB,EAChBC,YAAwB,KACrB;EACH,OAAOD,QAAQ,CACZP,IAAI,CAAC,CAAC,CACNC,WAAW,CAAC,CAAC,CACbC,KAAK,CAAC,+DAA+D,CAAC;AAC3E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}