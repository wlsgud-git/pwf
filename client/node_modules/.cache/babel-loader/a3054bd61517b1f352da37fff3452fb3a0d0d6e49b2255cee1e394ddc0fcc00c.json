{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashh1\\\\Desktop\\\\project\\\\PlayWithFriends\\\\client\\\\src\\\\page\\\\streamroom.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport \"../css/room/streamRoom.css\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { stream_service } from \"../service/stream.service\";\nimport { useSelector } from \"react-redux\";\n\n// type\n// import { Room } from \"../types/room\";\n\n// component\nimport { createFormData } from \"../util/form\";\nimport { connectRoom } from \"../util/stream\";\nimport { Menu } from \"../components/room/menu\";\nimport { Stream } from \"../components/room/stream\";\nimport { useStream } from \"../context/stream.context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticipantVideo = ({\n  nickname,\n  trackInfo\n}) => {\n  _s();\n  let videoRef = useRef(null);\n  useEffect(() => {\n    var _trackInfo$audio_trac, _trackInfo$video_trac;\n    if (!videoRef.current) return;\n    (_trackInfo$audio_trac = trackInfo.audio_track) === null || _trackInfo$audio_trac === void 0 ? void 0 : _trackInfo$audio_trac.attach(videoRef.current);\n    (_trackInfo$video_trac = trackInfo.video_track) === null || _trackInfo$video_trac === void 0 ? void 0 : _trackInfo$video_trac.attach(videoRef.current);\n  }, [trackInfo.audio_track, trackInfo.video_track]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"participant_track_box\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"participant_infomation\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `fa-solid fa-microphone${trackInfo.audio_state ? \"\" : \"-slash\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `fa-solid fa-video${trackInfo.video_state ? \"\" : \"-slash\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: nickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(ParticipantVideo, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n_c = ParticipantVideo;\nexport const StreamRoom = () => {\n  _s2();\n  // using\n  let user = useSelector(state => state.user);\n  let {\n    id\n  } = useParams();\n  let navigate = useNavigate();\n  let {\n    room,\n    setRoom,\n    setParticipants\n  } = useStream();\n  let [token, setToken] = useState(\"\");\n  let joinParticipant = who => setParticipants(c => ({\n    ...c,\n    [who]: {}\n  }));\n  let setParticipantTrack = (who, track) => {\n    track.kind == \"video\" ? setParticipants(c => ({\n      ...c,\n      [who]: {\n        ...c[who],\n        video_state: true,\n        video_track: track\n      }\n    })) : setParticipants(c => ({\n      ...c,\n      [who]: {\n        ...c[who],\n        audio_state: true,\n        audio_track: track\n      }\n    }));\n  };\n  let changeTrackState = (who, track, state) => {\n    setParticipants(c => ({\n      ...c,\n      [who]: {\n        ...c[who],\n        video_state: track.kind == \"video\" ? state : c[who].video_state,\n        audio_state: track.kind == \"audio\" ? state : c[who].audio_state\n      }\n    }));\n  };\n\n  // init ------------------------------------------\n  useEffect(() => {\n    let start = async () => {\n      try {\n        let token = await stream_service.roomAccessToken(createFormData({\n          room: `room${id}`,\n          identity: user.nickname\n        }));\n        setToken(token);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    start();\n  }, []);\n\n  // token으로 room 연결\n  useEffect(() => {\n    if (token == \"\") return;\n    let test = async () => {\n      try {\n        let room = await connectRoom(token);\n        setRoom(room);\n      } catch (err) {\n        console.log(err);\n      }\n\n      // 새 참가자 관련\n      room.on(\"participantConnected\", participant => {\n        let identity = participant.identity;\n        joinParticipant(identity);\n        participant.on(\"trackSubscribed\", track => setParticipantTrack(identity, track));\n        participant.on(\"trackMuted\", track => changeTrackState(identity, track, false));\n        participant.on(\"trackUnmuted\", track => changeTrackState(identity, track, true));\n      });\n      //   // 기준 참가자 관련\n      room.remoteParticipants.forEach(participant => {\n        let identity = participant.identity;\n        participant.getTrackPublications().forEach(pub => {\n          if (pub.isSubscribed && pub.track) {\n            pub.kind == \"video\" ? setParticipant(c => ({\n              ...c,\n              [identity]: {\n                ...c[identity],\n                video_state: true,\n                video_track: pub.track\n              }\n            })) : setParticipant(c => ({\n              ...c,\n              [identity]: {\n                ...c[identity],\n                audio_state: true,\n                audio_track: pub.track\n              }\n            }));\n          }\n        });\n        participant.on(\"trackMuted\", pub => {\n          setParticipant(c => ({\n            ...c,\n            [identity]: {\n              ...c[identity],\n              video_state: pub.kind == \"video\" ? false : c[identity].video_state,\n              audio_state: pub.kind == \"audio\" ? false : c[identity].audio_state\n            }\n          }));\n        });\n        participant.on(\"trackUnmuted\", pub => {\n          setParticipant(c => ({\n            ...c,\n            [identity]: {\n              ...c[identity],\n              video_state: pub.kind == \"video\" ? true : c[identity].video_state,\n              audio_state: pub.kind == \"audio\" ? true : c[identity].audio_state\n            }\n          }));\n        });\n      });\n    };\n    if (token !== \"\") test();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page streamRoom_page\",\n    children: [/*#__PURE__*/_jsxDEV(Stream, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n};\n_s2(StreamRoom, \"HEsvD4YJWK11a0mXo6M4wAgiLKI=\", false, function () {\n  return [useSelector, useParams, useNavigate, useStream];\n});\n_c2 = StreamRoom;\nvar _c, _c2;\n$RefreshReg$(_c, \"ParticipantVideo\");\n$RefreshReg$(_c2, \"StreamRoom\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useNavigate","useParams","stream_service","useSelector","createFormData","connectRoom","Menu","Stream","useStream","jsxDEV","_jsxDEV","ParticipantVideo","nickname","trackInfo","_s","videoRef","_trackInfo$audio_trac","_trackInfo$video_trac","current","audio_track","attach","video_track","className","children","ref","autoPlay","fileName","_jsxFileName","lineNumber","columnNumber","audio_state","video_state","_c","StreamRoom","_s2","user","state","id","navigate","room","setRoom","setParticipants","token","setToken","joinParticipant","who","c","setParticipantTrack","track","kind","changeTrackState","start","roomAccessToken","identity","err","console","log","test","on","participant","remoteParticipants","forEach","getTrackPublications","pub","isSubscribed","setParticipant","_c2","$RefreshReg$"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/page/streamroom.tsx"],"sourcesContent":["import \"../css/room/streamRoom.css\";\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { socketClient } from \"../util/socket\";\r\nimport { stream_service } from \"../service/stream.service\";\r\nimport { emitter } from \"../util/event\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\";\r\nimport {\r\n  Track,\r\n  Room,\r\n  RemoteParticipant,\r\n  RemoteTrackPublication,\r\n  createLocalTracks,\r\n  LocalVideoTrack,\r\n  LocalAudioTrack,\r\n  RemoteVideoTrack,\r\n  RemoteAudioTrack,\r\n  RemoteTrack,\r\n  LocalTrack,\r\n  TrackPublication,\r\n} from \"livekit-client\";\r\n\r\n// type\r\n// import { Room } from \"../types/room\";\r\nimport { User } from \"../types/user\";\r\nimport { PeerConnects } from \"../types/room\";\r\n\r\n// component\r\nimport { createFormData } from \"../util/form\";\r\nimport {\r\n  connectRoom,\r\n  getMediaStream,\r\n  getStream,\r\n  getTrack,\r\n} from \"../util/stream\";\r\nimport {\r\n  LocalTrackProps,\r\n  RemoteTrackProps,\r\n  TrackProps,\r\n} from \"../types/stream.types\";\r\nimport { Menu } from \"../components/room/menu\";\r\nimport { Stream } from \"../components/room/stream\";\r\nimport { StreamProvider, useStream } from \"../context/stream.context\";\r\n\r\ninterface ParticipantProps {\r\n  nickname: string;\r\n  trackInfo: TrackProps;\r\n}\r\n\r\nconst ParticipantVideo = ({ nickname, trackInfo }: ParticipantProps) => {\r\n  let videoRef = useRef<HTMLVideoElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!videoRef.current) return;\r\n    trackInfo.audio_track?.attach(videoRef.current);\r\n    trackInfo.video_track?.attach(videoRef.current);\r\n  }, [trackInfo.audio_track, trackInfo.video_track]);\r\n  return (\r\n    <div className=\"participant_track_box\">\r\n      <video ref={videoRef} autoPlay></video>\r\n      <div className=\"participant_infomation\">\r\n        <span>\r\n          <i\r\n            className={`fa-solid fa-microphone${\r\n              trackInfo.audio_state ? \"\" : \"-slash\"\r\n            }`}\r\n          ></i>\r\n        </span>\r\n        <span>\r\n          <i\r\n            className={`fa-solid fa-video${\r\n              trackInfo.video_state ? \"\" : \"-slash\"\r\n            }`}\r\n          ></i>\r\n        </span>\r\n        <span>{nickname}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const StreamRoom = () => {\r\n  // using\r\n  let user = useSelector((state: RootState) => state.user);\r\n  let { id } = useParams();\r\n  let navigate = useNavigate();\r\n\r\n  let { room, setRoom, setParticipants } = useStream();\r\n\r\n  let [token, setToken] = useState<string>(\"\");\r\n\r\n  let joinParticipant = (who: string) =>\r\n    setParticipants((c) => ({ ...c, [who]: {} }));\r\n\r\n  let setParticipantTrack = (who: string, track: RemoteTrack) => {\r\n    track.kind == \"video\"\r\n      ? setParticipants((c) => ({\r\n          ...c,\r\n          [who]: {\r\n            ...c[who],\r\n            video_state: true,\r\n            video_track: track as RemoteVideoTrack,\r\n          },\r\n        }))\r\n      : setParticipants((c) => ({\r\n          ...c,\r\n          [who]: {\r\n            ...c[who],\r\n            audio_state: true,\r\n            audio_track: track as RemoteAudioTrack,\r\n          },\r\n        }));\r\n  };\r\n\r\n  let changeTrackState = (\r\n    who: string,\r\n    track: TrackPublication,\r\n    state: boolean\r\n  ) => {\r\n    setParticipants((c) => ({\r\n      ...c,\r\n      [who]: {\r\n        ...c[who],\r\n        video_state: track.kind == \"video\" ? state : c[who].video_state,\r\n        audio_state: track.kind == \"audio\" ? state : c[who].audio_state,\r\n      },\r\n    }));\r\n  };\r\n\r\n  // init ------------------------------------------\r\n  useEffect(() => {\r\n    let start = async () => {\r\n      try {\r\n        let token = await stream_service.roomAccessToken(\r\n          createFormData({ room: `room${id}`, identity: user.nickname })\r\n        );\r\n        setToken(token);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    start();\r\n  }, []);\r\n\r\n  // token으로 room 연결\r\n  useEffect(() => {\r\n    if (token == \"\") return;\r\n    let test = async () => {\r\n      try {\r\n        let room = await connectRoom(token);\r\n        setRoom(room);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n\r\n      // 새 참가자 관련\r\n      room.on(\"participantConnected\", (participant: RemoteParticipant) => {\r\n        let identity = participant.identity;\r\n        joinParticipant(identity);\r\n        participant.on(\"trackSubscribed\", (track) =>\r\n          setParticipantTrack(identity, track)\r\n        );\r\n        participant.on(\"trackMuted\", (track) =>\r\n          changeTrackState(identity, track, false)\r\n        );\r\n        participant.on(\"trackUnmuted\", (track) =>\r\n          changeTrackState(identity, track, true)\r\n        );\r\n      });\r\n      //   // 기준 참가자 관련\r\n      room.remoteParticipants.forEach((participant) => {\r\n        let identity = participant.identity;\r\n        participant.getTrackPublications().forEach((pub) => {\r\n          if (pub.isSubscribed && pub.track) {\r\n            pub.kind == \"video\"\r\n              ? setParticipant((c) => ({\r\n                  ...c,\r\n                  [identity]: {\r\n                    ...c[identity],\r\n                    video_state: true,\r\n                    video_track: pub.track as RemoteVideoTrack,\r\n                  },\r\n                }))\r\n              : setParticipant((c) => ({\r\n                  ...c,\r\n                  [identity]: {\r\n                    ...c[identity],\r\n                    audio_state: true,\r\n                    audio_track: pub.track as RemoteAudioTrack,\r\n                  },\r\n                }));\r\n          }\r\n        });\r\n        participant.on(\"trackMuted\", (pub) => {\r\n          setParticipant((c) => ({\r\n            ...c,\r\n            [identity]: {\r\n              ...c[identity],\r\n              video_state:\r\n                pub.kind == \"video\" ? false : c[identity].video_state,\r\n              audio_state:\r\n                pub.kind == \"audio\" ? false : c[identity].audio_state,\r\n            },\r\n          }));\r\n        });\r\n        participant.on(\"trackUnmuted\", (pub) => {\r\n          setParticipant((c) => ({\r\n            ...c,\r\n            [identity]: {\r\n              ...c[identity],\r\n              video_state: pub.kind == \"video\" ? true : c[identity].video_state,\r\n              audio_state: pub.kind == \"audio\" ? true : c[identity].audio_state,\r\n            },\r\n          }));\r\n        });\r\n      });\r\n    };\r\n    if (token !== \"\") test();\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"page streamRoom_page\">\r\n      {/* 참가자들의 화면 부분 */}\r\n      <Stream />\r\n      {/* 참가자들 채팅 / 참가자 목록 */}\r\n      <Menu />\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}