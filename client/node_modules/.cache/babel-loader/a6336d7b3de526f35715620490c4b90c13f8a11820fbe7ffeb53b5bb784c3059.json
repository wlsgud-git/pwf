{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashh1\\\\Desktop\\\\project\\\\PlayWithFriends\\\\client\\\\src\\\\page\\\\streamroom.tsx\",\n  _s = $RefreshSig$();\nimport \"../css/room/streamRoom.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { stream_service } from \"../service/stream.service\";\nimport { useSelector } from \"react-redux\";\n// type\n\n// component\nimport { createFormData } from \"../util/form\";\nimport { connectRoom } from \"../util/stream\";\nimport { Menu } from \"../components/room/menu\";\nimport { Stream } from \"../components/room/stream\";\nimport { useSetStream, StreamContext } from \"../context/stream.context\";\nimport { useContextSelector } from \"use-context-selector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StreamRoom = () => {\n  _s();\n  let {\n    id\n  } = useParams();\n  let navigate = useNavigate();\n  // using\n  let user = useSelector(state => state.user);\n  let room = useContextSelector(StreamContext, ctx => ctx.room);\n  let roomInfo = useContextSelector(StreamContext, ctx => ctx.roomInfo);\n  let {\n    setRoom,\n    setRoomInfo\n  } = useSetStream();\n  let [token, setToken] = useState(\"\");\n\n  // 방 연결\n  let roomConnect = async () => {\n    try {\n      let token = await stream_service.roomAccessToken(createFormData({\n        room: `room${id}`,\n        identity: user.nickname\n      }));\n      let room = await connectRoom(token);\n      setRoom(room);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // init ------------------------------------------\n  useEffect(() => {}, []);\n\n  // token으로 room 연결\n  useEffect(() => {\n    if (!roomInfo) return;\n    roomConnect();\n  }, [roomInfo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page streamRoom_page\",\n    children: [/*#__PURE__*/_jsxDEV(Stream, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(StreamRoom, \"LSAY1yDEeeLAxuCgW+mc2RkbAvk=\", false, function () {\n  return [useParams, useNavigate, useSelector, useContextSelector, useContextSelector, useSetStream];\n});\n_c = StreamRoom;\nvar _c;\n$RefreshReg$(_c, \"StreamRoom\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","stream_service","useSelector","createFormData","connectRoom","Menu","Stream","useSetStream","StreamContext","useContextSelector","jsxDEV","_jsxDEV","StreamRoom","_s","id","navigate","user","state","room","ctx","roomInfo","setRoom","setRoomInfo","token","setToken","roomConnect","roomAccessToken","identity","nickname","err","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/page/streamroom.tsx"],"sourcesContent":["import \"../css/room/streamRoom.css\";\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { stream_service } from \"../service/stream.service\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\";\r\n\r\n// type\r\n\r\n// component\r\nimport { createFormData } from \"../util/form\";\r\nimport { connectRoom } from \"../util/stream\";\r\nimport { Menu } from \"../components/room/menu\";\r\nimport { Stream } from \"../components/room/stream\";\r\nimport { useSetStream, StreamContext } from \"../context/stream.context\";\r\nimport { useContextSelector } from \"use-context-selector\";\r\n\r\nexport const StreamRoom = () => {\r\n  let { id } = useParams();\r\n  let navigate = useNavigate();\r\n  // using\r\n  let user = useSelector((state: RootState) => state.user);\r\n  let room = useContextSelector(StreamContext, (ctx) => ctx.room);\r\n  let roomInfo = useContextSelector(StreamContext, (ctx) => ctx.roomInfo);\r\n\r\n  let { setRoom, setRoomInfo } = useSetStream();\r\n\r\n  let [token, setToken] = useState<string>(\"\");\r\n\r\n  // 방 연결\r\n  let roomConnect = async () => {\r\n    try {\r\n      let token = await stream_service.roomAccessToken(\r\n        createFormData({ room: `room${id}`, identity: user.nickname })\r\n      );\r\n      let room = await connectRoom(token);\r\n      setRoom(room);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  // init ------------------------------------------\r\n  useEffect(() => {}, []);\r\n\r\n  // token으로 room 연결\r\n  useEffect(() => {\r\n    if (!roomInfo) return;\r\n    roomConnect();\r\n  }, [roomInfo]);\r\n\r\n  return (\r\n    <div className=\"page streamRoom_page\">\r\n      {/* 참가자들의 화면 부분 */}\r\n      <Stream />\r\n      {/* 참가자들 채팅 / 참가자 목록 */}\r\n      <Menu />\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAO,4BAA4B;AAEnC,OAAOA,KAAK,IAAIC,SAAS,EAAUC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,WAAW,QAAQ,aAAa;AAGzC;;AAEA;AACA,SAASC,cAAc,QAAQ,cAAc;AAC7C,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,IAAI,QAAQ,yBAAyB;AAC9C,SAASC,MAAM,QAAQ,2BAA2B;AAClD,SAASC,YAAY,EAAEC,aAAa,QAAQ,2BAA2B;AACvE,SAASC,kBAAkB,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,IAAI;IAAEC;EAAG,CAAC,GAAGd,SAAS,CAAC,CAAC;EACxB,IAAIe,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC5B;EACA,IAAIiB,IAAI,GAAGd,WAAW,CAAEe,KAAgB,IAAKA,KAAK,CAACD,IAAI,CAAC;EACxD,IAAIE,IAAI,GAAGT,kBAAkB,CAACD,aAAa,EAAGW,GAAG,IAAKA,GAAG,CAACD,IAAI,CAAC;EAC/D,IAAIE,QAAQ,GAAGX,kBAAkB,CAACD,aAAa,EAAGW,GAAG,IAAKA,GAAG,CAACC,QAAQ,CAAC;EAEvE,IAAI;IAAEC,OAAO;IAAEC;EAAY,CAAC,GAAGf,YAAY,CAAC,CAAC;EAE7C,IAAI,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAS,EAAE,CAAC;;EAE5C;EACA,IAAI2B,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,IAAIF,KAAK,GAAG,MAAMtB,cAAc,CAACyB,eAAe,CAC9CvB,cAAc,CAAC;QAAEe,IAAI,EAAE,OAAOJ,EAAE,EAAE;QAAEa,QAAQ,EAAEX,IAAI,CAACY;MAAS,CAAC,CAC/D,CAAC;MACD,IAAIV,IAAI,GAAG,MAAMd,WAAW,CAACmB,KAAK,CAAC;MACnCF,OAAO,CAACH,IAAI,CAAC;IACf,CAAC,CAAC,OAAOW,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;;EAED;EACAhC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;;EAEvB;EACAA,SAAS,CAAC,MAAM;IACd,IAAI,CAACuB,QAAQ,EAAE;IACfK,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,oBACET,OAAA;IAAKqB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBAEnCtB,OAAA,CAACL,MAAM;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEV1B,OAAA,CAACN,IAAI;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACxB,EAAA,CA1CWD,UAAU;EAAA,QACRZ,SAAS,EACPD,WAAW,EAEfG,WAAW,EACXO,kBAAkB,EACdA,kBAAkB,EAEFF,YAAY;AAAA;AAAA+B,EAAA,GARhC1B,UAAU;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}