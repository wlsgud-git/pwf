{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashh1\\\\Desktop\\\\project\\\\PlayWithFriends\\\\client\\\\src\\\\page\\\\streamroom.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport \"../css/room/streamRoom.css\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { stream_service } from \"../service/stream.service\";\nimport { useSelector } from \"react-redux\";\n\n// type\n// import { Room } from \"../types/room\";\n\n// component\nimport { createFormData } from \"../util/form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticipantVideo = ({\n  nickname,\n  trackInfo\n}) => {\n  _s();\n  let videoRef = useRef(null);\n  useEffect(() => {\n    var _trackInfo$audio_trac, _trackInfo$video_trac;\n    if (!videoRef.current) return;\n    (_trackInfo$audio_trac = trackInfo.audio_track) === null || _trackInfo$audio_trac === void 0 ? void 0 : _trackInfo$audio_trac.attach(videoRef.current);\n    (_trackInfo$video_trac = trackInfo.video_track) === null || _trackInfo$video_trac === void 0 ? void 0 : _trackInfo$video_trac.attach(videoRef.current);\n  }, [trackInfo.audio_track, trackInfo.video_track]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"participant_track_box\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"participant_infomation\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `fa-solid fa-microphone${trackInfo.audio_state ? \"\" : \"-slash\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `fa-solid fa-video${trackInfo.video_state ? \"\" : \"-slash\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: nickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ParticipantVideo, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n_c = ParticipantVideo;\nexport const StreamRoom = () => {\n  _s2();\n  // using\n  let user = useSelector(state => state.user);\n  let {\n    id\n  } = useParams();\n  let navigate = useNavigate();\n  let [token, setToken] = useState(\"\");\n\n  // menu\n  let [menu, setMenu] = useState(true);\n\n  // pariticipant\n  let [participant, setParticipant] = useState({});\n\n  // share\n  let [share, setShare] = useState(false);\n  let [chatInput, setChatInput] = useState(\"\");\n\n  // init ------------------------------------------\n  useEffect(() => {\n    let start = async () => {\n      try {\n        let token = await stream_service.roomAccessToken(createFormData({\n          room: `room${id}`,\n          identity: user.nickname\n        }));\n        setToken(token);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    start();\n  }, []);\n  useEffect(() => {\n    // let test = async () => {\n    //   try {\n    //     const room = await connectRoom(token);\n    //     const tracks = await getStream(audio, video);\n\n    //     videoTrack.current = getTrack(tracks!, \"video\") as LocalVideoTrack;\n    //     audioTrack.current = getTrack(tracks!, \"audio\") as LocalAudioTrack;\n\n    //     if (videoTrack.current && localRef.current) {\n    //       await room.localParticipant.publishTrack(videoTrack.current);\n    //       videoTrack.current.attach(localRef.current);\n    //     }\n    //     if (audioTrack.current && localRef.current) {\n    //       await room.localParticipant.publishTrack(audioTrack.current);\n    //       audioTrack.current.attach(localRef.current);\n    //     }\n\n    //     // 새 참가자 관련\n    //     room.on(\"participantConnected\", (participant: RemoteParticipant) => {\n    //       let identity = participant.identity;\n    //       setParticipant((c) => ({ ...c, [identity]: {} }));\n\n    //       participant.on(\"trackSubscribed\", (track) => {\n    //         track.kind == \"video\"\n    //           ? setParticipant((c) => ({\n    //               ...c,\n    //               [identity]: {\n    //                 ...c[identity],\n    //                 video_state: true,\n    //                 video_track: track as RemoteVideoTrack,\n    //               },\n    //             }))\n    //           : setParticipant((c) => ({\n    //               ...c,\n    //               [identity]: {\n    //                 ...c[identity],\n    //                 audio_state: true,\n    //                 audio_track: track as RemoteAudioTrack,\n    //               },\n    //             }));\n    //       });\n\n    //       participant.on(\"trackMuted\", (track) => {\n    //         setParticipant((c) => ({\n    //           ...c,\n    //           [identity]: {\n    //             ...c[identity],\n    //             video_state:\n    //               track.kind == \"video\" ? false : c[identity].video_state,\n    //             audio_state:\n    //               track.kind == \"audio\" ? false : c[identity].audio_state,\n    //           },\n    //         }));\n    //       });\n\n    //       participant.on(\"trackUnmuted\", (track) => {\n    //         setParticipant((c) => ({\n    //           ...c,\n    //           [identity]: {\n    //             ...c[identity],\n    //             video_state:\n    //               track.kind == \"video\" ? true : c[identity].video_state,\n    //             audio_state:\n    //               track.kind == \"audio\" ? true : c[identity].audio_state,\n    //           },\n    //         }));\n    //       });\n\n    //       // participant.on(\"track\");\n    //     });\n\n    //     // 기준 참가자 관련\n    //     room.remoteParticipants.forEach((participant) => {\n    //       let identity = participant.identity;\n\n    //       participant.getTrackPublications().forEach((pub) => {\n    //         if (pub.isSubscribed && pub.track) {\n    //           pub.kind == \"video\"\n    //             ? setParticipant((c) => ({\n    //                 ...c,\n    //                 [identity]: {\n    //                   ...c[identity],\n    //                   video_state: true,\n    //                   video_track: pub.track as RemoteVideoTrack,\n    //                 },\n    //               }))\n    //             : setParticipant((c) => ({\n    //                 ...c,\n    //                 [identity]: {\n    //                   ...c[identity],\n    //                   audio_state: true,\n    //                   audio_track: pub.track as RemoteAudioTrack,\n    //                 },\n    //               }));\n    //         }\n    //       });\n    //       participant.on(\"trackMuted\", (pub) => {\n    //         setParticipant((c) => ({\n    //           ...c,\n    //           [identity]: {\n    //             ...c[identity],\n    //             video_state:\n    //               pub.kind == \"video\" ? false : c[identity].video_state,\n    //             audio_state:\n    //               pub.kind == \"audio\" ? false : c[identity].audio_state,\n    //           },\n    //         }));\n    //       });\n\n    //       participant.on(\"trackUnmuted\", (pub) => {\n    //         setParticipant((c) => ({\n    //           ...c,\n    //           [identity]: {\n    //             ...c[identity],\n    //             video_state:\n    //               pub.kind == \"video\" ? true : c[identity].video_state,\n    //             audio_state:\n    //               pub.kind == \"audio\" ? true : c[identity].audio_state,\n    //           },\n    //         }));\n    //       });\n    //     });\n    //   } catch (err) {\n    //     console.log(err);\n    //   }\n    // };\n\n    if (token !== \"\") test();\n\n    // return () => {\n    //   videoTrack.current?.detach();\n    //   videoTrack.current?.stop();\n    //   audioTrack.current?.stop();\n    //   // room?\n    // };\n  }, [token]);\n\n  // // track\n  // const toggleTrack = (type: \"audio\" | \"video\") => {\n  //   if (!localRef.current) return;\n  //   if (type == \"video\") {\n  //     if (!videoTrack.current) return;\n\n  //     video ? videoTrack.current.mute() : videoTrack.current.unmute();\n  //     setVideo((c) => !c);\n  //   } else {\n  //     if (!audioTrack.current) return;\n\n  //     audio ? audioTrack.current.mute() : audioTrack.current.unmute();\n  //     setAudio((c) => !c);\n  //   }\n  // };\n\n  // share\n  function sharing() {\n    setShare(c => !c);\n  }\n\n  // chating\n  const sendChat = async e => {\n    e.preventDefault();\n    if (chatInput == \"\") return;\n    setChatInput(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page streamRoom_page\",\n    children: [/*#__PURE__*/_jsxDEV(StreamRoom, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pwf-chat_with_participants\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pwf-chat_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"type_menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uCC44\\uD305\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat_lists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          className: \"pwf-chat_form\",\n          onSubmit: sendChat,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: chatInput,\n            onChange: e => setChatInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-paper-plane\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pwf-participants_container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n};\n_s2(StreamRoom, \"DUMXS0AdWFhxBSnFwiBd6RPABlM=\", false, function () {\n  return [useSelector, useParams, useNavigate];\n});\n_c2 = StreamRoom;\nvar _c, _c2;\n$RefreshReg$(_c, \"ParticipantVideo\");\n$RefreshReg$(_c2, \"StreamRoom\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useNavigate","useParams","stream_service","useSelector","createFormData","jsxDEV","_jsxDEV","ParticipantVideo","nickname","trackInfo","_s","videoRef","_trackInfo$audio_trac","_trackInfo$video_trac","current","audio_track","attach","video_track","className","children","ref","autoPlay","fileName","_jsxFileName","lineNumber","columnNumber","audio_state","video_state","_c","StreamRoom","_s2","user","state","id","navigate","token","setToken","menu","setMenu","participant","setParticipant","share","setShare","chatInput","setChatInput","start","roomAccessToken","room","identity","err","console","log","test","sharing","c","sendChat","e","preventDefault","action","onSubmit","type","value","onChange","target","_c2","$RefreshReg$"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/page/streamroom.tsx"],"sourcesContent":["import \"../css/room/streamRoom.css\";\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { socketClient } from \"../util/socket\";\r\nimport { stream_service } from \"../service/stream.service\";\r\nimport { emitter } from \"../util/event\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../context/store\";\r\nimport {\r\n  Track,\r\n  Room,\r\n  RemoteParticipant,\r\n  RemoteTrackPublication,\r\n  createLocalTracks,\r\n  LocalVideoTrack,\r\n  LocalAudioTrack,\r\n  RemoteVideoTrack,\r\n  RemoteAudioTrack,\r\n} from \"livekit-client\";\r\n\r\n// type\r\n// import { Room } from \"../types/room\";\r\nimport { User } from \"../types/user\";\r\nimport { PeerConnects } from \"../types/room\";\r\n\r\n// component\r\nimport { createFormData } from \"../util/form\";\r\nimport {\r\n  connectRoom,\r\n  getMediaStream,\r\n  getStream,\r\n  getTrack,\r\n} from \"../util/stream\";\r\nimport { TrackProps } from \"../types/stream.types\";\r\nimport { FormSubmit, InputChange } from \"../types/event\";\r\n\r\ninterface ParticipantProps {\r\n  nickname: string;\r\n  trackInfo: TrackProps;\r\n}\r\n\r\nconst ParticipantVideo = ({ nickname, trackInfo }: ParticipantProps) => {\r\n  let videoRef = useRef<HTMLVideoElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!videoRef.current) return;\r\n    trackInfo.audio_track?.attach(videoRef.current);\r\n    trackInfo.video_track?.attach(videoRef.current);\r\n  }, [trackInfo.audio_track, trackInfo.video_track]);\r\n  return (\r\n    <div className=\"participant_track_box\">\r\n      <video ref={videoRef} autoPlay></video>\r\n      <div className=\"participant_infomation\">\r\n        <span>\r\n          <i\r\n            className={`fa-solid fa-microphone${\r\n              trackInfo.audio_state ? \"\" : \"-slash\"\r\n            }`}\r\n          ></i>\r\n        </span>\r\n        <span>\r\n          <i\r\n            className={`fa-solid fa-video${\r\n              trackInfo.video_state ? \"\" : \"-slash\"\r\n            }`}\r\n          ></i>\r\n        </span>\r\n        <span>{nickname}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const StreamRoom = () => {\r\n  // using\r\n  let user = useSelector((state: RootState) => state.user);\r\n  let { id } = useParams();\r\n  let navigate = useNavigate();\r\n  let [token, setToken] = useState<string>(\"\");\r\n\r\n  // menu\r\n  let [menu, setMenu] = useState<boolean>(true);\r\n\r\n  // pariticipant\r\n  let [participant, setParticipant] = useState<{\r\n    [nickname: string]: TrackProps;\r\n  }>({});\r\n\r\n  // share\r\n  let [share, setShare] = useState<boolean>(false);\r\n\r\n  let [chatInput, setChatInput] = useState<string>(\"\");\r\n\r\n  // init ------------------------------------------\r\n  useEffect(() => {\r\n    let start = async () => {\r\n      try {\r\n        let token = await stream_service.roomAccessToken(\r\n          createFormData({ room: `room${id}`, identity: user.nickname })\r\n        );\r\n        setToken(token);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    start();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // let test = async () => {\r\n    //   try {\r\n    //     const room = await connectRoom(token);\r\n    //     const tracks = await getStream(audio, video);\r\n\r\n    //     videoTrack.current = getTrack(tracks!, \"video\") as LocalVideoTrack;\r\n    //     audioTrack.current = getTrack(tracks!, \"audio\") as LocalAudioTrack;\r\n\r\n    //     if (videoTrack.current && localRef.current) {\r\n    //       await room.localParticipant.publishTrack(videoTrack.current);\r\n    //       videoTrack.current.attach(localRef.current);\r\n    //     }\r\n    //     if (audioTrack.current && localRef.current) {\r\n    //       await room.localParticipant.publishTrack(audioTrack.current);\r\n    //       audioTrack.current.attach(localRef.current);\r\n    //     }\r\n\r\n    //     // 새 참가자 관련\r\n    //     room.on(\"participantConnected\", (participant: RemoteParticipant) => {\r\n    //       let identity = participant.identity;\r\n    //       setParticipant((c) => ({ ...c, [identity]: {} }));\r\n\r\n    //       participant.on(\"trackSubscribed\", (track) => {\r\n    //         track.kind == \"video\"\r\n    //           ? setParticipant((c) => ({\r\n    //               ...c,\r\n    //               [identity]: {\r\n    //                 ...c[identity],\r\n    //                 video_state: true,\r\n    //                 video_track: track as RemoteVideoTrack,\r\n    //               },\r\n    //             }))\r\n    //           : setParticipant((c) => ({\r\n    //               ...c,\r\n    //               [identity]: {\r\n    //                 ...c[identity],\r\n    //                 audio_state: true,\r\n    //                 audio_track: track as RemoteAudioTrack,\r\n    //               },\r\n    //             }));\r\n    //       });\r\n\r\n    //       participant.on(\"trackMuted\", (track) => {\r\n    //         setParticipant((c) => ({\r\n    //           ...c,\r\n    //           [identity]: {\r\n    //             ...c[identity],\r\n    //             video_state:\r\n    //               track.kind == \"video\" ? false : c[identity].video_state,\r\n    //             audio_state:\r\n    //               track.kind == \"audio\" ? false : c[identity].audio_state,\r\n    //           },\r\n    //         }));\r\n    //       });\r\n\r\n    //       participant.on(\"trackUnmuted\", (track) => {\r\n    //         setParticipant((c) => ({\r\n    //           ...c,\r\n    //           [identity]: {\r\n    //             ...c[identity],\r\n    //             video_state:\r\n    //               track.kind == \"video\" ? true : c[identity].video_state,\r\n    //             audio_state:\r\n    //               track.kind == \"audio\" ? true : c[identity].audio_state,\r\n    //           },\r\n    //         }));\r\n    //       });\r\n\r\n    //       // participant.on(\"track\");\r\n    //     });\r\n\r\n    //     // 기준 참가자 관련\r\n    //     room.remoteParticipants.forEach((participant) => {\r\n    //       let identity = participant.identity;\r\n\r\n    //       participant.getTrackPublications().forEach((pub) => {\r\n    //         if (pub.isSubscribed && pub.track) {\r\n    //           pub.kind == \"video\"\r\n    //             ? setParticipant((c) => ({\r\n    //                 ...c,\r\n    //                 [identity]: {\r\n    //                   ...c[identity],\r\n    //                   video_state: true,\r\n    //                   video_track: pub.track as RemoteVideoTrack,\r\n    //                 },\r\n    //               }))\r\n    //             : setParticipant((c) => ({\r\n    //                 ...c,\r\n    //                 [identity]: {\r\n    //                   ...c[identity],\r\n    //                   audio_state: true,\r\n    //                   audio_track: pub.track as RemoteAudioTrack,\r\n    //                 },\r\n    //               }));\r\n    //         }\r\n    //       });\r\n    //       participant.on(\"trackMuted\", (pub) => {\r\n    //         setParticipant((c) => ({\r\n    //           ...c,\r\n    //           [identity]: {\r\n    //             ...c[identity],\r\n    //             video_state:\r\n    //               pub.kind == \"video\" ? false : c[identity].video_state,\r\n    //             audio_state:\r\n    //               pub.kind == \"audio\" ? false : c[identity].audio_state,\r\n    //           },\r\n    //         }));\r\n    //       });\r\n\r\n    //       participant.on(\"trackUnmuted\", (pub) => {\r\n    //         setParticipant((c) => ({\r\n    //           ...c,\r\n    //           [identity]: {\r\n    //             ...c[identity],\r\n    //             video_state:\r\n    //               pub.kind == \"video\" ? true : c[identity].video_state,\r\n    //             audio_state:\r\n    //               pub.kind == \"audio\" ? true : c[identity].audio_state,\r\n    //           },\r\n    //         }));\r\n    //       });\r\n    //     });\r\n    //   } catch (err) {\r\n    //     console.log(err);\r\n    //   }\r\n    // };\r\n\r\n    if (token !== \"\") test();\r\n\r\n    // return () => {\r\n    //   videoTrack.current?.detach();\r\n    //   videoTrack.current?.stop();\r\n    //   audioTrack.current?.stop();\r\n    //   // room?\r\n    // };\r\n  }, [token]);\r\n\r\n  // // track\r\n  // const toggleTrack = (type: \"audio\" | \"video\") => {\r\n  //   if (!localRef.current) return;\r\n  //   if (type == \"video\") {\r\n  //     if (!videoTrack.current) return;\r\n\r\n  //     video ? videoTrack.current.mute() : videoTrack.current.unmute();\r\n  //     setVideo((c) => !c);\r\n  //   } else {\r\n  //     if (!audioTrack.current) return;\r\n\r\n  //     audio ? audioTrack.current.mute() : audioTrack.current.unmute();\r\n  //     setAudio((c) => !c);\r\n  //   }\r\n  // };\r\n\r\n  // share\r\n  function sharing() {\r\n    setShare((c) => !c);\r\n  }\r\n\r\n  // chating\r\n  const sendChat = async (e: FormSubmit) => {\r\n    e.preventDefault();\r\n\r\n    if (chatInput == \"\") return;\r\n\r\n    setChatInput(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"page streamRoom_page\">\r\n      {/* 참가자들의 화면 부분 */}\r\n      <StreamRoom />\r\n      {/* 참가자들 채팅 / 참가자 목록 */}\r\n      <div className=\"pwf-chat_with_participants\">\r\n        {/* 채팅창 */}\r\n        <div className=\"pwf-chat_container\">\r\n          <div className=\"type_menu\">\r\n            <span>채팅</span>\r\n            {/* <i className=\"fa-solid fa-user\"></i> */}\r\n            <i className=\"fa-solid fa-comments\"></i>\r\n          </div>\r\n          <ul className=\"chat_lists\"></ul>\r\n          <form action=\"\" className=\"pwf-chat_form\" onSubmit={sendChat}>\r\n            <input\r\n              type=\"text\"\r\n              value={chatInput}\r\n              onChange={(e: InputChange) => setChatInput(e.target.value)}\r\n            />\r\n            <button>\r\n              <i className=\"fa-solid fa-paper-plane\"></i>\r\n            </button>\r\n          </form>\r\n        </div>\r\n        {/* 참가자들 */}\r\n        <div className=\"pwf-participants_container\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}