{"ast":null,"code":"import{useEffect,useRef,useState}from\"react\";import{useNavigate,useParams}from\"react-router-dom\";import{socketClient}from\"../../../util/socket\";import{emitter}from\"../../../util/event\";// css\nimport\"../../../css/room/main/roomMain.css\";// type\nimport{FriendStream}from\"../friendStream\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const RoomMain=_ref=>{let{user,stream,connects}=_ref;let{id}=useParams();let roomId=`room${id}`;let navigate=useNavigate();let localRef=useRef(null);let localStreamRef=useRef(null);let shareStreamRef=useRef(null);let[audio,setAudio]=useState(true);let[video,setVideo]=useState(true);let[otherShare,setOtherShare]=useState({state:false,nickname:\"\"});let[shareStream,setShareStream]=useState(null);// 다른 사용자 트랙 변경\nlet trackChange=stream=>{Object.entries(connects).forEach(_ref2=>{let[from,info]=_ref2;let sender=info.pc.getSenders().find(s=>s.track.kind==\"video\");if(sender)sender.replaceTrack(stream);});};// 화면 공유 과정\nlet changeProcess=(streamTrack,stream,state)=>{state?socketClient.emit(\"share screen\",roomId,user.nickname):socketClient.emit(\"share screen off\",roomId);setShareStream(stream);trackChange(streamTrack);setOtherShare(c=>({...c,state,nickname:user.nickname}));};//내 화면 공유 시작\nlet ShareStart=async()=>{if(otherShare.state){alert(\"다른 이가 화면공유 중입니다\");return;}try{let s_stream=await navigator.mediaDevices.getDisplayMedia({video:true});let streamTrack=s_stream.getVideoTracks()[0];changeProcess(streamTrack,s_stream,true);streamTrack.onended=()=>{changeProcess(stream===null||stream===void 0?void 0:stream.getVideoTracks()[0],null,false);};}catch(err){console.log(err);}};// 상대가 화면 공유 시작시 상대방의 비디오 트랙을 shareSTream으로 설정\nuseEffect(()=>{let con=Object.entries(connects);if(con.length&&otherShare.state&&otherShare.nickname!==\"\"){let shareInfo=con.find(_ref3=>{let[from,info]=_ref3;return from===otherShare.nickname;});if(shareInfo){let info=shareInfo[1];info.pc.getReceivers().forEach(receive=>{setShareStream(new MediaStream([receive.track]));});}}},[connects,otherShare.nickname]);// 공유 스트림이 변경되면 공유 ref.srcObject 변경\nuseEffect(()=>{if(shareStream&&shareStreamRef.current){shareStreamRef.current.srcObject=shareStream;}},[shareStream]);// 다른 사용자가 화면 공유를 시작함\nlet otherScreenShare=from=>{setOtherShare(c=>({...c,state:true,nickname:from}));};// 다른 사용자가 화면 공유를 종료함\nlet otherSCreenShareOFf=()=>{setShareStream(null);setOtherShare(c=>({...c,state:false,nickname:\"\"}));};// 화면 on/off\nlet toggleMedia=type=>{let state=false;if(!localStreamRef.current)return;localStreamRef.current.getTracks().filter(track=>track.kind===type).forEach(track=>{state=!track.enabled;track.enabled=!track.enabled;});socketClient.emit(\"toggle track\",roomId,user.nickname,type,state);type==\"audio\"?setAudio(!audio):setVideo(!video);};// 방을 떠남\nlet leaveRoom=()=>{if(user.nickname!==\"\"){socketClient.emit(\"leave room\",user.nickname,roomId);navigate(\"/\");}};// useEffect ---------------\n// 스트림 ref 설정\nuseEffect(()=>{if(stream){localRef.current.srcObject=stream;localStreamRef.current=stream;}},[stream]);// 화면공유 소켓 초기화\nuseEffect(()=>{socketClient.on(\"share screen\",otherScreenShare);socketClient.on(\"share screen off\",otherSCreenShareOFf);return()=>{socketClient.off(\"share screen\",otherScreenShare);socketClient.on(\"share screen off\",otherSCreenShareOFf);};},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"pwf-streamRoom_container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pwf-screen_container\",children:[/*#__PURE__*/_jsxs(\"ul\",{className:otherShare.state?\"share\":\"user_screen_lists\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user_video_box\",children:[/*#__PURE__*/_jsx(\"video\",{ref:localRef,autoPlay:true,playsInline:true,className:\"user_video\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"user_info_box\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(\"i\",{className:`fa-solid fa-microphone-lines${audio?\"\":\"-slash\"}`})}),/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(\"i\",{className:`fa-solid fa-video${video?\"\":\"-slash\"}`})})]}),/*#__PURE__*/_jsx(\"span\",{children:user.nickname})]})]}),Object.entries(connects).map(_ref4=>{let[from,stream]=_ref4;return/*#__PURE__*/_jsx(FriendStream,{from:from,stream:stream});})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"share_screen_container\",style:{display:otherShare.state?\"flex\":\"none\"},children:[/*#__PURE__*/_jsx(\"video\",{ref:shareStreamRef,autoPlay:true,playsInline:true,className:\"share_video\"}),/*#__PURE__*/_jsx(\"span\",{className:\"share_user_nickname\",children:otherShare.nickname})]})]}),/*#__PURE__*/_jsxs(\"footer\",{className:\"streamRoom_footer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user_video_options\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>toggleMedia(\"audio\"),children:[/*#__PURE__*/_jsx(\"i\",{className:`fa-solid fa-microphone-lines${audio?\"\":\"-slash\"}`}),/*#__PURE__*/_jsx(\"span\",{children:audio?\"음소거\":\"음소거 해제\"})]}),/*#__PURE__*/_jsxs(\"button\",{title:`비디오${video?\"\":\" 해제\"}`,onClick:()=>toggleMedia(\"video\"),children:[/*#__PURE__*/_jsx(\"i\",{className:`fa-solid fa-video${video?\"\":\"-slash\"}`}),/*#__PURE__*/_jsx(\"span\",{children:video?\"비디오\":\"비디오 해제\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"room_options\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>emitter.emit(\"modal\",{type:\"invitation\",open:true}),children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa-solid fa-user-plus\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\uCD08\\uB300\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:ShareStart,style:{color:otherShare.state?\"var(--pwf-blue)\":\"white\"},children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa-brands fa-creative-commons-share\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\uD654\\uBA74\\uACF5\\uC720\"})]}),/*#__PURE__*/_jsxs(\"button\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa-solid fa-desktop\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\uB0B4 \\uBBF8\\uB514\\uC5B4\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>emitter.emit(\"room menu\",true),children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa-brands fa-elementor\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\uBA54\\uB274\"})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"room_exit\",onClick:leaveRoom,children:\"\\uBC29\\uB098\\uAC00\\uAE30\"})]})]});};","map":{"version":3,"names":["useEffect","useRef","useState","useNavigate","useParams","socketClient","emitter","FriendStream","jsx","_jsx","jsxs","_jsxs","RoomMain","_ref","user","stream","connects","id","roomId","navigate","localRef","localStreamRef","shareStreamRef","audio","setAudio","video","setVideo","otherShare","setOtherShare","state","nickname","shareStream","setShareStream","trackChange","Object","entries","forEach","_ref2","from","info","sender","pc","getSenders","find","s","track","kind","replaceTrack","changeProcess","streamTrack","emit","c","ShareStart","alert","s_stream","navigator","mediaDevices","getDisplayMedia","getVideoTracks","onended","err","console","log","con","length","shareInfo","_ref3","getReceivers","receive","MediaStream","current","srcObject","otherScreenShare","otherSCreenShareOFf","toggleMedia","type","getTracks","filter","enabled","leaveRoom","on","off","className","children","ref","autoPlay","playsInline","map","_ref4","style","display","onClick","title","open","color"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/components/room/main/roomMain.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport { socketClient } from \"../../../util/socket\";\r\nimport { emitter } from \"../../../util/event\";\r\n\r\n// css\r\nimport \"../../../css/room/main/roomMain.css\";\r\n\r\n// type\r\nimport { User } from \"../../../types/user\";\r\nimport { PeerConnects } from \"../../../types/room\";\r\nimport { FriendStream } from \"../friendStream\";\r\nimport { info } from \"console\";\r\n\r\ninterface RoomMainProps {\r\n  user: User;\r\n  stream: MediaStream | null;\r\n  connects: object;\r\n}\r\n\r\nexport const RoomMain = ({ user, stream, connects }: RoomMainProps) => {\r\n  let { id } = useParams();\r\n  let roomId = `room${id}`;\r\n  let navigate = useNavigate();\r\n\r\n  let localRef = useRef<HTMLVideoElement | null>(null);\r\n  let localStreamRef = useRef<MediaStream | null>(null);\r\n\r\n  let shareStreamRef = useRef<HTMLVideoElement | null>(null);\r\n\r\n  let [audio, setAudio] = useState<boolean>(true);\r\n  let [video, setVideo] = useState<boolean>(true);\r\n\r\n  let [otherShare, setOtherShare] = useState<{\r\n    state: boolean;\r\n    nickname: string;\r\n  }>({ state: false, nickname: \"\" });\r\n  let [shareStream, setShareStream] = useState<MediaStream | null>(null);\r\n\r\n  // 다른 사용자 트랙 변경\r\n  let trackChange = (stream: any) => {\r\n    Object.entries(connects).forEach(([from, info]) => {\r\n      let sender = info.pc\r\n        .getSenders()\r\n        .find((s: any) => s.track.kind == \"video\");\r\n      if (sender) sender.replaceTrack(stream);\r\n    });\r\n  };\r\n\r\n  // 화면 공유 과정\r\n  let changeProcess = (\r\n    streamTrack: MediaStreamTrack | undefined,\r\n    stream: MediaStream | null,\r\n    state: boolean\r\n  ) => {\r\n    state\r\n      ? socketClient.emit(\"share screen\", roomId, user.nickname)\r\n      : socketClient.emit(\"share screen off\", roomId);\r\n\r\n    setShareStream(stream);\r\n    trackChange(streamTrack);\r\n    setOtherShare((c) => ({ ...c, state, nickname: user.nickname! }));\r\n  };\r\n\r\n  //내 화면 공유 시작\r\n  let ShareStart = async () => {\r\n    if (otherShare.state) {\r\n      alert(\"다른 이가 화면공유 중입니다\");\r\n      return;\r\n    }\r\n    try {\r\n      let s_stream = await navigator.mediaDevices.getDisplayMedia({\r\n        video: true,\r\n      });\r\n      let streamTrack = s_stream.getVideoTracks()[0];\r\n\r\n      changeProcess(streamTrack, s_stream, true);\r\n\r\n      streamTrack.onended = () => {\r\n        changeProcess(stream?.getVideoTracks()[0], null, false);\r\n      };\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  // 상대가 화면 공유 시작시 상대방의 비디오 트랙을 shareSTream으로 설정\r\n  useEffect(() => {\r\n    let con = Object.entries(connects);\r\n    if (con.length && otherShare.state && otherShare.nickname !== \"\") {\r\n      let shareInfo = con.find(([from, info]) => from === otherShare.nickname);\r\n      if (shareInfo) {\r\n        let info = shareInfo[1];\r\n        info.pc.getReceivers().forEach((receive: any) => {\r\n          setShareStream(new MediaStream([receive.track]));\r\n        });\r\n      }\r\n    }\r\n  }, [connects, otherShare.nickname]);\r\n\r\n  // 공유 스트림이 변경되면 공유 ref.srcObject 변경\r\n  useEffect(() => {\r\n    if (shareStream && shareStreamRef.current) {\r\n      shareStreamRef.current.srcObject = shareStream;\r\n    }\r\n  }, [shareStream]);\r\n\r\n  // 다른 사용자가 화면 공유를 시작함\r\n  let otherScreenShare = (from: string) => {\r\n    setOtherShare((c) => ({ ...c, state: true, nickname: from }));\r\n  };\r\n\r\n  // 다른 사용자가 화면 공유를 종료함\r\n  let otherSCreenShareOFf = () => {\r\n    setShareStream(null);\r\n    setOtherShare((c) => ({ ...c, state: false, nickname: \"\" }));\r\n  };\r\n\r\n  // 화면 on/off\r\n  let toggleMedia = (type: \"audio\" | \"video\") => {\r\n    let state: boolean = false;\r\n    if (!localStreamRef.current) return;\r\n\r\n    localStreamRef.current\r\n      .getTracks()\r\n      .filter((track) => track.kind === type)\r\n      .forEach((track) => {\r\n        state = !track.enabled;\r\n        track.enabled = !track.enabled;\r\n      });\r\n\r\n    socketClient.emit(\"toggle track\", roomId, user.nickname, type, state);\r\n    type == \"audio\" ? setAudio(!audio) : setVideo(!video);\r\n  };\r\n\r\n  // 방을 떠남\r\n  let leaveRoom = () => {\r\n    if (user.nickname !== \"\") {\r\n      socketClient.emit(\"leave room\", user.nickname, roomId);\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  // useEffect ---------------\r\n\r\n  // 스트림 ref 설정\r\n  useEffect(() => {\r\n    if (stream) {\r\n      localRef.current!.srcObject = stream;\r\n      localStreamRef.current = stream;\r\n    }\r\n  }, [stream]);\r\n\r\n  // 화면공유 소켓 초기화\r\n  useEffect(() => {\r\n    socketClient.on(\"share screen\", otherScreenShare);\r\n    socketClient.on(\"share screen off\", otherSCreenShareOFf);\r\n\r\n    return () => {\r\n      socketClient.off(\"share screen\", otherScreenShare);\r\n      socketClient.on(\"share screen off\", otherSCreenShareOFf);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"pwf-streamRoom_container\">\r\n      {/* 화면창 */}\r\n      <div className=\"pwf-screen_container\">\r\n        {/* p2p 연결화면들 */}\r\n        <ul className={otherShare.state ? \"share\" : \"user_screen_lists\"}>\r\n          {/* 내 화면 */}\r\n          <div className=\"user_video_box\">\r\n            {/* 유저 비디오 */}\r\n            <video\r\n              ref={localRef}\r\n              autoPlay\r\n              playsInline\r\n              className=\"user_video\"\r\n            ></video>\r\n            {/* 유저 정보 */}\r\n            <div className=\"user_info_box\">\r\n              <div>\r\n                <span>\r\n                  <i\r\n                    className={`fa-solid fa-microphone-lines${\r\n                      audio ? \"\" : \"-slash\"\r\n                    }`}\r\n                  ></i>\r\n                </span>\r\n                <span>\r\n                  <i\r\n                    className={`fa-solid fa-video${video ? \"\" : \"-slash\"}`}\r\n                  ></i>\r\n                </span>\r\n              </div>\r\n              <span>{user.nickname}</span>\r\n            </div>\r\n          </div>\r\n          {/* 다른 참가자 스트리밍 */}\r\n          {Object.entries(connects).map(([from, stream]) => (\r\n            <FriendStream from={from} stream={stream} />\r\n          ))}\r\n        </ul>\r\n        {/* 화면 공유시 공유창 */}\r\n        <div\r\n          className=\"share_screen_container\"\r\n          style={{ display: otherShare.state ? \"flex\" : \"none\" }}\r\n        >\r\n          <video\r\n            ref={shareStreamRef}\r\n            autoPlay\r\n            playsInline\r\n            className=\"share_video\"\r\n          ></video>\r\n          <span className=\"share_user_nickname\">{otherShare.nickname}</span>\r\n        </div>\r\n      </div>\r\n      {/* main footer */}\r\n      <footer className=\"streamRoom_footer\">\r\n        {/* 유저 음성 및 비디오 */}\r\n        <div className=\"user_video_options\">\r\n          {/* 음성 */}\r\n          <button onClick={() => toggleMedia(\"audio\")}>\r\n            <i\r\n              className={`fa-solid fa-microphone-lines${audio ? \"\" : \"-slash\"}`}\r\n            ></i>\r\n            <span>{audio ? \"음소거\" : \"음소거 해제\"}</span>\r\n          </button>\r\n          {/* 비디오 */}\r\n          <button\r\n            title={`비디오${video ? \"\" : \" 해제\"}`}\r\n            onClick={() => toggleMedia(\"video\")}\r\n          >\r\n            <i className={`fa-solid fa-video${video ? \"\" : \"-slash\"}`}></i>\r\n            <span>{video ? \"비디오\" : \"비디오 해제\"}</span>\r\n          </button>\r\n        </div>\r\n\r\n        {/* 비디오 메뉴 */}\r\n        <div className=\"room_options\">\r\n          {/* 방에 친구초대 */}\r\n          <button\r\n            onClick={() =>\r\n              emitter.emit(\"modal\", { type: \"invitation\", open: true })\r\n            }\r\n          >\r\n            <i className=\"fa-solid fa-user-plus\"></i>\r\n            <span>초대</span>\r\n          </button>\r\n          {/* 화면공유 */}\r\n          <button\r\n            onClick={ShareStart}\r\n            style={{ color: otherShare.state ? \"var(--pwf-blue)\" : \"white\" }}\r\n          >\r\n            <i className=\"fa-brands fa-creative-commons-share\"></i>\r\n            <span>화면공유</span>\r\n          </button>\r\n          {/* 내 미디어 변경 */}\r\n          <button>\r\n            <i className=\"fa-solid fa-desktop\"></i>\r\n            <span>내 미디어</span>\r\n          </button>\r\n          {/* 메뉴 */}\r\n          <button onClick={() => emitter.emit(\"room menu\", true)}>\r\n            <i className=\"fa-brands fa-elementor\"></i>\r\n            <span>메뉴</span>\r\n          </button>\r\n        </div>\r\n        {/* 방 나가기 */}\r\n        <button className=\"room_exit\" onClick={leaveRoom}>\r\n          방나가기\r\n        </button>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}