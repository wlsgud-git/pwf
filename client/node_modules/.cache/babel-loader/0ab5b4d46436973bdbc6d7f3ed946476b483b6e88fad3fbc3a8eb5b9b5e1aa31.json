{"ast":null,"code":"import * as e from \"react\";\nimport { c as ie, w as oe, r as ue, m as le, a as G } from \"./room-CDUkJ6U1.mjs\";\nimport { C as J, S as de, a as me, M as B, b as fe, T as R, c as he, d as pe, D as z, e as ge, f as H, L as Q, G as Ee, P as K, F as Se, g as ve, h as ke, R as be, i as Ce, j as we, k as ye, B as Ie } from \"./components-CU_md5RK.mjs\";\nimport { w as Me, x, y as Pe, z as Ne, A as X, t as Y, B as Te, C as Le } from \"./hooks-DnOXtSov.mjs\";\nimport { j as Z, ao as Ae, ap as De, l as N, a as Re, aq as Ve, ar as Oe, a1 as q, as as $e, at as Ue } from \"./contexts-BPNgUYT_.mjs\";\nimport { Track as k, facingModeFromLocalTrack as _e, Mutex as Fe, createLocalTracks as Be, createLocalVideoTrack as qe, VideoPresets as xe, createLocalAudioTrack as We, RoomEvent as je } from \"livekit-client\";\nfunction ee({\n  messageFormatter: r,\n  messageDecoder: d,\n  messageEncoder: u,\n  channelTopic: n,\n  ...S\n}) {\n  const g = e.useRef(null),\n    m = e.useRef(null),\n    l = e.useMemo(() => ({\n      messageDecoder: d,\n      messageEncoder: u,\n      channelTopic: n\n    }), [d, u, n]),\n    {\n      chatMessages: c,\n      send: I,\n      isSending: t\n    } = Me(l),\n    h = Z(),\n    i = e.useRef(0);\n  async function v(s) {\n    s.preventDefault(), m.current && m.current.value.trim() !== \"\" && (await I(m.current.value), m.current.value = \"\", m.current.focus());\n  }\n  return e.useEffect(() => {\n    var s;\n    g && ((s = g.current) == null || s.scrollTo({\n      top: g.current.scrollHeight\n    }));\n  }, [g, c]), e.useEffect(() => {\n    var o, E, a, w, b;\n    if (!h || c.length === 0) return;\n    if ((o = h.widget.state) != null && o.showChat && c.length > 0 && i.current !== ((E = c[c.length - 1]) == null ? void 0 : E.timestamp)) {\n      i.current = (a = c[c.length - 1]) == null ? void 0 : a.timestamp;\n      return;\n    }\n    const s = c.filter(A => !i.current || A.timestamp > i.current).length,\n      {\n        widget: f\n      } = h;\n    s > 0 && ((w = f.state) == null ? void 0 : w.unreadMessages) !== s && ((b = f.dispatch) == null || b.call(f, {\n      msg: \"unread_msg\",\n      count: s\n    }));\n  }, [c, h == null ? void 0 : h.widget]), /* @__PURE__ */e.createElement(\"div\", {\n    ...S,\n    className: \"lk-chat\"\n  }, /* @__PURE__ */e.createElement(\"div\", {\n    className: \"lk-chat-header\"\n  }, \"Messages\", h && /* @__PURE__ */e.createElement(J, {\n    className: \"lk-close-button\"\n  }, /* @__PURE__ */e.createElement(de, null))), /* @__PURE__ */e.createElement(\"ul\", {\n    className: \"lk-list lk-chat-messages\",\n    ref: g\n  }, S.children ? c.map((s, f) => ie(S.children, {\n    entry: s,\n    key: s.id ?? f,\n    messageFormatter: r\n  })) : c.map((s, f, o) => {\n    const E = f >= 1 && o[f - 1].from === s.from,\n      a = f >= 1 && s.timestamp - o[f - 1].timestamp < 6e4;\n    return /* @__PURE__ */e.createElement(me, {\n      key: s.id ?? f,\n      hideName: E,\n      hideTimestamp: E === !1 ? !1 : a,\n      entry: s,\n      messageFormatter: r\n    });\n  })), /* @__PURE__ */e.createElement(\"form\", {\n    className: \"lk-chat-form\",\n    onSubmit: v\n  }, /* @__PURE__ */e.createElement(\"input\", {\n    className: \"lk-form-control lk-chat-form-input\",\n    disabled: t,\n    ref: m,\n    type: \"text\",\n    placeholder: \"Enter a message...\",\n    onInput: s => s.stopPropagation(),\n    onKeyDown: s => s.stopPropagation(),\n    onKeyUp: s => s.stopPropagation()\n  }), /* @__PURE__ */e.createElement(\"button\", {\n    type: \"submit\",\n    className: \"lk-button lk-chat-form-button\",\n    disabled: t\n  }, \"Send\")));\n}\nfunction O({\n  kind: r,\n  initialSelection: d,\n  onActiveDeviceChange: u,\n  tracks: n,\n  requestPermissions: S = !1,\n  ...g\n}) {\n  const [m, l] = e.useState(!1),\n    [c, I] = e.useState([]),\n    [t, h] = e.useState(!0),\n    [i, v] = e.useState(S),\n    s = (a, w) => {\n      N.debug(\"handle device change\"), l(!1), u == null || u(a, w);\n    },\n    f = e.useRef(null),\n    o = e.useRef(null);\n  e.useLayoutEffect(() => {\n    m && v(!0);\n  }, [m]), e.useLayoutEffect(() => {\n    let a;\n    return f.current && o.current && (c || t) && (a = Ae(f.current, o.current, (w, b) => {\n      o.current && Object.assign(o.current.style, {\n        left: `${w}px`,\n        top: `${b}px`\n      });\n    })), h(!1), () => {\n      a == null || a();\n    };\n  }, [f, o, c, t]);\n  const E = e.useCallback(a => {\n    o.current && a.target !== f.current && m && De(o.current, a) && l(!1);\n  }, [m, o, f]);\n  return e.useEffect(() => (document.addEventListener(\"click\", E), () => {\n    document.removeEventListener(\"click\", E);\n  }), [E]), /* @__PURE__ */e.createElement(e.Fragment, null, /* @__PURE__ */e.createElement(\"button\", {\n    className: \"lk-button lk-button-menu\",\n    \"aria-pressed\": m,\n    ...g,\n    onClick: () => l(!m),\n    ref: f\n  }, g.children), !g.disabled && /* @__PURE__ */e.createElement(\"div\", {\n    className: \"lk-device-menu\",\n    ref: o,\n    style: {\n      visibility: m ? \"visible\" : \"hidden\"\n    }\n  }, r ? /* @__PURE__ */e.createElement(B, {\n    initialSelection: d,\n    onActiveDeviceChange: a => s(r, a),\n    onDeviceListChange: I,\n    kind: r,\n    track: n == null ? void 0 : n[r],\n    requestPermissions: i\n  }) : /* @__PURE__ */e.createElement(e.Fragment, null, /* @__PURE__ */e.createElement(\"div\", {\n    className: \"lk-device-menu-heading\"\n  }, \"Audio inputs\"), /* @__PURE__ */e.createElement(B, {\n    kind: \"audioinput\",\n    onActiveDeviceChange: a => s(\"audioinput\", a),\n    onDeviceListChange: I,\n    track: n == null ? void 0 : n.audioinput,\n    requestPermissions: i\n  }), /* @__PURE__ */e.createElement(\"div\", {\n    className: \"lk-device-menu-heading\"\n  }, \"Video inputs\"), /* @__PURE__ */e.createElement(B, {\n    kind: \"videoinput\",\n    onActiveDeviceChange: a => s(\"videoinput\", a),\n    onDeviceListChange: I,\n    track: n == null ? void 0 : n.videoinput,\n    requestPermissions: i\n  }))));\n}\nfunction W() {\n  e.useEffect(() => {\n    oe();\n  }, []);\n}\nfunction Ke(r, d) {\n  const [u, n] = e.useState(),\n    S = e.useMemo(() => new Fe(), []);\n  return e.useEffect(() => {\n    let g = !1,\n      m = [];\n    return S.lock().then(async l => {\n      try {\n        (r.audio || r.video) && (m = await Be(r), g ? m.forEach(c => c.stop()) : n(m));\n      } catch (c) {\n        d && c instanceof Error ? d(c) : N.error(c);\n      } finally {\n        l();\n      }\n    }), () => {\n      g = !0, m.forEach(l => {\n        l.stop();\n      });\n    };\n  }, [JSON.stringify(r, ue), d, S]), u;\n}\nfunction et(r, d, u) {\n  const [n, S] = e.useState(null),\n    [g, m] = e.useState(!1),\n    l = Pe({\n      kind: u\n    }),\n    [c, I] = e.useState(void 0),\n    [t, h] = e.useState(),\n    [i, v] = e.useState(d);\n  e.useEffect(() => {\n    v(d);\n  }, [d]);\n  const s = async (E, a) => {\n      try {\n        const w = a === \"videoinput\" ? await qe({\n            deviceId: E,\n            resolution: xe.h720.resolution\n          }) : await We({\n            deviceId: E\n          }),\n          b = await w.getDeviceId(!1);\n        b && E !== b && (o.current = b, v(b)), h(w);\n      } catch (w) {\n        w instanceof Error && S(w);\n      }\n    },\n    f = async (E, a) => {\n      await E.setDeviceId(a), o.current = a;\n    },\n    o = e.useRef(i);\n  return e.useEffect(() => {\n    r && !t && !n && !g && (N.debug(\"creating track\", u), m(!0), s(i, u).finally(() => {\n      m(!1);\n    }));\n  }, [r, t, n, g]), e.useEffect(() => {\n    t && (r ? c != null && c.deviceId && o.current !== (c == null ? void 0 : c.deviceId) ? (N.debug(`switching ${u} device from`, o.current, c.deviceId), f(t, c.deviceId)) : (N.debug(`unmuting local ${u} track`), t.unmute()) : (N.debug(`muting ${u} track`), t.mute().then(() => N.debug(t.mediaStreamTrack))));\n  }, [t, c, r, u]), e.useEffect(() => () => {\n    t && (N.debug(`stopping local ${u} track`), t.stop(), t.mute());\n  }, []), e.useEffect(() => {\n    I(l == null ? void 0 : l.find(E => E.deviceId === i));\n  }, [i, l]), {\n    selectedDevice: c,\n    localTrack: t,\n    deviceError: n\n  };\n}\nfunction tt({\n  defaults: r = {},\n  onValidate: d,\n  onSubmit: u,\n  onError: n,\n  debug: S,\n  joinLabel: g = \"Join Room\",\n  micLabel: m = \"Microphone\",\n  camLabel: l = \"Camera\",\n  userLabel: c = \"Username\",\n  persistUserChoices: I = !0,\n  videoProcessor: t,\n  ...h\n}) {\n  const {\n      userChoices: i,\n      saveAudioInputDeviceId: v,\n      saveAudioInputEnabled: s,\n      saveVideoInputDeviceId: f,\n      saveVideoInputEnabled: o,\n      saveUsername: E\n    } = x({\n      defaults: r,\n      preventSave: !I,\n      preventLoad: !I\n    }),\n    [a, w] = e.useState(i),\n    [b, A] = e.useState(a.audioEnabled),\n    [y, L] = e.useState(a.videoEnabled),\n    [T, $] = e.useState(a.audioDeviceId),\n    [p, M] = e.useState(a.videoDeviceId),\n    [V, ae] = e.useState(a.username);\n  e.useEffect(() => {\n    s(b);\n  }, [b, s]), e.useEffect(() => {\n    o(y);\n  }, [y, o]), e.useEffect(() => {\n    v(T);\n  }, [T, v]), e.useEffect(() => {\n    f(p);\n  }, [p, f]), e.useEffect(() => {\n    E(V);\n  }, [V, E]);\n  const D = Ke({\n      audio: b ? {\n        deviceId: i.audioDeviceId\n      } : !1,\n      video: y ? {\n        deviceId: i.videoDeviceId,\n        processor: t\n      } : !1\n    }, n),\n    U = e.useRef(null),\n    P = e.useMemo(() => D == null ? void 0 : D.filter(C => C.kind === k.Kind.Video)[0], [D]),\n    ne = e.useMemo(() => {\n      if (P) {\n        const {\n          facingMode: C\n        } = _e(P);\n        return C;\n      } else return \"undefined\";\n    }, [P]),\n    j = e.useMemo(() => D == null ? void 0 : D.filter(C => C.kind === k.Kind.Audio)[0], [D]);\n  e.useEffect(() => (U.current && P && (P.unmute(), P.attach(U.current)), () => {\n    P == null || P.detach();\n  }), [P]);\n  const [ce, se] = e.useState(),\n    _ = e.useCallback(C => typeof d == \"function\" ? d(C) : C.username !== \"\", [d]);\n  e.useEffect(() => {\n    const C = {\n      username: V,\n      videoEnabled: y,\n      videoDeviceId: p,\n      audioEnabled: b,\n      audioDeviceId: T\n    };\n    w(C), se(_(C));\n  }, [V, y, _, b, T, p]);\n  function re(C) {\n    C.preventDefault(), _(a) ? typeof u == \"function\" && u(a) : N.warn(\"Validation failed with: \", a);\n  }\n  return W(), /* @__PURE__ */e.createElement(\"div\", {\n    className: \"lk-prejoin\",\n    ...h\n  }, /* @__PURE__ */e.createElement(\"div\", {\n    className: \"lk-video-container\"\n  }, P && /* @__PURE__ */e.createElement(\"video\", {\n    ref: U,\n    width: \"1280\",\n    height: \"720\",\n    \"data-lk-facing-mode\": ne\n  }), (!P || !y) && /* @__PURE__ */e.createElement(\"div\", {\n    className: \"lk-camera-off-note\"\n  }, /* @__PURE__ */e.createElement(fe, null))), /* @__PURE__ */e.createElement(\"div\", {\n    className: \"lk-button-group-container\"\n  }, /* @__PURE__ */e.createElement(\"div\", {\n    className: \"lk-button-group audio\"\n  }, /* @__PURE__ */e.createElement(R, {\n    initialState: b,\n    source: k.Source.Microphone,\n    onChange: C => A(C)\n  }, m), /* @__PURE__ */e.createElement(\"div\", {\n    className: \"lk-button-group-menu\"\n  }, /* @__PURE__ */e.createElement(O, {\n    initialSelection: T,\n    kind: \"audioinput\",\n    disabled: !j,\n    tracks: {\n      audioinput: j\n    },\n    onActiveDeviceChange: (C, F) => $(F)\n  }))), /* @__PURE__ */e.createElement(\"div\", {\n    className: \"lk-button-group video\"\n  }, /* @__PURE__ */e.createElement(R, {\n    initialState: y,\n    source: k.Source.Camera,\n    onChange: C => L(C)\n  }, l), /* @__PURE__ */e.createElement(\"div\", {\n    className: \"lk-button-group-menu\"\n  }, /* @__PURE__ */e.createElement(O, {\n    initialSelection: p,\n    kind: \"videoinput\",\n    disabled: !P,\n    tracks: {\n      videoinput: P\n    },\n    onActiveDeviceChange: (C, F) => M(F)\n  })))), /* @__PURE__ */e.createElement(\"form\", {\n    className: \"lk-username-container\"\n  }, /* @__PURE__ */e.createElement(\"input\", {\n    className: \"lk-form-control\",\n    id: \"username\",\n    name: \"username\",\n    type: \"text\",\n    defaultValue: V,\n    placeholder: c,\n    onChange: C => ae(C.target.value),\n    autoComplete: \"off\"\n  }), /* @__PURE__ */e.createElement(\"button\", {\n    className: \"lk-button lk-join-button\",\n    type: \"submit\",\n    onClick: re,\n    disabled: !ce\n  }, g)), S && /* @__PURE__ */e.createElement(e.Fragment, null, /* @__PURE__ */e.createElement(\"strong\", null, \"User Choices:\"), /* @__PURE__ */e.createElement(\"ul\", {\n    className: \"lk-list\",\n    style: {\n      overflow: \"hidden\",\n      maxWidth: \"15rem\"\n    }\n  }, /* @__PURE__ */e.createElement(\"li\", null, \"Username: \", `${a.username}`), /* @__PURE__ */e.createElement(\"li\", null, \"Video Enabled: \", `${a.videoEnabled}`), /* @__PURE__ */e.createElement(\"li\", null, \"Audio Enabled: \", `${a.audioEnabled}`), /* @__PURE__ */e.createElement(\"li\", null, \"Video Device: \", `${a.videoDeviceId}`), /* @__PURE__ */e.createElement(\"li\", null, \"Audio Device: \", `${a.audioDeviceId}`))));\n}\nfunction Ge({\n  props: r\n}) {\n  const {\n      dispatch: d,\n      state: u\n    } = Re().widget,\n    n = \"lk-button lk-settings-toggle\";\n  return {\n    mergedProps: e.useMemo(() => le(r, {\n      className: n,\n      onClick: () => {\n        d && d({\n          msg: \"toggle_settings\"\n        });\n      },\n      \"aria-pressed\": u != null && u.showSettings ? \"true\" : \"false\"\n    }), [r, n, d, u])\n  };\n}\nconst Je = /* @__PURE__ */e.forwardRef(function (d, u) {\n    const {\n      mergedProps: n\n    } = Ge({\n      props: d\n    });\n    return /* @__PURE__ */e.createElement(\"button\", {\n      ref: u,\n      ...n\n    }, d.children);\n  }),\n  ze = r => {\n    switch (r) {\n      case k.Source.Camera:\n        return 1;\n      case k.Source.Microphone:\n        return 2;\n      case k.Source.ScreenShare:\n        return 3;\n      default:\n        return 0;\n    }\n  };\nfunction te({\n  variation: r,\n  controls: d,\n  saveUserChoices: u = !0,\n  onDeviceError: n,\n  ...S\n}) {\n  var $;\n  const [g, m] = e.useState(!1),\n    l = Z();\n  e.useEffect(() => {\n    var p, M;\n    ((p = l == null ? void 0 : l.widget.state) == null ? void 0 : p.showChat) !== void 0 && m((M = l == null ? void 0 : l.widget.state) == null ? void 0 : M.showChat);\n  }, [($ = l == null ? void 0 : l.widget.state) == null ? void 0 : $.showChat]);\n  const I = Ne(`(max-width: ${g ? 1e3 : 760}px)`) ? \"minimal\" : \"verbose\";\n  r ?? (r = I);\n  const t = {\n      leave: !0,\n      ...d\n    },\n    h = X();\n  if (!h) t.camera = !1, t.chat = !1, t.microphone = !1, t.screenShare = !1;else {\n    const p = M => h.canPublish && (h.canPublishSources.length === 0 || h.canPublishSources.includes(ze(M)));\n    t.camera ?? (t.camera = p(k.Source.Camera)), t.microphone ?? (t.microphone = p(k.Source.Microphone)), t.screenShare ?? (t.screenShare = p(k.Source.ScreenShare)), t.chat ?? (t.chat = h.canPublishData && (d == null ? void 0 : d.chat));\n  }\n  const i = e.useMemo(() => r === \"minimal\" || r === \"verbose\", [r]),\n    v = e.useMemo(() => r === \"textOnly\" || r === \"verbose\", [r]),\n    s = Ve(),\n    [f, o] = e.useState(!1),\n    E = e.useCallback(p => {\n      o(p);\n    }, [o]),\n    a = G({\n      className: \"lk-control-bar\"\n    }, S),\n    {\n      saveAudioInputEnabled: w,\n      saveVideoInputEnabled: b,\n      saveAudioInputDeviceId: A,\n      saveVideoInputDeviceId: y\n    } = x({\n      preventSave: !u\n    }),\n    L = e.useCallback((p, M) => M ? w(p) : null, [w]),\n    T = e.useCallback((p, M) => M ? b(p) : null, [b]);\n  return /* @__PURE__ */e.createElement(\"div\", {\n    ...a\n  }, t.microphone && /* @__PURE__ */e.createElement(\"div\", {\n    className: \"lk-button-group\"\n  }, /* @__PURE__ */e.createElement(R, {\n    source: k.Source.Microphone,\n    showIcon: i,\n    onChange: L,\n    onDeviceError: p => n == null ? void 0 : n({\n      source: k.Source.Microphone,\n      error: p\n    })\n  }, v && \"Microphone\"), /* @__PURE__ */e.createElement(\"div\", {\n    className: \"lk-button-group-menu\"\n  }, /* @__PURE__ */e.createElement(O, {\n    kind: \"audioinput\",\n    onActiveDeviceChange: (p, M) => A(M ?? \"default\")\n  }))), t.camera && /* @__PURE__ */e.createElement(\"div\", {\n    className: \"lk-button-group\"\n  }, /* @__PURE__ */e.createElement(R, {\n    source: k.Source.Camera,\n    showIcon: i,\n    onChange: T,\n    onDeviceError: p => n == null ? void 0 : n({\n      source: k.Source.Camera,\n      error: p\n    })\n  }, v && \"Camera\"), /* @__PURE__ */e.createElement(\"div\", {\n    className: \"lk-button-group-menu\"\n  }, /* @__PURE__ */e.createElement(O, {\n    kind: \"videoinput\",\n    onActiveDeviceChange: (p, M) => y(M ?? \"default\")\n  }))), t.screenShare && s && /* @__PURE__ */e.createElement(R, {\n    source: k.Source.ScreenShare,\n    captureOptions: {\n      audio: !0,\n      selfBrowserSurface: \"include\"\n    },\n    showIcon: i,\n    onChange: E,\n    onDeviceError: p => n == null ? void 0 : n({\n      source: k.Source.ScreenShare,\n      error: p\n    })\n  }, v && (f ? \"Stop screen share\" : \"Share screen\")), t.chat && /* @__PURE__ */e.createElement(J, null, i && /* @__PURE__ */e.createElement(he, null), v && \"Chat\"), t.settings && /* @__PURE__ */e.createElement(Je, null, i && /* @__PURE__ */e.createElement(pe, null), v && \"Settings\"), t.leave && /* @__PURE__ */e.createElement(z, null, i && /* @__PURE__ */e.createElement(ge, null), v && \"Leave\"), /* @__PURE__ */e.createElement(H, null));\n}\nfunction at({\n  chatMessageFormatter: r,\n  chatMessageDecoder: d,\n  chatMessageEncoder: u,\n  SettingsComponent: n,\n  ...S\n}) {\n  var s, f;\n  const [g, m] = e.useState({\n      showChat: !1,\n      unreadMessages: 0,\n      showSettings: !1\n    }),\n    l = e.useRef(null),\n    c = Y([{\n      source: k.Source.Camera,\n      withPlaceholder: !0\n    }, {\n      source: k.Source.ScreenShare,\n      withPlaceholder: !1\n    }], {\n      updateOnlyOn: [je.ActiveSpeakersChanged],\n      onlySubscribed: !1\n    }),\n    I = o => {\n      N.debug(\"updating widget state\", o), m(o);\n    },\n    t = Oe(),\n    h = c.filter(q).filter(o => o.publication.source === k.Source.ScreenShare),\n    i = (s = Te(t)) == null ? void 0 : s[0],\n    v = c.filter(o => !$e(o, i));\n  return e.useEffect(() => {\n    var o, E, a, w, b, A;\n    if (h.some(y => y.publication.isSubscribed) && l.current === null ? (N.debug(\"Auto set screen share focus:\", {\n      newScreenShareTrack: h[0]\n    }), (E = (o = t.pin).dispatch) == null || E.call(o, {\n      msg: \"set_pin\",\n      trackReference: h[0]\n    }), l.current = h[0]) : l.current && !h.some(y => {\n      var L, T;\n      return y.publication.trackSid === ((T = (L = l.current) == null ? void 0 : L.publication) == null ? void 0 : T.trackSid);\n    }) && (N.debug(\"Auto clearing screen share focus.\"), (w = (a = t.pin).dispatch) == null || w.call(a, {\n      msg: \"clear_pin\"\n    }), l.current = null), i && !q(i)) {\n      const y = c.find(L => L.participant.identity === i.participant.identity && L.source === i.source);\n      y !== i && q(y) && ((A = (b = t.pin).dispatch) == null || A.call(b, {\n        msg: \"set_pin\",\n        trackReference: y\n      }));\n    }\n  }, [h.map(o => `${o.publication.trackSid}_${o.publication.isSubscribed}`).join(), (f = i == null ? void 0 : i.publication) == null ? void 0 : f.trackSid, c]), W(), /* @__PURE__ */e.createElement(\"div\", {\n    className: \"lk-video-conference\",\n    ...S\n  }, Ue() && /* @__PURE__ */e.createElement(Q, {\n    value: t,\n    onWidgetChange: I\n  }, /* @__PURE__ */e.createElement(\"div\", {\n    className: \"lk-video-conference-inner\"\n  }, i ? /* @__PURE__ */e.createElement(\"div\", {\n    className: \"lk-focus-layout-wrapper\"\n  }, /* @__PURE__ */e.createElement(Se, null, /* @__PURE__ */e.createElement(ve, {\n    tracks: v\n  }, /* @__PURE__ */e.createElement(K, null)), i && /* @__PURE__ */e.createElement(ke, {\n    trackRef: i\n  }))) : /* @__PURE__ */e.createElement(\"div\", {\n    className: \"lk-grid-layout-wrapper\"\n  }, /* @__PURE__ */e.createElement(Ee, {\n    tracks: c\n  }, /* @__PURE__ */e.createElement(K, null))), /* @__PURE__ */e.createElement(te, {\n    controls: {\n      chat: !0,\n      settings: !!n\n    }\n  })), /* @__PURE__ */e.createElement(ee, {\n    style: {\n      display: g.showChat ? \"grid\" : \"none\"\n    },\n    messageFormatter: r,\n    messageEncoder: u,\n    messageDecoder: d\n  }), n && /* @__PURE__ */e.createElement(\"div\", {\n    className: \"lk-settings-menu-modal\",\n    style: {\n      display: g.showSettings ? \"block\" : \"none\"\n    }\n  }, /* @__PURE__ */e.createElement(n, null))), /* @__PURE__ */e.createElement(be, null), /* @__PURE__ */e.createElement(Ce, null));\n}\nfunction nt({\n  ...r\n}) {\n  const [d, u] = e.useState({\n      showChat: !1,\n      unreadMessages: 0\n    }),\n    n = Y([k.Source.Microphone]);\n  return W(), /* @__PURE__ */e.createElement(Q, {\n    onWidgetChange: u\n  }, /* @__PURE__ */e.createElement(\"div\", {\n    className: \"lk-audio-conference\",\n    ...r\n  }, /* @__PURE__ */e.createElement(\"div\", {\n    className: \"lk-audio-conference-stage\"\n  }, /* @__PURE__ */e.createElement(we, {\n    tracks: n\n  }, /* @__PURE__ */e.createElement(ye, null))), /* @__PURE__ */e.createElement(te, {\n    controls: {\n      microphone: !0,\n      screenShare: !1,\n      camera: !1,\n      chat: !0\n    }\n  }), d.showChat && /* @__PURE__ */e.createElement(ee, null)));\n}\nfunction ct({\n  controls: r,\n  saveUserChoices: d = !0,\n  onDeviceError: u,\n  ...n\n}) {\n  const S = {\n      leave: !0,\n      microphone: !0,\n      ...r\n    },\n    g = X(),\n    {\n      microphoneTrack: m,\n      localParticipant: l\n    } = Le(),\n    c = e.useMemo(() => ({\n      participant: l,\n      source: k.Source.Microphone,\n      publication: m\n    }), [l, m]);\n  g ? S.microphone ?? (S.microphone = g.canPublish) : S.microphone = !1;\n  const I = G({\n      className: \"lk-agent-control-bar\"\n    }, n),\n    {\n      saveAudioInputEnabled: t,\n      saveAudioInputDeviceId: h\n    } = x({\n      preventSave: !d\n    }),\n    i = e.useCallback((v, s) => {\n      s && t(v);\n    }, [t]);\n  return /* @__PURE__ */e.createElement(\"div\", {\n    ...I\n  }, S.microphone && /* @__PURE__ */e.createElement(\"div\", {\n    className: \"lk-button-group\"\n  }, /* @__PURE__ */e.createElement(R, {\n    source: k.Source.Microphone,\n    showIcon: !0,\n    onChange: i,\n    onDeviceError: v => u == null ? void 0 : u({\n      source: k.Source.Microphone,\n      error: v\n    })\n  }, /* @__PURE__ */e.createElement(Ie, {\n    trackRef: c,\n    barCount: 7,\n    options: {\n      minHeight: 5\n    }\n  })), /* @__PURE__ */e.createElement(\"div\", {\n    className: \"lk-button-group-menu\"\n  }, /* @__PURE__ */e.createElement(O, {\n    kind: \"audioinput\",\n    onActiveDeviceChange: (v, s) => h(s ?? \"default\")\n  }))), S.leave && /* @__PURE__ */e.createElement(z, null, \"Disconnect\"), /* @__PURE__ */e.createElement(H, null));\n}\nexport { nt as AudioConference, ee as Chat, te as ControlBar, O as MediaDeviceMenu, tt as PreJoin, at as VideoConference, ct as VoiceAssistantControlBar, et as usePreviewDevice, Ke as usePreviewTracks };","map":{"version":3,"names":["ee","messageFormatter","r","messageDecoder","d","messageEncoder","u","channelTopic","n","S","g","e","useRef","m","l","useMemo","chatMessages","c","send","I","isSending","t","Me","h","Z","i","v","s","preventDefault","current","value","trim","focus","useEffect","scrollTo","top","scrollHeight","length","o","widget","state","showChat","E","timestamp","a","filter","A","f","w","unreadMessages","b","dispatch","call","msg","count","createElement","className","J","de","ref","children","map","ie","entry","key","id","from","me","hideName","hideTimestamp","onSubmit","disabled","type","placeholder","onInput","stopPropagation","onKeyDown","onKeyUp","O","kind","initialSelection","onActiveDeviceChange","tracks","requestPermissions","useState","handleActiveDeviceChange","N","debug","useLayoutEffect","Ae","Object","assign","style","left","useCallback","target","De","document","addEventListener","removeEventListener","Fragment","onClick","visibility","B","onDeviceListChange","track","audioinput","videoinput","W","oe","Ke","Fe","lock","then","audio","video","Be","forEach","stop","Error","error","JSON","stringify","ue","et","Pe","createTrack","qe","deviceId","resolution","xe","h720","We","getDeviceId","switchDevice","setDeviceId","finally","unmute","mute","mediaStreamTrack","find","selectedDevice","localTrack","deviceError","tt","defaults","onValidate","onError","joinLabel","micLabel","camLabel","userLabel","persistUserChoices","videoProcessor","userChoices","saveAudioInputDeviceId","saveAudioInputEnabled","saveVideoInputDeviceId","saveVideoInputEnabled","saveUsername","x","preventSave","preventLoad","audioEnabled","y","L","videoEnabled","T","$","audioDeviceId","p","M","videoDeviceId","V","ae","username","D","processor","U","P","C","k","Kind","Video","ne","facingMode","_e","j","Audio","attach","detach","ce","se","_","re","warn","width","height","fe","R","initialState","source","Source","Microphone","onChange","F","Camera","name","defaultValue","autoComplete","overflow","maxWidth","Ge","props","Re","mergedProps","le","showSettings","Je","forwardRef","ze","ScreenShare","te","variation","controls","saveUserChoices","onDeviceError","Ne","leave","X","camera","chat","microphone","screenShare","canPublish","canPublishSources","includes","canPublishData","Ve","G","showIcon","captureOptions","selfBrowserSurface","he","settings","pe","z","ge","H","at","chatMessageFormatter","chatMessageDecoder","chatMessageEncoder","SettingsComponent","Y","withPlaceholder","updateOnlyOn","je","ActiveSpeakersChanged","onlySubscribed","Oe","q","publication","Te","$e","some","isSubscribed","newScreenShareTrack","pin","trackReference","trackSid","participant","identity","join","Ue","Q","onWidgetChange","Se","ve","K","ke","trackRef","Ee","display","be","Ce","nt","we","ye","ct","microphoneTrack","localParticipant","Le","Ie","barCount","options","minHeight"],"sources":["C:\\Users\\ashh1\\Desktop\\project\\PlayWithFriends\\client\\node_modules\\@livekit\\components-react\\src\\prefabs\\Chat.tsx","C:\\Users\\ashh1\\Desktop\\project\\PlayWithFriends\\client\\node_modules\\@livekit\\components-react\\src\\prefabs\\MediaDeviceMenu.tsx","C:\\Users\\ashh1\\Desktop\\project\\PlayWithFriends\\client\\node_modules\\@livekit\\components-react\\src\\hooks\\useWarnAboutMissingStyles.ts","C:\\Users\\ashh1\\Desktop\\project\\PlayWithFriends\\client\\node_modules\\@livekit\\components-react\\src\\prefabs\\PreJoin.tsx","C:\\Users\\ashh1\\Desktop\\project\\PlayWithFriends\\client\\node_modules\\@livekit\\components-react\\src\\hooks\\useSettingsToggle.ts","C:\\Users\\ashh1\\Desktop\\project\\PlayWithFriends\\client\\node_modules\\@livekit\\components-react\\src\\components\\controls\\SettingsMenuToggle.tsx","C:\\Users\\ashh1\\Desktop\\project\\PlayWithFriends\\client\\node_modules\\@livekit\\components-react\\src\\prefabs\\ControlBar.tsx","C:\\Users\\ashh1\\Desktop\\project\\PlayWithFriends\\client\\node_modules\\@livekit\\components-react\\src\\prefabs\\VideoConference.tsx","C:\\Users\\ashh1\\Desktop\\project\\PlayWithFriends\\client\\node_modules\\@livekit\\components-react\\src\\prefabs\\AudioConference.tsx","C:\\Users\\ashh1\\Desktop\\project\\PlayWithFriends\\client\\node_modules\\@livekit\\components-react\\src\\prefabs\\VoiceAssistantControlBar.tsx"],"sourcesContent":["import { type ChatMessage, type ChatOptions } from '@livekit/components-core';\nimport * as React from 'react';\nimport { useMaybeLayoutContext } from '../context';\nimport { cloneSingleChild } from '../utils';\nimport type { MessageFormatter } from '../components/ChatEntry';\nimport { ChatEntry } from '../components/ChatEntry';\nimport { useChat } from '../hooks/useChat';\nimport { ChatToggle } from '../components';\nimport ChatCloseIcon from '../assets/icons/ChatCloseIcon';\n\n/** @public */\nexport interface ChatProps extends React.HTMLAttributes<HTMLDivElement>, ChatOptions {\n  messageFormatter?: MessageFormatter;\n}\n\n/**\n * The Chat component provides ready-to-use chat functionality in a LiveKit room.\n * Messages are distributed to all participants in the room in real-time.\n *\n * @remarks\n * - Only users who are in the room at the time of dispatch will receive messages\n * - Message history is not persisted between sessions\n * - Requires `@livekit/components-styles` to be imported for styling\n *\n * @example\n * ```tsx\n * import '@livekit/components-styles';\n *\n * function Room() {\n *   return (\n *     <LiveKitRoom data-lk-theme=\"default\">\n *       <Chat />\n *     </LiveKitRoom>\n *   );\n * }\n * ```\n *\n * For custom styling, refer to: https://docs.livekit.io/reference/components/react/concepts/style-components/\n *\n * @public\n */\nexport function Chat({\n  messageFormatter,\n  messageDecoder,\n  messageEncoder,\n  channelTopic,\n  ...props\n}: ChatProps) {\n  const ulRef = React.useRef<HTMLUListElement>(null);\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  const chatOptions: ChatOptions = React.useMemo(() => {\n    return { messageDecoder, messageEncoder, channelTopic };\n  }, [messageDecoder, messageEncoder, channelTopic]);\n\n  const { chatMessages, send, isSending } = useChat(chatOptions);\n\n  const layoutContext = useMaybeLayoutContext();\n  const lastReadMsgAt = React.useRef<ChatMessage['timestamp']>(0);\n\n  async function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n    if (inputRef.current && inputRef.current.value.trim() !== '') {\n      await send(inputRef.current.value);\n      inputRef.current.value = '';\n      inputRef.current.focus();\n    }\n  }\n\n  React.useEffect(() => {\n    if (ulRef) {\n      ulRef.current?.scrollTo({ top: ulRef.current.scrollHeight });\n    }\n  }, [ulRef, chatMessages]);\n\n  React.useEffect(() => {\n    if (!layoutContext || chatMessages.length === 0) {\n      return;\n    }\n\n    if (\n      layoutContext.widget.state?.showChat &&\n      chatMessages.length > 0 &&\n      lastReadMsgAt.current !== chatMessages[chatMessages.length - 1]?.timestamp\n    ) {\n      lastReadMsgAt.current = chatMessages[chatMessages.length - 1]?.timestamp;\n      return;\n    }\n\n    const unreadMessageCount = chatMessages.filter(\n      (msg) => !lastReadMsgAt.current || msg.timestamp > lastReadMsgAt.current,\n    ).length;\n\n    const { widget } = layoutContext;\n    if (unreadMessageCount > 0 && widget.state?.unreadMessages !== unreadMessageCount) {\n      widget.dispatch?.({ msg: 'unread_msg', count: unreadMessageCount });\n    }\n  }, [chatMessages, layoutContext?.widget]);\n\n  return (\n    <div {...props} className=\"lk-chat\">\n      <div className=\"lk-chat-header\">\n        Messages\n        {layoutContext && (\n          <ChatToggle className=\"lk-close-button\">\n            <ChatCloseIcon />\n          </ChatToggle>\n        )}\n      </div>\n\n      <ul className=\"lk-list lk-chat-messages\" ref={ulRef}>\n        {props.children\n          ? chatMessages.map((msg, idx) =>\n              cloneSingleChild(props.children, {\n                entry: msg,\n                key: msg.id ?? idx,\n                messageFormatter,\n              }),\n            )\n          : chatMessages.map((msg, idx, allMsg) => {\n              const hideName = idx >= 1 && allMsg[idx - 1].from === msg.from;\n              // If the time delta between two messages is bigger than 60s show timestamp.\n              const hideTimestamp = idx >= 1 && msg.timestamp - allMsg[idx - 1].timestamp < 60_000;\n\n              return (\n                <ChatEntry\n                  key={msg.id ?? idx}\n                  hideName={hideName}\n                  hideTimestamp={hideName === false ? false : hideTimestamp} // If we show the name always show the timestamp as well.\n                  entry={msg}\n                  messageFormatter={messageFormatter}\n                />\n              );\n            })}\n      </ul>\n      <form className=\"lk-chat-form\" onSubmit={handleSubmit}>\n        <input\n          className=\"lk-form-control lk-chat-form-input\"\n          disabled={isSending}\n          ref={inputRef}\n          type=\"text\"\n          placeholder=\"Enter a message...\"\n          onInput={(ev) => ev.stopPropagation()}\n          onKeyDown={(ev) => ev.stopPropagation()}\n          onKeyUp={(ev) => ev.stopPropagation()}\n        />\n        <button type=\"submit\" className=\"lk-button lk-chat-form-button\" disabled={isSending}>\n          Send\n        </button>\n      </form>\n    </div>\n  );\n}\n","import { computeMenuPosition, wasClickOutside, log } from '@livekit/components-core';\nimport * as React from 'react';\nimport { MediaDeviceSelect } from '../components/controls/MediaDeviceSelect';\nimport type { LocalAudioTrack, LocalVideoTrack } from 'livekit-client';\n\n/** @public */\nexport interface MediaDeviceMenuProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  kind?: MediaDeviceKind;\n  initialSelection?: string;\n  onActiveDeviceChange?: (kind: MediaDeviceKind, deviceId: string) => void;\n  tracks?: Partial<Record<MediaDeviceKind, LocalAudioTrack | LocalVideoTrack | undefined>>;\n  /**\n   * this will call getUserMedia if the permissions are not yet given to enumerate the devices with device labels.\n   * in some browsers multiple calls to getUserMedia result in multiple permission prompts.\n   * It's generally advised only flip this to true, once a (preview) track has been acquired successfully with the\n   * appropriate permissions.\n   *\n   * @see {@link PreJoin}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/enumerateDevices | MDN enumerateDevices}\n   */\n  requestPermissions?: boolean;\n}\n\n/**\n * The `MediaDeviceMenu` component is a button that opens a menu that lists\n * all media devices and allows the user to select them.\n *\n * @remarks\n * This component is implemented with the `MediaDeviceSelect` LiveKit components.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <MediaDeviceMenu />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function MediaDeviceMenu({\n  kind,\n  initialSelection,\n  onActiveDeviceChange,\n  tracks,\n  requestPermissions = false,\n  ...props\n}: MediaDeviceMenuProps) {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [devices, setDevices] = React.useState<MediaDeviceInfo[]>([]);\n  const [updateRequired, setUpdateRequired] = React.useState<boolean>(true);\n  const [needPermissions, setNeedPermissions] = React.useState(requestPermissions);\n\n  const handleActiveDeviceChange = (kind: MediaDeviceKind, deviceId: string) => {\n    log.debug('handle device change');\n    setIsOpen(false);\n    onActiveDeviceChange?.(kind, deviceId);\n  };\n\n  const button = React.useRef<HTMLButtonElement>(null);\n  const tooltip = React.useRef<HTMLDivElement>(null);\n\n  React.useLayoutEffect(() => {\n    if (isOpen) {\n      setNeedPermissions(true);\n    }\n  }, [isOpen]);\n\n  React.useLayoutEffect(() => {\n    let cleanup: ReturnType<typeof computeMenuPosition> | undefined;\n    if (button.current && tooltip.current && (devices || updateRequired)) {\n      cleanup = computeMenuPosition(button.current, tooltip.current, (x, y) => {\n        if (tooltip.current) {\n          Object.assign(tooltip.current.style, { left: `${x}px`, top: `${y}px` });\n        }\n      });\n    }\n    setUpdateRequired(false);\n    return () => {\n      cleanup?.();\n    };\n  }, [button, tooltip, devices, updateRequired]);\n\n  const handleClickOutside = React.useCallback(\n    (event: MouseEvent) => {\n      if (!tooltip.current) {\n        return;\n      }\n      if (event.target === button.current) {\n        return;\n      }\n      if (isOpen && wasClickOutside(tooltip.current, event)) {\n        setIsOpen(false);\n      }\n    },\n    [isOpen, tooltip, button],\n  );\n\n  React.useEffect(() => {\n    document.addEventListener<'click'>('click', handleClickOutside);\n    return () => {\n      document.removeEventListener<'click'>('click', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n\n  return (\n    <>\n      <button\n        className=\"lk-button lk-button-menu\"\n        aria-pressed={isOpen}\n        {...props}\n        onClick={() => setIsOpen(!isOpen)}\n        ref={button}\n      >\n        {props.children}\n      </button>\n      {/** only render when enabled in order to make sure that the permissions are requested only if the menu is enabled */}\n      {!props.disabled && (\n        <div\n          className=\"lk-device-menu\"\n          ref={tooltip}\n          style={{ visibility: isOpen ? 'visible' : 'hidden' }}\n        >\n          {kind ? (\n            <MediaDeviceSelect\n              initialSelection={initialSelection}\n              onActiveDeviceChange={(deviceId) => handleActiveDeviceChange(kind, deviceId)}\n              onDeviceListChange={setDevices}\n              kind={kind}\n              track={tracks?.[kind]}\n              requestPermissions={needPermissions}\n            />\n          ) : (\n            <>\n              <div className=\"lk-device-menu-heading\">Audio inputs</div>\n              <MediaDeviceSelect\n                kind=\"audioinput\"\n                onActiveDeviceChange={(deviceId) =>\n                  handleActiveDeviceChange('audioinput', deviceId)\n                }\n                onDeviceListChange={setDevices}\n                track={tracks?.audioinput}\n                requestPermissions={needPermissions}\n              />\n              <div className=\"lk-device-menu-heading\">Video inputs</div>\n              <MediaDeviceSelect\n                kind=\"videoinput\"\n                onActiveDeviceChange={(deviceId) =>\n                  handleActiveDeviceChange('videoinput', deviceId)\n                }\n                onDeviceListChange={setDevices}\n                track={tracks?.videoinput}\n                requestPermissions={needPermissions}\n              />\n            </>\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n","import * as React from 'react';\nimport { warnAboutMissingStyles } from '../utils';\n\n/**\n * @internal\n */\nexport function useWarnAboutMissingStyles() {\n  React.useEffect(() => {\n    warnAboutMissingStyles();\n  }, []);\n}\n","import type {\n  CreateLocalTracksOptions,\n  LocalAudioTrack,\n  LocalTrack,\n  LocalVideoTrack,\n  TrackProcessor,\n} from 'livekit-client';\nimport {\n  createLocalAudioTrack,\n  createLocalTracks,\n  createLocalVideoTrack,\n  facingModeFromLocalTrack,\n  Track,\n  VideoPresets,\n  Mutex,\n} from 'livekit-client';\nimport * as React from 'react';\nimport { MediaDeviceMenu } from './MediaDeviceMenu';\nimport { TrackToggle } from '../components/controls/TrackToggle';\nimport type { LocalUserChoices } from '@livekit/components-core';\nimport { log } from '@livekit/components-core';\nimport { ParticipantPlaceholder } from '../assets/images';\nimport { useMediaDevices, usePersistentUserChoices } from '../hooks';\nimport { useWarnAboutMissingStyles } from '../hooks/useWarnAboutMissingStyles';\nimport { roomOptionsStringifyReplacer } from '../utils';\n\n/**\n * Props for the PreJoin component.\n * @public\n */\nexport interface PreJoinProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onSubmit' | 'onError'> {\n  /** This function is called with the `LocalUserChoices` if validation is passed. */\n  onSubmit?: (values: LocalUserChoices) => void;\n  /**\n   * Provide your custom validation function. Only if validation is successful the user choices are past to the onSubmit callback.\n   */\n  onValidate?: (values: LocalUserChoices) => boolean;\n  onError?: (error: Error) => void;\n  /** Prefill the input form with initial values. */\n  defaults?: Partial<LocalUserChoices>;\n  /** Display a debug window for your convenience. */\n  debug?: boolean;\n  joinLabel?: string;\n  micLabel?: string;\n  camLabel?: string;\n  userLabel?: string;\n  /**\n   * If true, user choices are persisted across sessions.\n   * @defaultValue true\n   * @alpha\n   */\n  persistUserChoices?: boolean;\n  videoProcessor?: TrackProcessor<Track.Kind.Video>;\n}\n\n/** @public */\nexport function usePreviewTracks(\n  options: CreateLocalTracksOptions,\n  onError?: (err: Error) => void,\n) {\n  const [tracks, setTracks] = React.useState<LocalTrack[]>();\n\n  const trackLock = React.useMemo(() => new Mutex(), []);\n\n  React.useEffect(() => {\n    let needsCleanup = false;\n    let localTracks: Array<LocalTrack> = [];\n    trackLock.lock().then(async (unlock) => {\n      try {\n        if (options.audio || options.video) {\n          localTracks = await createLocalTracks(options);\n\n          if (needsCleanup) {\n            localTracks.forEach((tr) => tr.stop());\n          } else {\n            setTracks(localTracks);\n          }\n        }\n      } catch (e: unknown) {\n        if (onError && e instanceof Error) {\n          onError(e);\n        } else {\n          log.error(e);\n        }\n      } finally {\n        unlock();\n      }\n    });\n\n    return () => {\n      needsCleanup = true;\n      localTracks.forEach((track) => {\n        track.stop();\n      });\n    };\n  }, [JSON.stringify(options, roomOptionsStringifyReplacer), onError, trackLock]);\n\n  return tracks;\n}\n\n/**\n * @public\n * @deprecated use `usePreviewTracks` instead\n */\nexport function usePreviewDevice<T extends LocalVideoTrack | LocalAudioTrack>(\n  enabled: boolean,\n  deviceId: string,\n  kind: 'videoinput' | 'audioinput',\n) {\n  const [deviceError, setDeviceError] = React.useState<Error | null>(null);\n  const [isCreatingTrack, setIsCreatingTrack] = React.useState<boolean>(false);\n\n  const devices = useMediaDevices({ kind });\n  const [selectedDevice, setSelectedDevice] = React.useState<MediaDeviceInfo | undefined>(\n    undefined,\n  );\n\n  const [localTrack, setLocalTrack] = React.useState<T>();\n  const [localDeviceId, setLocalDeviceId] = React.useState<string>(deviceId);\n\n  React.useEffect(() => {\n    setLocalDeviceId(deviceId);\n  }, [deviceId]);\n\n  const createTrack = async (deviceId: string, kind: 'videoinput' | 'audioinput') => {\n    try {\n      const track =\n        kind === 'videoinput'\n          ? await createLocalVideoTrack({\n              deviceId,\n              resolution: VideoPresets.h720.resolution,\n            })\n          : await createLocalAudioTrack({ deviceId });\n\n      const newDeviceId = await track.getDeviceId(false);\n      if (newDeviceId && deviceId !== newDeviceId) {\n        prevDeviceId.current = newDeviceId;\n        setLocalDeviceId(newDeviceId);\n      }\n      setLocalTrack(track as T);\n    } catch (e) {\n      if (e instanceof Error) {\n        setDeviceError(e);\n      }\n    }\n  };\n\n  const switchDevice = async (track: LocalVideoTrack | LocalAudioTrack, id: string) => {\n    await track.setDeviceId(id);\n    prevDeviceId.current = id;\n  };\n\n  const prevDeviceId = React.useRef(localDeviceId);\n\n  React.useEffect(() => {\n    if (enabled && !localTrack && !deviceError && !isCreatingTrack) {\n      log.debug('creating track', kind);\n      setIsCreatingTrack(true);\n      createTrack(localDeviceId, kind).finally(() => {\n        setIsCreatingTrack(false);\n      });\n    }\n  }, [enabled, localTrack, deviceError, isCreatingTrack]);\n\n  // switch camera device\n  React.useEffect(() => {\n    if (!localTrack) {\n      return;\n    }\n    if (!enabled) {\n      log.debug(`muting ${kind} track`);\n      localTrack.mute().then(() => log.debug(localTrack.mediaStreamTrack));\n    } else if (selectedDevice?.deviceId && prevDeviceId.current !== selectedDevice?.deviceId) {\n      log.debug(`switching ${kind} device from`, prevDeviceId.current, selectedDevice.deviceId);\n      switchDevice(localTrack, selectedDevice.deviceId);\n    } else {\n      log.debug(`unmuting local ${kind} track`);\n      localTrack.unmute();\n    }\n  }, [localTrack, selectedDevice, enabled, kind]);\n\n  React.useEffect(() => {\n    return () => {\n      if (localTrack) {\n        log.debug(`stopping local ${kind} track`);\n        localTrack.stop();\n        localTrack.mute();\n      }\n    };\n  }, []);\n\n  React.useEffect(() => {\n    setSelectedDevice(devices?.find((dev) => dev.deviceId === localDeviceId));\n  }, [localDeviceId, devices]);\n\n  return {\n    selectedDevice,\n    localTrack,\n    deviceError,\n  };\n}\n\n/**\n * The `PreJoin` prefab component is normally presented to the user before he enters a room.\n * This component allows the user to check and select the preferred media device (camera und microphone).\n * On submit the user decisions are returned, which can then be passed on to the `LiveKitRoom` so that the user enters the room with the correct media devices.\n *\n * @remarks\n * This component is independent of the `LiveKitRoom` component and should not be nested within it.\n * Because it only accesses the local media tracks this component is self-contained and works without connection to the LiveKit server.\n *\n * @example\n * ```tsx\n * <PreJoin />\n * ```\n * @public\n */\nexport function PreJoin({\n  defaults = {},\n  onValidate,\n  onSubmit,\n  onError,\n  debug,\n  joinLabel = 'Join Room',\n  micLabel = 'Microphone',\n  camLabel = 'Camera',\n  userLabel = 'Username',\n  persistUserChoices = true,\n  videoProcessor,\n  ...htmlProps\n}: PreJoinProps) {\n  const {\n    userChoices: initialUserChoices,\n    saveAudioInputDeviceId,\n    saveAudioInputEnabled,\n    saveVideoInputDeviceId,\n    saveVideoInputEnabled,\n    saveUsername,\n  } = usePersistentUserChoices({\n    defaults,\n    preventSave: !persistUserChoices,\n    preventLoad: !persistUserChoices,\n  });\n\n  const [userChoices, setUserChoices] = React.useState(initialUserChoices);\n\n  // Initialize device settings\n  const [audioEnabled, setAudioEnabled] = React.useState<boolean>(userChoices.audioEnabled);\n  const [videoEnabled, setVideoEnabled] = React.useState<boolean>(userChoices.videoEnabled);\n  const [audioDeviceId, setAudioDeviceId] = React.useState<string>(userChoices.audioDeviceId);\n  const [videoDeviceId, setVideoDeviceId] = React.useState<string>(userChoices.videoDeviceId);\n  const [username, setUsername] = React.useState(userChoices.username);\n\n  // Save user choices to persistent storage.\n  React.useEffect(() => {\n    saveAudioInputEnabled(audioEnabled);\n  }, [audioEnabled, saveAudioInputEnabled]);\n  React.useEffect(() => {\n    saveVideoInputEnabled(videoEnabled);\n  }, [videoEnabled, saveVideoInputEnabled]);\n  React.useEffect(() => {\n    saveAudioInputDeviceId(audioDeviceId);\n  }, [audioDeviceId, saveAudioInputDeviceId]);\n  React.useEffect(() => {\n    saveVideoInputDeviceId(videoDeviceId);\n  }, [videoDeviceId, saveVideoInputDeviceId]);\n  React.useEffect(() => {\n    saveUsername(username);\n  }, [username, saveUsername]);\n\n  const tracks = usePreviewTracks(\n    {\n      audio: audioEnabled ? { deviceId: initialUserChoices.audioDeviceId } : false,\n      video: videoEnabled\n        ? { deviceId: initialUserChoices.videoDeviceId, processor: videoProcessor }\n        : false,\n    },\n    onError,\n  );\n\n  const videoEl = React.useRef(null);\n\n  const videoTrack = React.useMemo(\n    () => tracks?.filter((track) => track.kind === Track.Kind.Video)[0] as LocalVideoTrack,\n    [tracks],\n  );\n\n  const facingMode = React.useMemo(() => {\n    if (videoTrack) {\n      const { facingMode } = facingModeFromLocalTrack(videoTrack);\n      return facingMode;\n    } else {\n      return 'undefined';\n    }\n  }, [videoTrack]);\n\n  const audioTrack = React.useMemo(\n    () => tracks?.filter((track) => track.kind === Track.Kind.Audio)[0] as LocalAudioTrack,\n    [tracks],\n  );\n\n  React.useEffect(() => {\n    if (videoEl.current && videoTrack) {\n      videoTrack.unmute();\n      videoTrack.attach(videoEl.current);\n    }\n\n    return () => {\n      videoTrack?.detach();\n    };\n  }, [videoTrack]);\n\n  const [isValid, setIsValid] = React.useState<boolean>();\n\n  const handleValidation = React.useCallback(\n    (values: LocalUserChoices) => {\n      if (typeof onValidate === 'function') {\n        return onValidate(values);\n      } else {\n        return values.username !== '';\n      }\n    },\n    [onValidate],\n  );\n\n  React.useEffect(() => {\n    const newUserChoices = {\n      username,\n      videoEnabled,\n      videoDeviceId,\n      audioEnabled,\n      audioDeviceId,\n    };\n    setUserChoices(newUserChoices);\n    setIsValid(handleValidation(newUserChoices));\n  }, [username, videoEnabled, handleValidation, audioEnabled, audioDeviceId, videoDeviceId]);\n\n  function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n    if (handleValidation(userChoices)) {\n      if (typeof onSubmit === 'function') {\n        onSubmit(userChoices);\n      }\n    } else {\n      log.warn('Validation failed with: ', userChoices);\n    }\n  }\n\n  useWarnAboutMissingStyles();\n\n  return (\n    <div className=\"lk-prejoin\" {...htmlProps}>\n      <div className=\"lk-video-container\">\n        {videoTrack && (\n          <video ref={videoEl} width=\"1280\" height=\"720\" data-lk-facing-mode={facingMode} />\n        )}\n        {(!videoTrack || !videoEnabled) && (\n          <div className=\"lk-camera-off-note\">\n            <ParticipantPlaceholder />\n          </div>\n        )}\n      </div>\n      <div className=\"lk-button-group-container\">\n        <div className=\"lk-button-group audio\">\n          <TrackToggle\n            initialState={audioEnabled}\n            source={Track.Source.Microphone}\n            onChange={(enabled) => setAudioEnabled(enabled)}\n          >\n            {micLabel}\n          </TrackToggle>\n          <div className=\"lk-button-group-menu\">\n            <MediaDeviceMenu\n              initialSelection={audioDeviceId}\n              kind=\"audioinput\"\n              disabled={!audioTrack}\n              tracks={{ audioinput: audioTrack }}\n              onActiveDeviceChange={(_, id) => setAudioDeviceId(id)}\n            />\n          </div>\n        </div>\n        <div className=\"lk-button-group video\">\n          <TrackToggle\n            initialState={videoEnabled}\n            source={Track.Source.Camera}\n            onChange={(enabled) => setVideoEnabled(enabled)}\n          >\n            {camLabel}\n          </TrackToggle>\n          <div className=\"lk-button-group-menu\">\n            <MediaDeviceMenu\n              initialSelection={videoDeviceId}\n              kind=\"videoinput\"\n              disabled={!videoTrack}\n              tracks={{ videoinput: videoTrack }}\n              onActiveDeviceChange={(_, id) => setVideoDeviceId(id)}\n            />\n          </div>\n        </div>\n      </div>\n\n      <form className=\"lk-username-container\">\n        <input\n          className=\"lk-form-control\"\n          id=\"username\"\n          name=\"username\"\n          type=\"text\"\n          defaultValue={username}\n          placeholder={userLabel}\n          onChange={(inputEl) => setUsername(inputEl.target.value)}\n          autoComplete=\"off\"\n        />\n        <button\n          className=\"lk-button lk-join-button\"\n          type=\"submit\"\n          onClick={handleSubmit}\n          disabled={!isValid}\n        >\n          {joinLabel}\n        </button>\n      </form>\n\n      {debug && (\n        <>\n          <strong>User Choices:</strong>\n          <ul className=\"lk-list\" style={{ overflow: 'hidden', maxWidth: '15rem' }}>\n            <li>Username: {`${userChoices.username}`}</li>\n            <li>Video Enabled: {`${userChoices.videoEnabled}`}</li>\n            <li>Audio Enabled: {`${userChoices.audioEnabled}`}</li>\n            <li>Video Device: {`${userChoices.videoDeviceId}`}</li>\n            <li>Audio Device: {`${userChoices.audioDeviceId}`}</li>\n          </ul>\n        </>\n      )}\n    </div>\n  );\n}\n","import { useLayoutContext } from '../context';\nimport { mergeProps } from '../mergeProps';\nimport * as React from 'react';\n\n/** @alpha */\nexport interface UseSettingsToggleProps {\n  props: React.ButtonHTMLAttributes<HTMLButtonElement>;\n}\n\n/**\n * The `useSettingsToggle` hook provides state and functions for toggling the settings menu.\n * @remarks\n * Depends on the `LayoutContext` to work properly.\n * @see {@link SettingsMenu}\n * @alpha\n */\nexport function useSettingsToggle({ props }: UseSettingsToggleProps) {\n  const { dispatch, state } = useLayoutContext().widget;\n  const className = 'lk-button lk-settings-toggle';\n\n  const mergedProps = React.useMemo(() => {\n    return mergeProps(props, {\n      className,\n      onClick: () => {\n        if (dispatch) dispatch({ msg: 'toggle_settings' });\n      },\n      'aria-pressed': state?.showSettings ? 'true' : 'false',\n    });\n  }, [props, className, dispatch, state]);\n\n  return { mergedProps };\n}\n","import * as React from 'react';\nimport { useSettingsToggle } from '../../hooks/useSettingsToggle';\n\n/** @alpha */\nexport interface SettingsMenuToggleProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {}\n\n/**\n * The `SettingsMenuToggle` component is a button that toggles the visibility of the `SettingsMenu` component.\n * @remarks\n * For the component to have any effect it has to live inside a `LayoutContext` context.\n *\n * @alpha\n */\nexport const SettingsMenuToggle: (\n  props: SettingsMenuToggleProps & React.RefAttributes<HTMLButtonElement>,\n) => React.ReactNode = /* @__PURE__ */ React.forwardRef<HTMLButtonElement, SettingsMenuToggleProps>(\n  function SettingsMenuToggle(props: SettingsMenuToggleProps, ref) {\n    const { mergedProps } = useSettingsToggle({ props });\n\n    return (\n      <button ref={ref} {...mergedProps}>\n        {props.children}\n      </button>\n    );\n  },\n);\n","import { Track } from 'livekit-client';\nimport * as React from 'react';\nimport { MediaDeviceMenu } from './MediaDeviceMenu';\nimport { DisconnectButton } from '../components/controls/DisconnectButton';\nimport { TrackToggle } from '../components/controls/TrackToggle';\nimport { ChatIcon, GearIcon, LeaveIcon } from '../assets/icons';\nimport { ChatToggle } from '../components/controls/ChatToggle';\nimport { useLocalParticipantPermissions, usePersistentUserChoices } from '../hooks';\nimport { useMediaQuery } from '../hooks/internal';\nimport { useMaybeLayoutContext } from '../context';\nimport { supportsScreenSharing } from '@livekit/components-core';\nimport { mergeProps } from '../utils';\nimport { StartMediaButton } from '../components/controls/StartMediaButton';\nimport { SettingsMenuToggle } from '../components/controls/SettingsMenuToggle';\n\n/** @public */\nexport type ControlBarControls = {\n  microphone?: boolean;\n  camera?: boolean;\n  chat?: boolean;\n  screenShare?: boolean;\n  leave?: boolean;\n  settings?: boolean;\n};\n\nconst trackSourceToProtocol = (source: Track.Source) => {\n  // NOTE: this mapping avoids importing the protocol package as that leads to a significant bundle size increase\n  switch (source) {\n    case Track.Source.Camera:\n      return 1;\n    case Track.Source.Microphone:\n      return 2;\n    case Track.Source.ScreenShare:\n      return 3;\n    default:\n      return 0;\n  }\n};\n\n/** @public */\nexport interface ControlBarProps extends React.HTMLAttributes<HTMLDivElement> {\n  onDeviceError?: (error: { source: Track.Source; error: Error }) => void;\n  variation?: 'minimal' | 'verbose' | 'textOnly';\n  controls?: ControlBarControls;\n  /**\n   * If `true`, the user's device choices will be persisted.\n   * This will enable the user to have the same device choices when they rejoin the room.\n   * @defaultValue true\n   * @alpha\n   */\n  saveUserChoices?: boolean;\n}\n\n/**\n * The `ControlBar` prefab gives the user the basic user interface to control their\n * media devices (camera, microphone and screen share), open the `Chat` and leave the room.\n *\n * @remarks\n * This component is build with other LiveKit components like `TrackToggle`,\n * `DeviceSelectorButton`, `DisconnectButton` and `StartAudio`.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <ControlBar />\n * </LiveKitRoom>\n * ```\n * @public\n */\nexport function ControlBar({\n  variation,\n  controls,\n  saveUserChoices = true,\n  onDeviceError,\n  ...props\n}: ControlBarProps) {\n  const [isChatOpen, setIsChatOpen] = React.useState(false);\n  const layoutContext = useMaybeLayoutContext();\n  React.useEffect(() => {\n    if (layoutContext?.widget.state?.showChat !== undefined) {\n      setIsChatOpen(layoutContext?.widget.state?.showChat);\n    }\n  }, [layoutContext?.widget.state?.showChat]);\n  const isTooLittleSpace = useMediaQuery(`(max-width: ${isChatOpen ? 1000 : 760}px)`);\n\n  const defaultVariation = isTooLittleSpace ? 'minimal' : 'verbose';\n  variation ??= defaultVariation;\n\n  const visibleControls = { leave: true, ...controls };\n\n  const localPermissions = useLocalParticipantPermissions();\n\n  if (!localPermissions) {\n    visibleControls.camera = false;\n    visibleControls.chat = false;\n    visibleControls.microphone = false;\n    visibleControls.screenShare = false;\n  } else {\n    const canPublishSource = (source: Track.Source) => {\n      return (\n        localPermissions.canPublish &&\n        (localPermissions.canPublishSources.length === 0 ||\n          localPermissions.canPublishSources.includes(trackSourceToProtocol(source)))\n      );\n    };\n    visibleControls.camera ??= canPublishSource(Track.Source.Camera);\n    visibleControls.microphone ??= canPublishSource(Track.Source.Microphone);\n    visibleControls.screenShare ??= canPublishSource(Track.Source.ScreenShare);\n    visibleControls.chat ??= localPermissions.canPublishData && controls?.chat;\n  }\n\n  const showIcon = React.useMemo(\n    () => variation === 'minimal' || variation === 'verbose',\n    [variation],\n  );\n  const showText = React.useMemo(\n    () => variation === 'textOnly' || variation === 'verbose',\n    [variation],\n  );\n\n  const browserSupportsScreenSharing = supportsScreenSharing();\n\n  const [isScreenShareEnabled, setIsScreenShareEnabled] = React.useState(false);\n\n  const onScreenShareChange = React.useCallback(\n    (enabled: boolean) => {\n      setIsScreenShareEnabled(enabled);\n    },\n    [setIsScreenShareEnabled],\n  );\n\n  const htmlProps = mergeProps({ className: 'lk-control-bar' }, props);\n\n  const {\n    saveAudioInputEnabled,\n    saveVideoInputEnabled,\n    saveAudioInputDeviceId,\n    saveVideoInputDeviceId,\n  } = usePersistentUserChoices({ preventSave: !saveUserChoices });\n\n  const microphoneOnChange = React.useCallback(\n    (enabled: boolean, isUserInitiated: boolean) =>\n      isUserInitiated ? saveAudioInputEnabled(enabled) : null,\n    [saveAudioInputEnabled],\n  );\n\n  const cameraOnChange = React.useCallback(\n    (enabled: boolean, isUserInitiated: boolean) =>\n      isUserInitiated ? saveVideoInputEnabled(enabled) : null,\n    [saveVideoInputEnabled],\n  );\n\n  return (\n    <div {...htmlProps}>\n      {visibleControls.microphone && (\n        <div className=\"lk-button-group\">\n          <TrackToggle\n            source={Track.Source.Microphone}\n            showIcon={showIcon}\n            onChange={microphoneOnChange}\n            onDeviceError={(error) => onDeviceError?.({ source: Track.Source.Microphone, error })}\n          >\n            {showText && 'Microphone'}\n          </TrackToggle>\n          <div className=\"lk-button-group-menu\">\n            <MediaDeviceMenu\n              kind=\"audioinput\"\n              onActiveDeviceChange={(_kind, deviceId) =>\n                saveAudioInputDeviceId(deviceId ?? 'default')\n              }\n            />\n          </div>\n        </div>\n      )}\n      {visibleControls.camera && (\n        <div className=\"lk-button-group\">\n          <TrackToggle\n            source={Track.Source.Camera}\n            showIcon={showIcon}\n            onChange={cameraOnChange}\n            onDeviceError={(error) => onDeviceError?.({ source: Track.Source.Camera, error })}\n          >\n            {showText && 'Camera'}\n          </TrackToggle>\n          <div className=\"lk-button-group-menu\">\n            <MediaDeviceMenu\n              kind=\"videoinput\"\n              onActiveDeviceChange={(_kind, deviceId) =>\n                saveVideoInputDeviceId(deviceId ?? 'default')\n              }\n            />\n          </div>\n        </div>\n      )}\n      {visibleControls.screenShare && browserSupportsScreenSharing && (\n        <TrackToggle\n          source={Track.Source.ScreenShare}\n          captureOptions={{ audio: true, selfBrowserSurface: 'include' }}\n          showIcon={showIcon}\n          onChange={onScreenShareChange}\n          onDeviceError={(error) => onDeviceError?.({ source: Track.Source.ScreenShare, error })}\n        >\n          {showText && (isScreenShareEnabled ? 'Stop screen share' : 'Share screen')}\n        </TrackToggle>\n      )}\n      {visibleControls.chat && (\n        <ChatToggle>\n          {showIcon && <ChatIcon />}\n          {showText && 'Chat'}\n        </ChatToggle>\n      )}\n      {visibleControls.settings && (\n        <SettingsMenuToggle>\n          {showIcon && <GearIcon />}\n          {showText && 'Settings'}\n        </SettingsMenuToggle>\n      )}\n      {visibleControls.leave && (\n        <DisconnectButton>\n          {showIcon && <LeaveIcon />}\n          {showText && 'Leave'}\n        </DisconnectButton>\n      )}\n      <StartMediaButton />\n    </div>\n  );\n}\n","import type {\n  MessageDecoder,\n  MessageEncoder,\n  TrackReferenceOrPlaceholder,\n  WidgetState,\n} from '@livekit/components-core';\nimport { isEqualTrackRef, isTrackReference, isWeb, log } from '@livekit/components-core';\nimport { RoomEvent, Track } from 'livekit-client';\nimport * as React from 'react';\nimport type { MessageFormatter } from '../components';\nimport {\n  CarouselLayout,\n  ConnectionStateToast,\n  FocusLayout,\n  FocusLayoutContainer,\n  GridLayout,\n  LayoutContextProvider,\n  ParticipantTile,\n  RoomAudioRenderer,\n} from '../components';\nimport { useCreateLayoutContext } from '../context';\nimport { usePinnedTracks, useTracks } from '../hooks';\nimport { Chat } from './Chat';\nimport { ControlBar } from './ControlBar';\nimport { useWarnAboutMissingStyles } from '../hooks/useWarnAboutMissingStyles';\n\n/**\n * @public\n */\nexport interface VideoConferenceProps extends React.HTMLAttributes<HTMLDivElement> {\n  chatMessageFormatter?: MessageFormatter;\n  chatMessageEncoder?: MessageEncoder;\n  chatMessageDecoder?: MessageDecoder;\n  /** @alpha */\n  SettingsComponent?: React.ComponentType;\n}\n\n/**\n * The `VideoConference` ready-made component is your drop-in solution for a classic video conferencing application.\n * It provides functionality such as focusing on one participant, grid view with pagination to handle large numbers\n * of participants, basic non-persistent chat, screen sharing, and more.\n *\n * @remarks\n * The component is implemented with other LiveKit components like `FocusContextProvider`,\n * `GridLayout`, `ControlBar`, `FocusLayoutContainer` and `FocusLayout`.\n * You can use these components as a starting point for your own custom video conferencing application.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <VideoConference />\n * <LiveKitRoom>\n * ```\n * @public\n */\nexport function VideoConference({\n  chatMessageFormatter,\n  chatMessageDecoder,\n  chatMessageEncoder,\n  SettingsComponent,\n  ...props\n}: VideoConferenceProps) {\n  const [widgetState, setWidgetState] = React.useState<WidgetState>({\n    showChat: false,\n    unreadMessages: 0,\n    showSettings: false,\n  });\n  const lastAutoFocusedScreenShareTrack = React.useRef<TrackReferenceOrPlaceholder | null>(null);\n\n  const tracks = useTracks(\n    [\n      { source: Track.Source.Camera, withPlaceholder: true },\n      { source: Track.Source.ScreenShare, withPlaceholder: false },\n    ],\n    { updateOnlyOn: [RoomEvent.ActiveSpeakersChanged], onlySubscribed: false },\n  );\n\n  const widgetUpdate = (state: WidgetState) => {\n    log.debug('updating widget state', state);\n    setWidgetState(state);\n  };\n\n  const layoutContext = useCreateLayoutContext();\n\n  const screenShareTracks = tracks\n    .filter(isTrackReference)\n    .filter((track) => track.publication.source === Track.Source.ScreenShare);\n\n  const focusTrack = usePinnedTracks(layoutContext)?.[0];\n  const carouselTracks = tracks.filter((track) => !isEqualTrackRef(track, focusTrack));\n\n  React.useEffect(() => {\n    // If screen share tracks are published, and no pin is set explicitly, auto set the screen share.\n    if (\n      screenShareTracks.some((track) => track.publication.isSubscribed) &&\n      lastAutoFocusedScreenShareTrack.current === null\n    ) {\n      log.debug('Auto set screen share focus:', { newScreenShareTrack: screenShareTracks[0] });\n      layoutContext.pin.dispatch?.({ msg: 'set_pin', trackReference: screenShareTracks[0] });\n      lastAutoFocusedScreenShareTrack.current = screenShareTracks[0];\n    } else if (\n      lastAutoFocusedScreenShareTrack.current &&\n      !screenShareTracks.some(\n        (track) =>\n          track.publication.trackSid ===\n          lastAutoFocusedScreenShareTrack.current?.publication?.trackSid,\n      )\n    ) {\n      log.debug('Auto clearing screen share focus.');\n      layoutContext.pin.dispatch?.({ msg: 'clear_pin' });\n      lastAutoFocusedScreenShareTrack.current = null;\n    }\n    if (focusTrack && !isTrackReference(focusTrack)) {\n      const updatedFocusTrack = tracks.find(\n        (tr) =>\n          tr.participant.identity === focusTrack.participant.identity &&\n          tr.source === focusTrack.source,\n      );\n      if (updatedFocusTrack !== focusTrack && isTrackReference(updatedFocusTrack)) {\n        layoutContext.pin.dispatch?.({ msg: 'set_pin', trackReference: updatedFocusTrack });\n      }\n    }\n  }, [\n    screenShareTracks\n      .map((ref) => `${ref.publication.trackSid}_${ref.publication.isSubscribed}`)\n      .join(),\n    focusTrack?.publication?.trackSid,\n    tracks,\n  ]);\n\n  useWarnAboutMissingStyles();\n\n  return (\n    <div className=\"lk-video-conference\" {...props}>\n      {isWeb() && (\n        <LayoutContextProvider\n          value={layoutContext}\n          // onPinChange={handleFocusStateChange}\n          onWidgetChange={widgetUpdate}\n        >\n          <div className=\"lk-video-conference-inner\">\n            {!focusTrack ? (\n              <div className=\"lk-grid-layout-wrapper\">\n                <GridLayout tracks={tracks}>\n                  <ParticipantTile />\n                </GridLayout>\n              </div>\n            ) : (\n              <div className=\"lk-focus-layout-wrapper\">\n                <FocusLayoutContainer>\n                  <CarouselLayout tracks={carouselTracks}>\n                    <ParticipantTile />\n                  </CarouselLayout>\n                  {focusTrack && <FocusLayout trackRef={focusTrack} />}\n                </FocusLayoutContainer>\n              </div>\n            )}\n            <ControlBar controls={{ chat: true, settings: !!SettingsComponent }} />\n          </div>\n          <Chat\n            style={{ display: widgetState.showChat ? 'grid' : 'none' }}\n            messageFormatter={chatMessageFormatter}\n            messageEncoder={chatMessageEncoder}\n            messageDecoder={chatMessageDecoder}\n          />\n          {SettingsComponent && (\n            <div\n              className=\"lk-settings-menu-modal\"\n              style={{ display: widgetState.showSettings ? 'block' : 'none' }}\n            >\n              <SettingsComponent />\n            </div>\n          )}\n        </LayoutContextProvider>\n      )}\n      <RoomAudioRenderer />\n      <ConnectionStateToast />\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { ControlBar } from './ControlBar';\n\nimport { ParticipantAudioTile } from '../components/participant/ParticipantAudioTile';\nimport { LayoutContextProvider } from '../components/layout/LayoutContextProvider';\nimport type { WidgetState } from '@livekit/components-core';\nimport { Chat } from './Chat';\nimport { TrackLoop } from '../components';\nimport { useTracks } from '../hooks';\nimport { useWarnAboutMissingStyles } from '../hooks/useWarnAboutMissingStyles';\nimport { Track } from 'livekit-client';\n\n/** @public */\nexport interface AudioConferenceProps extends React.HTMLAttributes<HTMLDivElement> {}\n\n/**\n * This component is the default setup of a classic LiveKit audio conferencing app.\n * It provides functionality like switching between participant grid view and focus view.\n *\n * @remarks\n * The component is implemented with other LiveKit components like `FocusContextProvider`,\n * `GridLayout`, `ControlBar`, `FocusLayoutContainer` and `FocusLayout`.\n *\n * @example\n * ```tsx\n * <LiveKitRoom>\n *   <AudioConference />\n * <LiveKitRoom>\n * ```\n * @public\n */\nexport function AudioConference({ ...props }: AudioConferenceProps) {\n  const [widgetState, setWidgetState] = React.useState<WidgetState>({\n    showChat: false,\n    unreadMessages: 0,\n  });\n\n  const audioTracks = useTracks([Track.Source.Microphone]);\n\n  useWarnAboutMissingStyles();\n\n  return (\n    <LayoutContextProvider onWidgetChange={setWidgetState}>\n      <div className=\"lk-audio-conference\" {...props}>\n        <div className=\"lk-audio-conference-stage\">\n          <TrackLoop tracks={audioTracks}>\n            <ParticipantAudioTile />\n          </TrackLoop>\n        </div>\n        <ControlBar\n          controls={{ microphone: true, screenShare: false, camera: false, chat: true }}\n        />\n        {widgetState.showChat && <Chat />}\n      </div>\n    </LayoutContextProvider>\n  );\n}\n","import { Track } from 'livekit-client';\nimport * as React from 'react';\nimport { MediaDeviceMenu } from './MediaDeviceMenu';\nimport { TrackToggle } from '../components/controls/TrackToggle';\nimport {\n  useLocalParticipant,\n  useLocalParticipantPermissions,\n  usePersistentUserChoices,\n} from '../hooks';\nimport { mergeProps } from '../utils';\nimport { StartMediaButton } from '../components/controls/StartMediaButton';\nimport { BarVisualizer, DisconnectButton } from '../components';\nimport type { TrackReferenceOrPlaceholder } from '@livekit/components-core';\n\n/** @beta */\nexport type VoiceAssistantControlBarControls = {\n  microphone?: boolean;\n  leave?: boolean;\n};\n\n/** @beta */\nexport interface VoiceAssistantControlBarProps extends React.HTMLAttributes<HTMLDivElement> {\n  onDeviceError?: (error: { source: Track.Source; error: Error }) => void;\n  controls?: VoiceAssistantControlBarControls;\n  /**\n   * If `true`, the user's device choices will be persisted.\n   * This will enables the user to have the same device choices when they rejoin the room.\n   * @defaultValue true\n   */\n  saveUserChoices?: boolean;\n}\n\n/**\n * @example\n * ```tsx\n * <LiveKitRoom ... >\n *   <VoiceAssistantControlBar />\n * </LiveKitRoom>\n * ```\n * @beta\n */\nexport function VoiceAssistantControlBar({\n  controls,\n  saveUserChoices = true,\n  onDeviceError,\n  ...props\n}: VoiceAssistantControlBarProps) {\n  const visibleControls = { leave: true, microphone: true, ...controls };\n\n  const localPermissions = useLocalParticipantPermissions();\n  const { microphoneTrack, localParticipant } = useLocalParticipant();\n\n  const micTrackRef: TrackReferenceOrPlaceholder = React.useMemo(() => {\n    return {\n      participant: localParticipant,\n      source: Track.Source.Microphone,\n      publication: microphoneTrack,\n    };\n  }, [localParticipant, microphoneTrack]);\n\n  if (!localPermissions) {\n    visibleControls.microphone = false;\n  } else {\n    visibleControls.microphone ??= localPermissions.canPublish;\n  }\n\n  const htmlProps = mergeProps({ className: 'lk-agent-control-bar' }, props);\n\n  const { saveAudioInputEnabled, saveAudioInputDeviceId } = usePersistentUserChoices({\n    preventSave: !saveUserChoices,\n  });\n\n  const microphoneOnChange = React.useCallback(\n    (enabled: boolean, isUserInitiated: boolean) => {\n      if (isUserInitiated) {\n        saveAudioInputEnabled(enabled);\n      }\n    },\n    [saveAudioInputEnabled],\n  );\n\n  return (\n    <div {...htmlProps}>\n      {visibleControls.microphone && (\n        <div className=\"lk-button-group\">\n          <TrackToggle\n            source={Track.Source.Microphone}\n            showIcon={true}\n            onChange={microphoneOnChange}\n            onDeviceError={(error) => onDeviceError?.({ source: Track.Source.Microphone, error })}\n          >\n            <BarVisualizer trackRef={micTrackRef} barCount={7} options={{ minHeight: 5 }} />\n          </TrackToggle>\n          <div className=\"lk-button-group-menu\">\n            <MediaDeviceMenu\n              kind=\"audioinput\"\n              onActiveDeviceChange={(_kind, deviceId) =>\n                saveAudioInputDeviceId(deviceId ?? 'default')\n              }\n            />\n          </div>\n        </div>\n      )}\n\n      {visibleControls.leave && <DisconnectButton>{'Disconnect'}</DisconnectButton>}\n      <StartMediaButton />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}