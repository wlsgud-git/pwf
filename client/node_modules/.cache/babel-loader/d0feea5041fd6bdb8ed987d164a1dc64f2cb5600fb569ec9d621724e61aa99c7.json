{"ast":null,"code":"import{HttpClient}from\"../network/http\";export class streamService extends HttpClient{// 방 정보보기\nasync getStreamRoomData(id){try{return await this.axiosFetch(`/room/${id}`,{method:\"get\"});}catch(err){throw err;}}//\nasync createStreamRoom(data){try{return await this.axiosFetch(\"/room\",{method:\"post\",body:data});}catch(err){throw err;}}}export const stream_service=new streamService();","map":{"version":3,"names":["HttpClient","streamService","getStreamRoomData","id","axiosFetch","method","err","createStreamRoom","data","body","stream_service"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/service/streamservice.ts"],"sourcesContent":["import { HttpClient } from \"../network/http\";\r\nimport { Room } from \"../types/room\";\r\n\r\nexport class streamService extends HttpClient {\r\n  // 방 정보보기\r\n  async getStreamRoomData(id: string) {\r\n    try {\r\n      return await this.axiosFetch<Room>(`/room/${id}`, { method: \"get\" });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n  //\r\n  async createStreamRoom(data: FormData) {\r\n    try {\r\n      return await this.axiosFetch<Room>(\"/room\", {\r\n        method: \"post\",\r\n        body: data,\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n}\r\n\r\nexport const stream_service = new streamService();\r\n"],"mappings":"AAAA,OAASA,UAAU,KAAQ,iBAAiB,CAG5C,MAAO,MAAM,CAAAC,aAAa,QAAS,CAAAD,UAAW,CAC5C;AACA,KAAM,CAAAE,iBAAiBA,CAACC,EAAU,CAAE,CAClC,GAAI,CACF,MAAO,MAAM,KAAI,CAACC,UAAU,CAAO,SAASD,EAAE,EAAE,CAAE,CAAEE,MAAM,CAAE,KAAM,CAAC,CAAC,CACtE,CAAE,MAAOC,GAAG,CAAE,CACZ,KAAM,CAAAA,GAAG,CACX,CACF,CACA;AACA,KAAM,CAAAC,gBAAgBA,CAACC,IAAc,CAAE,CACrC,GAAI,CACF,MAAO,MAAM,KAAI,CAACJ,UAAU,CAAO,OAAO,CAAE,CAC1CC,MAAM,CAAE,MAAM,CACdI,IAAI,CAAED,IACR,CAAC,CAAC,CACJ,CAAE,MAAOF,GAAG,CAAE,CACZ,KAAM,CAAAA,GAAG,CACX,CACF,CACF,CAEA,MAAO,MAAM,CAAAI,cAAc,CAAG,GAAI,CAAAT,aAAa,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}