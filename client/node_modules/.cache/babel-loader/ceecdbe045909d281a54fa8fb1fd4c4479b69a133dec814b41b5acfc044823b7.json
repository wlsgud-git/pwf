{"ast":null,"code":"import{HttpClient}from\"../network/http\";export class userService extends HttpClient{async testing(data){try{return await this.axiosFetch(\"/test\",{method:\"post\",body:data});}catch(err){throw err;}}async logout(){try{return await this.axiosFetch(\"/logout\",{method:\"post\"});}catch(err){throw err;}}async handleRequestFriend(data){try{return await this.axiosFetch(`/request/friend/response`,{method:\"post\",body:data});}catch(err){throw err;}}// 친구요청\nasync requestFriend(data){try{return await this.axiosFetch(`/request/friend`,{method:\"post\",body:data});}catch(err){throw err;}}// 유저 정보 얻기\nasync getUser(){try{return await this.axiosFetch(\"/current\",{method:\"get\"});}catch(err){throw err;}}// 유저 정보 겹치는것 체크\nasync OverlapCheck(data){try{return await this.axiosFetch(\"/overlap_check\",{method:\"post\",body:data});}catch(err){throw err;}}//회원가입 유저정보 보내기\nasync sendUserInfo(data){try{return await this.axiosFetch(`/user_info`,{method:\"post\",body:data});}catch(err){throw err;}}// 인증코드 재전송\nasync resendAuthcode(data){try{return await this.axiosFetch(\"/send_authcode\",{method:\"post\",body:data});}catch(err){throw err;}}// 회원가입\nasync account(data){try{return await this.axiosFetch(\"/account\",{method:\"post\",body:data});}catch(err){throw err;}}// 로그인\nasync sendLoginInfo(data){try{return await this.axiosFetch(\"/login\",{method:\"post\",body:data});}catch(err){throw err;}}}export const user_service=new userService();","map":{"version":3,"names":["HttpClient","userService","testing","data","axiosFetch","method","body","err","logout","handleRequestFriend","requestFriend","getUser","OverlapCheck","sendUserInfo","resendAuthcode","account","sendLoginInfo","user_service"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/service/userservice.ts"],"sourcesContent":["import { HttpClient } from \"../network/http\";\r\n\r\nimport { User } from \"../types/user\";\r\n\r\nexport class userService extends HttpClient {\r\n  async testing(data: FormData) {\r\n    try {\r\n      return await this.axiosFetch<string>(\"/test\", {\r\n        method: \"post\",\r\n        body: data,\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  async logout() {\r\n    try {\r\n      return await this.axiosFetch<string>(\"/logout\", {\r\n        method: \"post\",\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  async handleRequestFriend(data: FormData) {\r\n    try {\r\n      return await this.axiosFetch<{\r\n        result: boolean;\r\n        sender: string;\r\n        msg: string;\r\n      }>(`/request/friend/response`, {\r\n        method: \"post\",\r\n        body: data,\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  // 친구요청\r\n  async requestFriend(data: FormData) {\r\n    try {\r\n      return await this.axiosFetch<User>(`/request/friend`, {\r\n        method: \"post\",\r\n        body: data,\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  // 유저 정보 얻기\r\n  async getUser() {\r\n    try {\r\n      return await this.axiosFetch<User>(\"/current\", { method: \"get\" });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  // 유저 정보 겹치는것 체크\r\n  async OverlapCheck(data: FormData) {\r\n    try {\r\n      return await this.axiosFetch<boolean>(\"/overlap_check\", {\r\n        method: \"post\",\r\n        body: data,\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n  //회원가입 유저정보 보내기\r\n  async sendUserInfo(data: FormData) {\r\n    try {\r\n      return await this.axiosFetch<User>(`/user_info`, {\r\n        method: \"post\",\r\n        body: data,\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n  // 인증코드 재전송\r\n  async resendAuthcode(data: FormData) {\r\n    try {\r\n      return await this.axiosFetch<boolean>(\"/send_authcode\", {\r\n        method: \"post\",\r\n        body: data,\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  // 회원가입\r\n  async account(data: FormData) {\r\n    try {\r\n      return await this.axiosFetch<boolean>(\"/account\", {\r\n        method: \"post\",\r\n        body: data,\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  // 로그인\r\n  async sendLoginInfo(data: FormData) {\r\n    try {\r\n      return await this.axiosFetch<User>(\"/login\", {\r\n        method: \"post\",\r\n        body: data,\r\n      });\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n}\r\n\r\nexport const user_service = new userService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}