{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashh1\\\\Desktop\\\\project\\\\PlayWithFriends\\\\client\\\\src\\\\components\\\\room\\\\roomMain.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { socketClient } from \"../../util/socket\";\nimport { emitter } from \"../../util/event\";\n\n// css\nimport \"../../css/room/roomMain.css\";\nimport \"../../css/invitation.css\";\n\n// type\n\n// import { PeerConnects } from \"../../types/room\";\nimport { FriendStream } from \"./friendStream\";\nimport { Invitation } from \"../modal/invitation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RoomMain = ({\n  user,\n  stream,\n  connects,\n  participants\n}) => {\n  _s();\n  let {\n    id\n  } = useParams();\n  let roomId = `room${id}`;\n  let navigate = useNavigate();\n  let localRef = useRef(null);\n  let localStreamRef = useRef(null);\n  let shareStreamRef = useRef(null);\n  let [audio, setAudio] = useState(true);\n  let [video, setVideo] = useState(true);\n  let [otherShare, setOtherShare] = useState({\n    state: false,\n    nickname: \"\"\n  });\n  let [shareStream, setShareStream] = useState(null);\n  let [showInvitation, setShowInvitation] = useState(false);\n  let openModal = () => {\n    setShowInvitation(true);\n    emitter.emit(\"modal\", {\n      type: \"invitation\",\n      open: true\n    });\n  };\n\n  // 다른 사용자 트랙 변경\n  let trackChange = stream => {\n    Object.entries(connects).forEach(([from, info]) => {\n      let sender = info.pc.getSenders().find(s => s.track.kind == \"video\");\n      if (sender) sender.replaceTrack(stream);\n    });\n  };\n\n  // 화면 공유 과정\n  let changeProcess = (streamTrack, stream, state) => {\n    state ? socketClient.emit(\"share screen\", roomId, user.nickname) : socketClient.emit(\"share screen off\", roomId);\n    setShareStream(stream);\n    trackChange(streamTrack);\n    setOtherShare(c => ({\n      ...c,\n      state,\n      nickname: user.nickname\n    }));\n  };\n\n  //내 화면 공유 시작\n  let ShareStart = async () => {\n    if (otherShare.state) {\n      alert(\"다른 이가 화면공유 중입니다\");\n      return;\n    }\n    try {\n      let s_stream = await navigator.mediaDevices.getDisplayMedia({\n        video: true\n      });\n      let streamTrack = s_stream.getVideoTracks()[0];\n      changeProcess(streamTrack, s_stream, true);\n      streamTrack.onended = () => {\n        changeProcess(stream === null || stream === void 0 ? void 0 : stream.getVideoTracks()[0], null, false);\n      };\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // 다른 사용자가 화면 공유를 시작함\n  let otherScreenShare = from => {\n    setOtherShare(c => ({\n      ...c,\n      state: true,\n      nickname: from\n    }));\n  };\n\n  // 다른 사용자가 화면 공유를 종료함\n  let otherSCreenShareOFf = () => {\n    setShareStream(null);\n    setOtherShare(c => ({\n      ...c,\n      state: false,\n      nickname: \"\"\n    }));\n  };\n\n  // 화면 on/off\n  let toggleMedia = type => {\n    let state = false;\n    if (!localStreamRef.current) return;\n    localStreamRef.current.getTracks().filter(track => track.kind === type).forEach(track => {\n      state = !track.enabled;\n      track.enabled = !track.enabled;\n    });\n    socketClient.emit(\"toggle track\", roomId, user.nickname, type, state);\n    type == \"audio\" ? setAudio(!audio) : setVideo(!video);\n  };\n\n  // 방을 떠남\n  let leaveRoom = () => {\n    if (user.nickname !== \"\") {\n      socketClient.emit(\"leave room\", user.nickname, roomId);\n      navigate(\"/\");\n    }\n  };\n\n  // useEffect ---------------\n\n  // 스트림 ref 설정\n  useEffect(() => {\n    if (stream) {\n      localRef.current.srcObject = stream;\n      localStreamRef.current = stream;\n    }\n  }, [stream]);\n\n  // 화면공유 소켓 초기화\n  useEffect(() => {\n    socketClient.on(\"share screen\", otherScreenShare);\n    socketClient.on(\"share screen off\", otherSCreenShareOFf);\n    return () => {\n      socketClient.off(\"share screen\", otherScreenShare);\n      socketClient.on(\"share screen off\", otherSCreenShareOFf);\n    };\n  }, []);\n\n  // 상대가 화면 공유 시작시 상대방의 비디오 트랙을 shareSTream으로 설정\n  useEffect(() => {\n    let con = Object.entries(connects);\n    if (con.length && otherShare.state && otherShare.nickname !== \"\") {\n      let shareInfo = con.find(([from, info]) => from === otherShare.nickname);\n      if (shareInfo) {\n        let info = shareInfo[1];\n        info.pc.getReceivers().forEach(receive => {\n          setShareStream(new MediaStream([receive.track]));\n        });\n      }\n    }\n  }, [connects, otherShare.nickname]);\n\n  // 공유 스트림이 변경되면 공유 ref.srcObject 변경\n  useEffect(() => {\n    if (shareStream && shareStreamRef.current) {\n      shareStreamRef.current.srcObject = shareStream;\n    }\n  }, [shareStream]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pwf-streamRoom_container\",\n    children: [/*#__PURE__*/_jsxDEV(Invitation, {\n      user: user,\n      show: showInvitation,\n      setShow: setShowInvitation,\n      participants: participants\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pwf-screen_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: otherShare.state ? \"share\" : \"user_screen_lists\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user_video_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: localRef,\n            autoPlay: true,\n            playsInline: true,\n            className: \"user_video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user_info_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: `fa-solid fa-microphone-lines${audio ? \"\" : \"-slash\"}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: `fa-solid fa-video${video ? \"\" : \"-slash\"}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: user.nickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), Object.entries(connects).map(([from, stream]) => /*#__PURE__*/_jsxDEV(FriendStream, {\n          from: from,\n          stream: stream\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"share_screen_container\",\n        style: {\n          display: otherShare.state ? \"flex\" : \"none\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: shareStreamRef,\n          autoPlay: true,\n          playsInline: true,\n          className: \"share_video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"share_user_nickname\",\n          children: otherShare.nickname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"streamRoom_footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user_video_options\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleMedia(\"audio\"),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fa-solid fa-microphone-lines${audio ? \"\" : \"-slash\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: audio ? \"음소거\" : \"음소거 해제\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          title: `비디오${video ? \"\" : \" 해제\"}`,\n          onClick: () => toggleMedia(\"video\"),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fa-solid fa-video${video ? \"\" : \"-slash\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: video ? \"비디오\" : \"비디오 해제\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room_options\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openModal,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-user-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uCD08\\uB300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: ShareStart,\n          style: {\n            color: otherShare.state ? \"var(--pwf-blue)\" : \"white\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-brands fa-creative-commons-share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD654\\uBA74\\uACF5\\uC720\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-desktop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uB0B4 \\uBBF8\\uB514\\uC5B4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => emitter.emit(\"room menu\", true),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-brands fa-elementor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uBA54\\uB274\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"room_exit\",\n        onClick: leaveRoom,\n        children: \"\\uBC29\\uB098\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomMain, \"QwY8YWFuG6qhpEs1mjF7bfR6LMg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = RoomMain;\nvar _c;\n$RefreshReg$(_c, \"RoomMain\");","map":{"version":3,"names":["useEffect","useRef","useState","useNavigate","useParams","socketClient","emitter","FriendStream","Invitation","jsxDEV","_jsxDEV","RoomMain","user","stream","connects","participants","_s","id","roomId","navigate","localRef","localStreamRef","shareStreamRef","audio","setAudio","video","setVideo","otherShare","setOtherShare","state","nickname","shareStream","setShareStream","showInvitation","setShowInvitation","openModal","emit","type","open","trackChange","Object","entries","forEach","from","info","sender","pc","getSenders","find","s","track","kind","replaceTrack","changeProcess","streamTrack","c","ShareStart","alert","s_stream","navigator","mediaDevices","getDisplayMedia","getVideoTracks","onended","err","console","log","otherScreenShare","otherSCreenShareOFf","toggleMedia","current","getTracks","filter","enabled","leaveRoom","srcObject","on","off","con","length","shareInfo","getReceivers","receive","MediaStream","className","children","show","setShow","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","map","style","display","onClick","title","color","_c","$RefreshReg$"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/components/room/roomMain.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport { socketClient } from \"../../util/socket\";\r\nimport { emitter } from \"../../util/event\";\r\n\r\n// css\r\nimport \"../../css/room/roomMain.css\";\r\nimport \"../../css/invitation.css\";\r\n\r\n// type\r\nimport { User } from \"../../types/user\";\r\nimport { Room } from \"../../types/room\";\r\n// import { PeerConnects } from \"../../types/room\";\r\nimport { FriendStream } from \"./friendStream\";\r\n\r\nimport { Invitation } from \"../modal/invitation\";\r\n\r\ninterface RoomMainProps {\r\n  user: User;\r\n  stream: MediaStream | null;\r\n  connects: object;\r\n  participants: Room[\"participants\"];\r\n}\r\n\r\nexport const RoomMain = ({\r\n  user,\r\n  stream,\r\n  connects,\r\n  participants,\r\n}: RoomMainProps) => {\r\n  let { id } = useParams();\r\n  let roomId = `room${id}`;\r\n  let navigate = useNavigate();\r\n\r\n  let localRef = useRef<HTMLVideoElement | null>(null);\r\n  let localStreamRef = useRef<MediaStream | null>(null);\r\n\r\n  let shareStreamRef = useRef<HTMLVideoElement | null>(null);\r\n\r\n  let [audio, setAudio] = useState<boolean>(true);\r\n  let [video, setVideo] = useState<boolean>(true);\r\n\r\n  let [otherShare, setOtherShare] = useState<{\r\n    state: boolean;\r\n    nickname: string;\r\n  }>({ state: false, nickname: \"\" });\r\n  let [shareStream, setShareStream] = useState<MediaStream | null>(null);\r\n  let [showInvitation, setShowInvitation] = useState<boolean>(false);\r\n\r\n  let openModal = () => {\r\n    setShowInvitation(true);\r\n    emitter.emit(\"modal\", { type: \"invitation\", open: true });\r\n  };\r\n\r\n  // 다른 사용자 트랙 변경\r\n  let trackChange = (stream: any) => {\r\n    Object.entries(connects).forEach(([from, info]) => {\r\n      let sender = info.pc\r\n        .getSenders()\r\n        .find((s: any) => s.track.kind == \"video\");\r\n      if (sender) sender.replaceTrack(stream);\r\n    });\r\n  };\r\n\r\n  // 화면 공유 과정\r\n  let changeProcess = (\r\n    streamTrack: MediaStreamTrack | undefined,\r\n    stream: MediaStream | null,\r\n    state: boolean\r\n  ) => {\r\n    state\r\n      ? socketClient.emit(\"share screen\", roomId, user.nickname)\r\n      : socketClient.emit(\"share screen off\", roomId);\r\n\r\n    setShareStream(stream);\r\n    trackChange(streamTrack);\r\n    setOtherShare((c) => ({ ...c, state, nickname: user.nickname! }));\r\n  };\r\n\r\n  //내 화면 공유 시작\r\n  let ShareStart = async () => {\r\n    if (otherShare.state) {\r\n      alert(\"다른 이가 화면공유 중입니다\");\r\n      return;\r\n    }\r\n    try {\r\n      let s_stream = await navigator.mediaDevices.getDisplayMedia({\r\n        video: true,\r\n      });\r\n      let streamTrack = s_stream.getVideoTracks()[0];\r\n\r\n      changeProcess(streamTrack, s_stream, true);\r\n\r\n      streamTrack.onended = () => {\r\n        changeProcess(stream?.getVideoTracks()[0], null, false);\r\n      };\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  // 다른 사용자가 화면 공유를 시작함\r\n  let otherScreenShare = (from: string) => {\r\n    setOtherShare((c) => ({ ...c, state: true, nickname: from }));\r\n  };\r\n\r\n  // 다른 사용자가 화면 공유를 종료함\r\n  let otherSCreenShareOFf = () => {\r\n    setShareStream(null);\r\n    setOtherShare((c) => ({ ...c, state: false, nickname: \"\" }));\r\n  };\r\n\r\n  // 화면 on/off\r\n  let toggleMedia = (type: \"audio\" | \"video\") => {\r\n    let state: boolean = false;\r\n    if (!localStreamRef.current) return;\r\n\r\n    localStreamRef.current\r\n      .getTracks()\r\n      .filter((track) => track.kind === type)\r\n      .forEach((track) => {\r\n        state = !track.enabled;\r\n        track.enabled = !track.enabled;\r\n      });\r\n\r\n    socketClient.emit(\"toggle track\", roomId, user.nickname, type, state);\r\n    type == \"audio\" ? setAudio(!audio) : setVideo(!video);\r\n  };\r\n\r\n  // 방을 떠남\r\n  let leaveRoom = () => {\r\n    if (user.nickname !== \"\") {\r\n      socketClient.emit(\"leave room\", user.nickname, roomId);\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  // useEffect ---------------\r\n\r\n  // 스트림 ref 설정\r\n  useEffect(() => {\r\n    if (stream) {\r\n      localRef.current!.srcObject = stream;\r\n      localStreamRef.current = stream;\r\n    }\r\n  }, [stream]);\r\n\r\n  // 화면공유 소켓 초기화\r\n  useEffect(() => {\r\n    socketClient.on(\"share screen\", otherScreenShare);\r\n    socketClient.on(\"share screen off\", otherSCreenShareOFf);\r\n\r\n    return () => {\r\n      socketClient.off(\"share screen\", otherScreenShare);\r\n      socketClient.on(\"share screen off\", otherSCreenShareOFf);\r\n    };\r\n  }, []);\r\n\r\n  // 상대가 화면 공유 시작시 상대방의 비디오 트랙을 shareSTream으로 설정\r\n  useEffect(() => {\r\n    let con = Object.entries(connects);\r\n    if (con.length && otherShare.state && otherShare.nickname !== \"\") {\r\n      let shareInfo = con.find(([from, info]) => from === otherShare.nickname);\r\n      if (shareInfo) {\r\n        let info = shareInfo[1];\r\n        info.pc.getReceivers().forEach((receive: any) => {\r\n          setShareStream(new MediaStream([receive.track]));\r\n        });\r\n      }\r\n    }\r\n  }, [connects, otherShare.nickname]);\r\n\r\n  // 공유 스트림이 변경되면 공유 ref.srcObject 변경\r\n  useEffect(() => {\r\n    if (shareStream && shareStreamRef.current) {\r\n      shareStreamRef.current.srcObject = shareStream;\r\n    }\r\n  }, [shareStream]);\r\n\r\n  return (\r\n    <div className=\"pwf-streamRoom_container\">\r\n      {/* modal */}\r\n      <Invitation\r\n        user={user}\r\n        show={showInvitation}\r\n        setShow={setShowInvitation}\r\n        participants={participants}\r\n      />\r\n      {/* 화면창 */}\r\n      <div className=\"pwf-screen_container\">\r\n        {/* p2p 연결화면들 */}\r\n        <ul className={otherShare.state ? \"share\" : \"user_screen_lists\"}>\r\n          {/* 내 화면 */}\r\n          <div className=\"user_video_box\">\r\n            {/* 유저 비디오 */}\r\n            <video\r\n              ref={localRef}\r\n              autoPlay\r\n              playsInline\r\n              className=\"user_video\"\r\n            ></video>\r\n            {/* 유저 정보 */}\r\n            <div className=\"user_info_box\">\r\n              <div>\r\n                <span>\r\n                  <i\r\n                    className={`fa-solid fa-microphone-lines${\r\n                      audio ? \"\" : \"-slash\"\r\n                    }`}\r\n                  ></i>\r\n                </span>\r\n                <span>\r\n                  <i\r\n                    className={`fa-solid fa-video${video ? \"\" : \"-slash\"}`}\r\n                  ></i>\r\n                </span>\r\n              </div>\r\n              <span>{user.nickname}</span>\r\n            </div>\r\n          </div>\r\n          {/* 다른 참가자 스트리밍 */}\r\n          {Object.entries(connects).map(([from, stream]) => (\r\n            <FriendStream from={from} stream={stream} />\r\n          ))}\r\n        </ul>\r\n        {/* 화면 공유시 공유창 */}\r\n        <div\r\n          className=\"share_screen_container\"\r\n          style={{ display: otherShare.state ? \"flex\" : \"none\" }}\r\n        >\r\n          <video\r\n            ref={shareStreamRef}\r\n            autoPlay\r\n            playsInline\r\n            className=\"share_video\"\r\n          ></video>\r\n          <span className=\"share_user_nickname\">{otherShare.nickname}</span>\r\n        </div>\r\n      </div>\r\n      {/* main footer */}\r\n      <footer className=\"streamRoom_footer\">\r\n        {/* 유저 음성 및 비디오 */}\r\n        <div className=\"user_video_options\">\r\n          {/* 음성 */}\r\n          <button onClick={() => toggleMedia(\"audio\")}>\r\n            <i\r\n              className={`fa-solid fa-microphone-lines${audio ? \"\" : \"-slash\"}`}\r\n            ></i>\r\n            <span>{audio ? \"음소거\" : \"음소거 해제\"}</span>\r\n          </button>\r\n          {/* 비디오 */}\r\n          <button\r\n            title={`비디오${video ? \"\" : \" 해제\"}`}\r\n            onClick={() => toggleMedia(\"video\")}\r\n          >\r\n            <i className={`fa-solid fa-video${video ? \"\" : \"-slash\"}`}></i>\r\n            <span>{video ? \"비디오\" : \"비디오 해제\"}</span>\r\n          </button>\r\n        </div>\r\n\r\n        {/* 비디오 메뉴 */}\r\n        <div className=\"room_options\">\r\n          {/* 방에 친구초대 */}\r\n          <button onClick={openModal}>\r\n            <i className=\"fa-solid fa-user-plus\"></i>\r\n            <span>초대</span>\r\n          </button>\r\n          {/* 화면공유 */}\r\n          <button\r\n            onClick={ShareStart}\r\n            style={{ color: otherShare.state ? \"var(--pwf-blue)\" : \"white\" }}\r\n          >\r\n            <i className=\"fa-brands fa-creative-commons-share\"></i>\r\n            <span>화면공유</span>\r\n          </button>\r\n          {/* 내 미디어 변경 */}\r\n          <button>\r\n            <i className=\"fa-solid fa-desktop\"></i>\r\n            <span>내 미디어</span>\r\n          </button>\r\n          {/* 메뉴 */}\r\n          <button onClick={() => emitter.emit(\"room menu\", true)}>\r\n            <i className=\"fa-brands fa-elementor\"></i>\r\n            <span>메뉴</span>\r\n          </button>\r\n        </div>\r\n        {/* 방 나가기 */}\r\n        <button className=\"room_exit\" onClick={leaveRoom}>\r\n          방나가기\r\n        </button>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}