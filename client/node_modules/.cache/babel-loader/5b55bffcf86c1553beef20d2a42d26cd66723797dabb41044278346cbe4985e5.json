{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashh1\\\\Desktop\\\\project\\\\PlayWithFriends\\\\client\\\\src\\\\components\\\\room\\\\menu\\\\chat.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { emitter } from \"../../../util/event\";\nimport \"../../../css/room/menu/chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatLi = ({\n  user,\n  content\n}) => {\n  // useEffect(() => {\n  //   console.log(me, user, content);\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n_c = ChatLi;\nexport const Chat = ({\n  user,\n  connects,\n  state\n}) => {\n  _s();\n  let [input, setInput] = useState(\"\");\n  let [conversation, setConversation] = useState([]);\n  let sendChat = async e => {\n    e.preventDefault();\n    let connect_list = Object.entries(connects);\n    if (input == \"\" || !connect_list.length) return;\n\n    // 내 인풋 전송하기\n    connect_list.forEach(([from, info]) => {\n      info.channel.send(JSON.stringify({\n        user,\n        content: input\n      }));\n    });\n    setConversation(c => [...c, {\n      user,\n      content: input\n    }]);\n    setInput(\"\");\n  };\n\n  // 상대방 채팅 인지\n  useEffect(() => {\n    const handler = ({\n      user,\n      content\n    }) => {\n      setConversation(c => [...c, {\n        user,\n        content\n      }]);\n    };\n    emitter.on(\"menu chat\", handler);\n    return () => {\n      emitter.off(\"menu chat\", handler);\n    };\n  }, []);\n  useEffect(() => {\n    console.log(conversation);\n  }, [conversation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu_chat_container\",\n    style: {\n      display: state ? \"flex\" : \"none\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"chat_conversations\",\n      children: conversation.length ? conversation.map(val => /*#__PURE__*/_jsxDEV(ChatLi, {\n        user: val.user,\n        content: val.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }, this)) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_form_container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"chat_form\",\n        onSubmit: sendChat,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"chat_input\",\n          spellCheck: \"false\",\n          placeholder: \"\\uCC44\\uD305\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n          value: input,\n          onChange: e => setInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chat_btn\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-paper-plane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"p4QG5y8DafhJU3R/IoBw4YZLhe0=\");\n_c2 = Chat;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChatLi\");\n$RefreshReg$(_c2, \"Chat\");","map":{"version":3,"names":["useEffect","useState","emitter","jsxDEV","_jsxDEV","ChatLi","user","content","fileName","_jsxFileName","lineNumber","columnNumber","_c","Chat","connects","state","_s","input","setInput","conversation","setConversation","sendChat","e","preventDefault","connect_list","Object","entries","length","forEach","from","info","channel","send","JSON","stringify","c","handler","on","off","console","log","className","style","display","children","map","val","onSubmit","type","spellCheck","placeholder","value","onChange","target","_c2","$RefreshReg$"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/components/room/menu/chat.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { FormSubmit, InputChange } from \"../../../types/event\";\r\nimport { emitter } from \"../../../util/event\";\r\n\r\nimport \"../../../css/room/menu/chat.css\";\r\nimport { User } from \"../../../types/user\";\r\n\r\ninterface ChatProps {\r\n  user: User;\r\n  connects: object;\r\n  state: boolean;\r\n}\r\n\r\ninterface ChatingInterface {\r\n  user: User;\r\n  content: string;\r\n}\r\n\r\nconst ChatLi = ({ user, content }: ChatingInterface) => {\r\n  // useEffect(() => {\r\n  //   console.log(me, user, content);\r\n  // }, []);\r\n  return <li></li>;\r\n};\r\n\r\nexport const Chat = ({ user, connects, state }: ChatProps) => {\r\n  let [input, setInput] = useState<string>(\"\");\r\n  let [conversation, setConversation] = useState<ChatingInterface[]>([]);\r\n\r\n  let sendChat = async (e: FormSubmit) => {\r\n    e.preventDefault();\r\n    let connect_list = Object.entries(connects);\r\n\r\n    if (input == \"\" || !connect_list.length) return;\r\n\r\n    // 내 인풋 전송하기\r\n    connect_list.forEach(([from, info]) => {\r\n      info.channel.send(JSON.stringify({ user, content: input }));\r\n    });\r\n\r\n    setConversation((c) => [...c, { user, content: input }]);\r\n    setInput(\"\");\r\n  };\r\n\r\n  // 상대방 채팅 인지\r\n  useEffect(() => {\r\n    const handler = ({ user, content }: ChatingInterface) => {\r\n      setConversation((c) => [...c, { user, content }]);\r\n    };\r\n\r\n    emitter.on(\"menu chat\", handler);\r\n\r\n    return () => {\r\n      emitter.off(\"menu chat\", handler);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(conversation);\r\n  }, [conversation]);\r\n\r\n  return (\r\n    <div\r\n      className=\"menu_chat_container\"\r\n      style={{ display: state ? \"flex\" : \"none\" }}\r\n    >\r\n      <ul className=\"chat_conversations\">\r\n        {conversation.length\r\n          ? conversation.map((val: ChatingInterface) => (\r\n              <ChatLi user={val.user} content={val.content} />\r\n            ))\r\n          : \"\"}\r\n      </ul>\r\n      <div className=\"chat_form_container\">\r\n        <form className=\"chat_form\" onSubmit={sendChat}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"chat_input\"\r\n            spellCheck=\"false\"\r\n            placeholder=\"채팅을 입력하세요.\"\r\n            value={input}\r\n            onChange={(e: InputChange) => setInput(e.target.value)}\r\n          />\r\n          <button className=\"chat_btn\">\r\n            <i className=\"fa-solid fa-paper-plane\"></i>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,OAAO,QAAQ,qBAAqB;AAE7C,OAAO,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAczC,MAAMC,MAAM,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAA0B,CAAC,KAAK;EACtD;EACA;EACA;EACA,oBAAOH,OAAA;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAClB,CAAC;AAACC,EAAA,GALIP,MAAM;AAOZ,OAAO,MAAMQ,IAAI,GAAGA,CAAC;EAAEP,IAAI;EAAEQ,QAAQ;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC5D,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAS,EAAE,CAAC;EAC5C,IAAI,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAqB,EAAE,CAAC;EAEtE,IAAIoB,QAAQ,GAAG,MAAOC,CAAa,IAAK;IACtCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIC,YAAY,GAAGC,MAAM,CAACC,OAAO,CAACZ,QAAQ,CAAC;IAE3C,IAAIG,KAAK,IAAI,EAAE,IAAI,CAACO,YAAY,CAACG,MAAM,EAAE;;IAEzC;IACAH,YAAY,CAACI,OAAO,CAAC,CAAC,CAACC,IAAI,EAAEC,IAAI,CAAC,KAAK;MACrCA,IAAI,CAACC,OAAO,CAACC,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QAAE5B,IAAI;QAAEC,OAAO,EAAEU;MAAM,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC;IAEFG,eAAe,CAAEe,CAAC,IAAK,CAAC,GAAGA,CAAC,EAAE;MAAE7B,IAAI;MAAEC,OAAO,EAAEU;IAAM,CAAC,CAAC,CAAC;IACxDC,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;;EAED;EACAlB,SAAS,CAAC,MAAM;IACd,MAAMoC,OAAO,GAAGA,CAAC;MAAE9B,IAAI;MAAEC;IAA0B,CAAC,KAAK;MACvDa,eAAe,CAAEe,CAAC,IAAK,CAAC,GAAGA,CAAC,EAAE;QAAE7B,IAAI;QAAEC;MAAQ,CAAC,CAAC,CAAC;IACnD,CAAC;IAEDL,OAAO,CAACmC,EAAE,CAAC,WAAW,EAAED,OAAO,CAAC;IAEhC,OAAO,MAAM;MACXlC,OAAO,CAACoC,GAAG,CAAC,WAAW,EAAEF,OAAO,CAAC;IACnC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENpC,SAAS,CAAC,MAAM;IACduC,OAAO,CAACC,GAAG,CAACrB,YAAY,CAAC;EAC3B,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,oBACEf,OAAA;IACEqC,SAAS,EAAC,qBAAqB;IAC/BC,KAAK,EAAE;MAAEC,OAAO,EAAE5B,KAAK,GAAG,MAAM,GAAG;IAAO,CAAE;IAAA6B,QAAA,gBAE5CxC,OAAA;MAAIqC,SAAS,EAAC,oBAAoB;MAAAG,QAAA,EAC/BzB,YAAY,CAACQ,MAAM,GAChBR,YAAY,CAAC0B,GAAG,CAAEC,GAAqB,iBACrC1C,OAAA,CAACC,MAAM;QAACC,IAAI,EAAEwC,GAAG,CAACxC,IAAK;QAACC,OAAO,EAAEuC,GAAG,CAACvC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAChD,CAAC,GACF;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACLP,OAAA;MAAKqC,SAAS,EAAC,qBAAqB;MAAAG,QAAA,eAClCxC,OAAA;QAAMqC,SAAS,EAAC,WAAW;QAACM,QAAQ,EAAE1B,QAAS;QAAAuB,QAAA,gBAC7CxC,OAAA;UACE4C,IAAI,EAAC,MAAM;UACXP,SAAS,EAAC,YAAY;UACtBQ,UAAU,EAAC,OAAO;UAClBC,WAAW,EAAC,oDAAY;UACxBC,KAAK,EAAElC,KAAM;UACbmC,QAAQ,EAAG9B,CAAc,IAAKJ,QAAQ,CAACI,CAAC,CAAC+B,MAAM,CAACF,KAAK;QAAE;UAAA3C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC,eACFP,OAAA;UAAQqC,SAAS,EAAC,UAAU;UAAAG,QAAA,eAC1BxC,OAAA;YAAGqC,SAAS,EAAC;UAAyB;YAAAjC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACK,EAAA,CAjEWH,IAAI;AAAAyC,GAAA,GAAJzC,IAAI;AAAA,IAAAD,EAAA,EAAA0C,GAAA;AAAAC,YAAA,CAAA3C,EAAA;AAAA2C,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}