{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashh1\\\\Desktop\\\\project\\\\PlayWithFriends\\\\client\\\\src\\\\page\\\\passwordReset.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"../css/passwordReset.css\";\nimport { auth_service } from \"../service/auth.service\";\nimport { emailValidate } from \"../validation/auth\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { AxiosError } from \"../error/error\";\nimport { Authcode } from \"../components/modal/authcode\";\nimport { emitter } from \"../util/event\";\nimport { createFormData } from \"../util/form\";\nimport { PwFind } from \"../components/modal/pwFind\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PasswordReset = () => {\n  _s();\n  let navigate = useNavigate();\n  let [email, setEmail] = useState(\"\");\n  let [error, setError] = useState({\n    state: false,\n    msg: \"\"\n  });\n  let [loading, setLoading] = useState(false);\n  let [show, setShow] = useState(false);\n  let [pwModal, setPwModal] = useState(false);\n  const EmailCheck = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      await emailValidate(email, true);\n      await auth_service.resendAuthcode(createFormData({\n        email\n      }));\n      emitter.emit(\"modal\", {\n        open: true,\n        type: \"authcode\"\n      });\n      setShow(true);\n    } catch (err) {\n      let {\n        path,\n        msg\n      } = AxiosError(err);\n      setError(c => ({\n        ...c,\n        state: true,\n        msg\n      }));\n    }\n    setLoading(false);\n  };\n  const pwChange = () => {\n    emitter.emit(\"modal\", {\n      open: true,\n      type: \"pwfind\"\n    });\n    setPwModal(true);\n  };\n  const finish = () => navigate(\"/login\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page password_reset_page\",\n    children: [/*#__PURE__*/_jsxDEV(Authcode, {\n      email: email,\n      show: show,\n      setShow: setShow,\n      callback: pwChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PwFind, {\n      email: email,\n      show: pwModal,\n      setshow: setPwModal,\n      callback: finish\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password_reset_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"password_reset_icon\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-lock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"password_reset_text\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uBCC0\\uACBD\\uD558\\uAE30 \\uC704\\uD574 \\uC774\\uBA54\\uC77C \\uC778\\uC99D\\uC744 \\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"password_reset_email_form\",\n        onSubmit: EmailCheck,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password_reset_email_input_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            spellCheck: false,\n            style: {\n              border: `1px solid var(--pwf-${error.state ? \"red\" : \"white\"})`\n            },\n            className: \"password_reset_email_input\",\n            value: email,\n            placeholder: \"\\uC774\\uBA54\\uC77C\",\n            onFocus: () => setError(c => ({\n              ...c,\n              state: false\n            })),\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: error.state ? \"flex\" : \"none\"\n            },\n            className: \"password_reset_error\",\n            children: error.msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"password_reset_btn\",\n          disabled: loading,\n          children: loading ? \"...진행중\" : \"인증하기\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        className: \"return_login\",\n        children: \"\\uB85C\\uADF8\\uC778 \\uD398\\uC774\\uC9C0\\uB85C \\uB3CC\\uC544\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordReset, \"AB3ouAETo96aMEbZcmlTCwpHrZw=\", false, function () {\n  return [useNavigate];\n});\n_c = PasswordReset;\nvar _c;\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"names":["useState","auth_service","emailValidate","Link","useNavigate","AxiosError","Authcode","emitter","createFormData","PwFind","jsxDEV","_jsxDEV","PasswordReset","_s","navigate","email","setEmail","error","setError","state","msg","loading","setLoading","show","setShow","pwModal","setPwModal","EmailCheck","e","preventDefault","resendAuthcode","emit","open","type","err","path","c","pwChange","finish","className","children","callback","fileName","_jsxFileName","lineNumber","columnNumber","setshow","onSubmit","spellCheck","style","border","value","placeholder","onFocus","onChange","target","display","disabled","to","_c","$RefreshReg$"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/page/passwordReset.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"../css/passwordReset.css\";\r\nimport { FormSubmit, InputChange } from \"../types/event\";\r\nimport { auth_service } from \"../service/auth.service\";\r\nimport { emailValidate } from \"../validation/auth\";\r\n\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { AxiosError } from \"../error/error\";\r\nimport { Authcode } from \"../components/modal/authcode\";\r\nimport { emitter } from \"../util/event\";\r\nimport { createFormData } from \"../util/form\";\r\nimport { PwFind } from \"../components/modal/pwFind\";\r\n\r\nexport const PasswordReset = () => {\r\n  let navigate = useNavigate();\r\n  let [email, setEmail] = useState<string>(\"\");\r\n  let [error, setError] = useState<{ state: boolean; msg: string }>({\r\n    state: false,\r\n    msg: \"\",\r\n  });\r\n  let [loading, setLoading] = useState<boolean>(false);\r\n  let [show, setShow] = useState<boolean>(false);\r\n  let [pwModal, setPwModal] = useState<boolean>(false);\r\n\r\n  const EmailCheck = async (e: FormSubmit) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      await emailValidate(email, true);\r\n      await auth_service.resendAuthcode(createFormData({ email }));\r\n      emitter.emit(\"modal\", { open: true, type: \"authcode\" });\r\n      setShow(true);\r\n    } catch (err) {\r\n      let { path, msg } = AxiosError(err);\r\n      setError((c) => ({ ...c, state: true, msg }));\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const pwChange = () => {\r\n    emitter.emit(\"modal\", { open: true, type: \"pwfind\" });\r\n    setPwModal(true);\r\n  };\r\n\r\n  const finish = () => navigate(\"/login\");\r\n\r\n  return (\r\n    <div className=\"page password_reset_page\">\r\n      {/* 인증코드 모달 */}\r\n      <Authcode\r\n        email={email}\r\n        show={show}\r\n        setShow={setShow}\r\n        callback={pwChange}\r\n      />\r\n      {/* 새 비밀번호 모달 */}\r\n      <PwFind\r\n        email={email}\r\n        show={pwModal}\r\n        setshow={setPwModal}\r\n        callback={finish}\r\n      />\r\n\r\n      <div className=\"password_reset_container\">\r\n        {/* icon */}\r\n        <span className=\"password_reset_icon\">\r\n          <i className=\"fa-solid fa-lock\"></i>\r\n        </span>\r\n\r\n        <span className=\"password_reset_text\">\r\n          비밀번호를 변경하기 위해 이메일 인증을 하세요.\r\n        </span>\r\n\r\n        <form className=\"password_reset_email_form\" onSubmit={EmailCheck}>\r\n          <div className=\"password_reset_email_input_box\">\r\n            <input\r\n              type=\"email\"\r\n              spellCheck={false}\r\n              style={{\r\n                border: `1px solid var(--pwf-${error.state ? \"red\" : \"white\"})`,\r\n              }}\r\n              className=\"password_reset_email_input\"\r\n              value={email}\r\n              placeholder=\"이메일\"\r\n              onFocus={() => setError((c) => ({ ...c, state: false }))}\r\n              onChange={(e: InputChange) => setEmail(e.target.value)}\r\n            />\r\n            <span\r\n              style={{ display: error.state ? \"flex\" : \"none\" }}\r\n              className=\"password_reset_error\"\r\n            >\r\n              {error.msg}\r\n            </span>\r\n          </div>\r\n\r\n          <button className=\"password_reset_btn\" disabled={loading}>\r\n            {loading ? \"...진행중\" : \"인증하기\"}\r\n          </button>\r\n        </form>\r\n\r\n        {/* <div> */}\r\n        <Link to=\"/login\" className=\"return_login\">\r\n          로그인 페이지로 돌아가기\r\n        </Link>\r\n        {/* </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}