{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashh1\\\\Desktop\\\\project\\\\PlayWithFriends\\\\client\\\\src\\\\components\\\\room\\\\menu\\\\chat.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { emitter } from \"../../../util/event\";\nimport \"../../../css/room/menu/chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatLi = ({\n  me,\n  user,\n  content\n}) => {\n  // useEffect(() => {\n  //   console.log(me, user, content);\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n_c = ChatLi;\nexport const Chat = ({\n  user,\n  connects\n}) => {\n  _s();\n  let [input, setInput] = useState(\"\");\n  let [conversation, setConversation] = useState([]);\n  let sendChat = async e => {\n    e.preventDefault();\n    let connect_list = Object.entries(connects);\n    if (input == \"\" || !connect_list.length) return;\n\n    // 내 인풋 전송하기\n    connect_list.forEach(([from, info]) => {\n      info.channel.send(JSON.stringify({\n        user,\n        content: input\n      }));\n    });\n    setConversation(c => [...c, {\n      user,\n      content: input\n    }]);\n    setInput(\"\");\n  };\n  useEffect(() => {\n    const handler = ({\n      user,\n      content\n    }) => {\n      console.log(user.nickname, content);\n    };\n    emitter.on(\"menu chating\", handler);\n    return () => {\n      emitter.off(\"menu chating\", handler);\n    };\n  }, []);\n  useEffect(() => {\n    Object.entries(connects).forEach(([from, info]) => {\n      console.log(\"connect hi\");\n      info.channel.onmessage = e => {\n        let data = JSON.parse(e.data);\n        console.log(data);\n        emitter.emit(\"menu chating\", data);\n      };\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu_chat_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"chat_conversations\",\n      children: conversation.length ? conversation.map(val => /*#__PURE__*/_jsxDEV(ChatLi, {\n        user: val.user,\n        me: val.user.nickname == user.nickname,\n        content: val.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this)) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_form_container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"chat_form\",\n        onSubmit: sendChat,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"chat_input\",\n          spellCheck: \"false\",\n          placeholder: \"\\uCC44\\uD305\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n          value: input,\n          onChange: e => setInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chat_btn\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-paper-plane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"p4QG5y8DafhJU3R/IoBw4YZLhe0=\");\n_c2 = Chat;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChatLi\");\n$RefreshReg$(_c2, \"Chat\");","map":{"version":3,"names":["useEffect","useState","emitter","jsxDEV","_jsxDEV","ChatLi","me","user","content","fileName","_jsxFileName","lineNumber","columnNumber","_c","Chat","connects","_s","input","setInput","conversation","setConversation","sendChat","e","preventDefault","connect_list","Object","entries","length","forEach","from","info","channel","send","JSON","stringify","c","handler","console","log","nickname","on","off","onmessage","data","parse","emit","className","children","map","val","onSubmit","type","spellCheck","placeholder","value","onChange","target","_c2","$RefreshReg$"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/components/room/menu/chat.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { FormSubmit, InputChange } from \"../../../types/event\";\r\nimport { emitter } from \"../../../util/event\";\r\n\r\nimport \"../../../css/room/menu/chat.css\";\r\nimport { User } from \"../../../types/user\";\r\n\r\ninterface ChatProps {\r\n  user: User;\r\n  connects: object;\r\n}\r\n\r\ninterface ChatingInterface {\r\n  me?: boolean;\r\n  user: User;\r\n  content: string;\r\n}\r\n\r\nconst ChatLi = ({ me, user, content }: ChatingInterface) => {\r\n  // useEffect(() => {\r\n  //   console.log(me, user, content);\r\n  // }, []);\r\n  return <li></li>;\r\n};\r\n\r\nexport const Chat = ({ user, connects }: ChatProps) => {\r\n  let [input, setInput] = useState<string>(\"\");\r\n  let [conversation, setConversation] = useState<ChatingInterface[]>([]);\r\n\r\n  let sendChat = async (e: FormSubmit) => {\r\n    e.preventDefault();\r\n    let connect_list = Object.entries(connects);\r\n\r\n    if (input == \"\" || !connect_list.length) return;\r\n\r\n    // 내 인풋 전송하기\r\n    connect_list.forEach(([from, info]) => {\r\n      info.channel.send(JSON.stringify({ user, content: input }));\r\n    });\r\n\r\n    setConversation((c) => [...c, { user, content: input }]);\r\n    setInput(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handler = ({ user, content }: ChatingInterface) => {\r\n      console.log(user.nickname, content);\r\n    };\r\n\r\n    emitter.on(\"menu chating\", handler);\r\n\r\n    return () => {\r\n      emitter.off(\"menu chating\", handler);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    Object.entries(connects).forEach(([from, info]) => {\r\n      console.log(\"connect hi\");\r\n      info.channel.onmessage = (e: any) => {\r\n        let data = JSON.parse(e.data);\r\n        console.log(data);\r\n        emitter.emit(\"menu chating\", data);\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"menu_chat_container\">\r\n      <ul className=\"chat_conversations\">\r\n        {conversation.length\r\n          ? conversation.map((val: ChatingInterface) => (\r\n              <ChatLi\r\n                user={val.user}\r\n                me={val.user.nickname == user.nickname}\r\n                content={val.content}\r\n              />\r\n            ))\r\n          : \"\"}\r\n      </ul>\r\n      <div className=\"chat_form_container\">\r\n        <form className=\"chat_form\" onSubmit={sendChat}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"chat_input\"\r\n            spellCheck=\"false\"\r\n            placeholder=\"채팅을 입력하세요.\"\r\n            value={input}\r\n            onChange={(e: InputChange) => setInput(e.target.value)}\r\n          />\r\n          <button className=\"chat_btn\">\r\n            <i className=\"fa-solid fa-paper-plane\"></i>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}