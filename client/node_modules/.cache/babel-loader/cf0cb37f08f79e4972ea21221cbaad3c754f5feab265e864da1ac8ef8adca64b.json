{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashh1\\\\Desktop\\\\project\\\\PlayWithFriends\\\\client\\\\src\\\\components\\\\friend.tsx\";\nimport \"../css/friend.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// 친구요청 보낸 친구들 리스트\n// export const RequestFriendLi = (props: { data: User }) => {\n//   let dispatch = useDispatch<AppDispatch>();\n//   let user = useSelector((state: RootState) => state.user);\n\n//   const handleRequestFriend = async (response: boolean) => {\n//     try {\n//       let formdata = createFormData({\n//         receiver: user.nickname,\n//         sender: props.data.nickname,\n//         response,\n//       });\n//       dispatch(userAction.requestFriendHandle(formdata));\n//     } catch (err) {\n//       alert(err);\n//     }\n//   };\n\n//   return (\n//     <li className=\"pwf_req_friend_li\">\n//       <div className=\"pwf_req_friend_info\">\n//         <span className=\"pwf_req_friend_img\">\n//           <img src={props.data.profile_img} />\n//         </span>\n//         <span>{props.data.nickname} </span>\n//       </div>\n//       <div className=\"pwf_req_friend_btn_box\">\n//         <button\n//           className=\"friend_req_accept\"\n//           onClick={() => handleRequestFriend(true)}\n//         >\n//           수락\n//         </button>\n//         <button\n//           className=\"friend_req_refuse\"\n//           onClick={() => handleRequestFriend(false)}\n//         >\n//           거절\n//         </button>\n//       </div>\n//     </li>\n//   );\n// };\n\n// 친구 관련 모달\nexport const FriendModal = () => {\n  // let user = useSelector((state: RootState) => state.user);\n  // let [open, setOpen] = useState<boolean>(false);\n  // let [error, setError] = useState<{ state: boolean; msg: string }>({\n  //   state: false,\n  //   msg: \"\",\n  // });\n  // let [nickname, setNickname] = useState<string>(\"\");\n\n  // // 친구요청\n  // const requestFriend = async (e: FormSubmit) => {\n  //   e.preventDefault();\n\n  //   try {\n  //     let formdata = createFormData({\n  //       res_nickname: nickname,\n  //       req_nickname: user.nickname,\n  //       state: false,\n  //     });\n  //     let res = await user_service.requestFriend(formdata);\n  //     alert(`${nickname}에게 친구요청이 전송되었습니다`);\n  //     setNickname(\"\");\n  //   } catch (err) {\n  //     let { msg } = errorHandling(err);\n  //     msg = !msg ? \"친구이거나 중복된 친구요청입니다.\" : msg;\n  //     setError((c) => ({ ...c, state: true, msg }));\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   const handler = (open: boolean) => setOpen(open);\n  //   emitter.on(\"friend modal\", handler);\n\n  //   return () => {\n  //     emitter.off(\"friend modal\", handler);\n  //   };\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pwf_friend_modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"friend_content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"friend_search_box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"friend_request_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uCE5C\\uAD6C\\uC694\\uCCAD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"request_friends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_c = FriendModal;\nvar _c;\n$RefreshReg$(_c, \"FriendModal\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","FriendModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/components/friend.tsx"],"sourcesContent":["import \"../css/friend.css\";\r\nimport { useState, useEffect, ChangeEvent } from \"react\";\r\nimport { emitter } from \"../util/event\";\r\nimport { FormSubmit, InputChange } from \"../types/event\";\r\nimport { user_service } from \"../service/userservice\";\r\nimport { createFormData } from \"../util/form\";\r\nimport { errorHandling } from \"../error/error\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState, AppDispatch } from \"../context/store\";\r\nimport { User } from \"../types/user\";\r\nimport { userAction } from \"../context/actions/userAction\";\r\n\r\n// 친구요청 보낸 친구들 리스트\r\n// export const RequestFriendLi = (props: { data: User }) => {\r\n//   let dispatch = useDispatch<AppDispatch>();\r\n//   let user = useSelector((state: RootState) => state.user);\r\n\r\n//   const handleRequestFriend = async (response: boolean) => {\r\n//     try {\r\n//       let formdata = createFormData({\r\n//         receiver: user.nickname,\r\n//         sender: props.data.nickname,\r\n//         response,\r\n//       });\r\n//       dispatch(userAction.requestFriendHandle(formdata));\r\n//     } catch (err) {\r\n//       alert(err);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <li className=\"pwf_req_friend_li\">\r\n//       <div className=\"pwf_req_friend_info\">\r\n//         <span className=\"pwf_req_friend_img\">\r\n//           <img src={props.data.profile_img} />\r\n//         </span>\r\n//         <span>{props.data.nickname} </span>\r\n//       </div>\r\n//       <div className=\"pwf_req_friend_btn_box\">\r\n//         <button\r\n//           className=\"friend_req_accept\"\r\n//           onClick={() => handleRequestFriend(true)}\r\n//         >\r\n//           수락\r\n//         </button>\r\n//         <button\r\n//           className=\"friend_req_refuse\"\r\n//           onClick={() => handleRequestFriend(false)}\r\n//         >\r\n//           거절\r\n//         </button>\r\n//       </div>\r\n//     </li>\r\n//   );\r\n// };\r\n\r\n// 친구 관련 모달\r\nexport const FriendModal = () => {\r\n  // let user = useSelector((state: RootState) => state.user);\r\n  // let [open, setOpen] = useState<boolean>(false);\r\n  // let [error, setError] = useState<{ state: boolean; msg: string }>({\r\n  //   state: false,\r\n  //   msg: \"\",\r\n  // });\r\n  // let [nickname, setNickname] = useState<string>(\"\");\r\n\r\n  // // 친구요청\r\n  // const requestFriend = async (e: FormSubmit) => {\r\n  //   e.preventDefault();\r\n\r\n  //   try {\r\n  //     let formdata = createFormData({\r\n  //       res_nickname: nickname,\r\n  //       req_nickname: user.nickname,\r\n  //       state: false,\r\n  //     });\r\n  //     let res = await user_service.requestFriend(formdata);\r\n  //     alert(`${nickname}에게 친구요청이 전송되었습니다`);\r\n  //     setNickname(\"\");\r\n  //   } catch (err) {\r\n  //     let { msg } = errorHandling(err);\r\n  //     msg = !msg ? \"친구이거나 중복된 친구요청입니다.\" : msg;\r\n  //     setError((c) => ({ ...c, state: true, msg }));\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   const handler = (open: boolean) => setOpen(open);\r\n  //   emitter.on(\"friend modal\", handler);\r\n\r\n  //   return () => {\r\n  //     emitter.off(\"friend modal\", handler);\r\n  //   };\r\n  // }, []);\r\n\r\n  return (\r\n    <div className=\"pwf_friend_modal\">\r\n      <div className=\"friend_content\">\r\n        {/* 친추요청 검색 */}\r\n        <div className=\"friend_search_box\">\r\n          {/* <form className=\"friend_search_form\" onSubmit={requestFriend}>\r\n              <input\r\n                type=\"text\"\r\n                style={{\r\n                  border: `1px solid var(--pwf-${\r\n                    error.state ? \"red\" : \"gray\"\r\n                  })`,\r\n                }}\r\n                value={nickname}\r\n                onChange={(e: InputChange) => {\r\n                  setNickname(e.target.value);\r\n                  setError((c) => ({ ...c, state: false }));\r\n                }}\r\n                placeholder=\"친구요청 닉네임\"\r\n                className=\"friend_search_input\"\r\n              />\r\n            </form> */}\r\n          {/* <span\r\n              className=\"friend_search_error\"\r\n              style={{ display: error.state ? \"flex\" : \"none\" }}\r\n            >\r\n              {error.msg}\r\n            </span> */}\r\n        </div>\r\n        {/* 친추 리스트 */}\r\n        <div className=\"friend_request_box\">\r\n          <label>친구요청</label>\r\n          <ul className=\"request_friends\">\r\n            {/* {user.request_friends && user.request_friends.length ? (\r\n                user.request_friends.map((val) => (\r\n                  <RequestFriendLi data={val} />\r\n                ))\r\n              ) : (\r\n                <p>친구요청이 없습니다.</p>\r\n              )} */}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAO,mBAAmB;AAAC,SAAAA,MAAA,IAAAC,OAAA;AAY3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAC/B;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,oBACED,OAAA;IAAKE,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/BH,OAAA;MAAKE,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAE7BH,OAAA;QAAKE,SAAS,EAAC;MAAmB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAwB7B,CAAC,eAENP,OAAA;QAAKE,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBACjCH,OAAA;UAAAG,QAAA,EAAO;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnBP,OAAA;UAAIE,SAAS,EAAC;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQ3B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GAnFWP,WAAW;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}