{"ast":null,"code":"import { Room } from \"livekit-client\";\n\n// 방 연결\nexport let connectRoom = async token => {\n  try {\n    const room = await new Room();\n    await room.connect(\"http://localhost:7880\", token);\n    return room;\n  } catch (err) {\n    throw err;\n  }\n};\n\n// 유저 스트림 가져오기\nexport let getStream = async id => {\n  try {\n    let stream = await navigator.mediaDevices.getUserMedia({\n      video: {\n        deviceId: id\n      },\n      audio: true\n    });\n    return stream;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n// 내 관련 미디어 가져오기\nexport let getMyMedia = async () => {\n  try {\n    let devices = await navigator.mediaDevices.enumerateDevices();\n    return devices;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n// 화면 공유 미디어 가져오기\nexport let getShareMedia = async () => {\n  try {\n    let devices = await navigator.mediaDevices.enumerateDevices();\n    return devices;\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"names":["Room","connectRoom","token","room","connect","err","getStream","id","stream","navigator","mediaDevices","getUserMedia","video","deviceId","audio","console","log","getMyMedia","devices","enumerateDevices","getShareMedia"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/util/stream.ts"],"sourcesContent":["import {\r\n  Track,\r\n  Room,\r\n  RemoteParticipant,\r\n  RemoteTrackPublication,\r\n  createLocalTracks,\r\n  LocalVideoTrack,\r\n} from \"livekit-client\";\r\n\r\n// 방 연결\r\nexport let connectRoom = async (token: string) => {\r\n  try {\r\n    const room = await new Room();\r\n    await room.connect(\"http://localhost:7880\", token);\r\n    return room;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\n// 유저 스트림 가져오기\r\nexport let getStream = async (id?: string) => {\r\n  try {\r\n    let stream = await navigator.mediaDevices.getUserMedia({\r\n      video: { deviceId: id },\r\n      audio: true,\r\n    });\r\n    return stream;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n// 내 관련 미디어 가져오기\r\nexport let getMyMedia = async () => {\r\n  try {\r\n    let devices = await navigator.mediaDevices.enumerateDevices();\r\n    return devices;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n// 화면 공유 미디어 가져오기\r\nexport let getShareMedia = async () => {\r\n  try {\r\n    let devices = await navigator.mediaDevices.enumerateDevices();\r\n    return devices;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAEEA,IAAI,QAKC,gBAAgB;;AAEvB;AACA,OAAO,IAAIC,WAAW,GAAG,MAAOC,KAAa,IAAK;EAChD,IAAI;IACF,MAAMC,IAAI,GAAG,MAAM,IAAIH,IAAI,CAAC,CAAC;IAC7B,MAAMG,IAAI,CAACC,OAAO,CAAC,uBAAuB,EAAEF,KAAK,CAAC;IAClD,OAAOC,IAAI;EACb,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZ,MAAMA,GAAG;EACX;AACF,CAAC;;AAED;AACA,OAAO,IAAIC,SAAS,GAAG,MAAOC,EAAW,IAAK;EAC5C,IAAI;IACF,IAAIC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MACrDC,KAAK,EAAE;QAAEC,QAAQ,EAAEN;MAAG,CAAC;MACvBO,KAAK,EAAE;IACT,CAAC,CAAC;IACF,OAAON,MAAM;EACf,CAAC,CAAC,OAAOH,GAAG,EAAE;IACZU,OAAO,CAACC,GAAG,CAACX,GAAG,CAAC;EAClB;AACF,CAAC;;AAED;AACA,OAAO,IAAIY,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACF,IAAIC,OAAO,GAAG,MAAMT,SAAS,CAACC,YAAY,CAACS,gBAAgB,CAAC,CAAC;IAC7D,OAAOD,OAAO;EAChB,CAAC,CAAC,OAAOb,GAAG,EAAE;IACZU,OAAO,CAACC,GAAG,CAACX,GAAG,CAAC;EAClB;AACF,CAAC;;AAED;AACA,OAAO,IAAIe,aAAa,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,IAAIF,OAAO,GAAG,MAAMT,SAAS,CAACC,YAAY,CAACS,gBAAgB,CAAC,CAAC;IAC7D,OAAOD,OAAO;EAChB,CAAC,CAAC,OAAOb,GAAG,EAAE;IACZU,OAAO,CAACC,GAAG,CAACX,GAAG,CAAC;EAClB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}