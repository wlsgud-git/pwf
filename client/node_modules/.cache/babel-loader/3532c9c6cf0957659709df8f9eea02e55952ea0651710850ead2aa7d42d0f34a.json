{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashh1\\\\Desktop\\\\project\\\\PlayWithFriends\\\\client\\\\src\\\\page\\\\streamroom.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport \"../css/streamRoom.css\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { socketClient } from \"../util/socket\";\nimport { stream_service } from \"../service/streamservice\";\nimport { useSelector } from \"react-redux\";\nimport { Chat } from \"../components/room/menuchat\";\nimport { MenuParticipants } from \"../components/room/participants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StreamRoom = () => {\n  _s();\n  let user = useSelector(state => state.user);\n  let {\n    id\n  } = useParams();\n  let navigate = useNavigate();\n  let roomId = `room${id}`;\n\n  // ref\n  let localRef = useRef(null);\n  let localStreamRef = useRef(null);\n  let peerConnects = useRef({});\n  let dataChannelsRef = useRef({});\n\n  // state\n  let [connectList, setConnectList] = useState({});\n  let [room, setRoom] = useState({});\n  let [menu, setMenu] = useState({\n    state: false,\n    type: \"participants\"\n  }); //메뉴\n  let [audio, setAudio] = useState(true); //오디오\n  let [video, setVideo] = useState(true); //비디오\n\n  // 채팅 인풋\n  let [input, setInput] = useState(\"\");\n\n  // 채팅관련 ----------------------------------\n  let chatSubmit = async e => {\n    e.preventDefault();\n    if (input == \"\") return;\n    Object.entries(dataChannelsRef.current).forEach(([nickname, channel]) => {\n      if (channel.readyState == \"open\") channel.send(input);\n    });\n    setInput(\"\");\n  };\n\n  // 방 입장/퇴장 관련 --------------------------\n  let joinRoomHandler = who => {\n    // setConnectList((c) => [...c, { from: who, stream: new MediaStream() }]);\n  };\n\n  // room leave 처리\n  let leaveRoomHandler = who => {\n    delete peerConnects.current[who];\n    // setConnectList((c) => c.filter((val) => val.from !== who));\n  };\n\n  // 방을 떠남\n  let leaveRoom = () => {\n    if (user.nickname !== \"\") {\n      socketClient.emit(\"leave room\", user.nickname, roomId);\n      navigate(\"/\");\n    }\n  };\n\n  // 비디오/오디오 상태 ----------------------------\n  // 화면 on/off\n  let toggleMedia = type => {\n    let state = false;\n    if (!localStreamRef.current) return;\n    localStreamRef.current.getTracks().filter(track => track.kind === type).forEach(track => {\n      state = !track.enabled;\n      track.enabled = !track.enabled;\n    });\n    socketClient.emit(\"toggle track\", roomId, user.nickname, type, state);\n    type == \"audio\" ? setAudio(!audio) : setVideo(!video);\n  };\n\n  // 상대 화면 on/off\n  let trackHandler = (to, type, state) => {\n    setConnectList(c => {\n      let stInfo = c[to];\n      type == \"audio\" ? stInfo.audio = state : stInfo.video = state;\n      return {\n        ...c,\n        [to]: stInfo\n      };\n    });\n  };\n\n  // p2p연결 관련 --------------------------------\n  // connect 연결\n  let peerConnect = async (to, stream) => {\n    let pc = new RTCPeerConnection();\n    const channel = pc.createDataChannel(\"chat\");\n    stream === null || stream === void 0 ? void 0 : stream.getTracks().forEach(track => {\n      pc.addTrack(track, stream);\n    });\n    pc.onicecandidate = e => {\n      if (e.candidate) socketClient.emit(\"candidate\", user.nickname, to, e.candidate);\n    };\n    pc.ontrack = e => {\n      let kind = e.track.kind;\n      setConnectList(c => {\n        let stream = c[to];\n        if (!stream.stream) stream.stream = new MediaStream();\n        if (!stream.stream.getTracks().includes(e.track)) stream.stream.addTrack(e.track);\n        kind == \"audio\" ? stream.audio = e.track.enabled : stream.video = e.track.enabled;\n        return {\n          ...c,\n          [to]: stream\n        };\n      });\n    };\n    channel.onmessage = e => {\n      console.log(`send to ${to}`, e);\n    };\n    channel.onopen = () => {\n      console.log(`DataChannel open with ${to}`);\n    };\n    let offer = await pc.createOffer();\n    await pc.setLocalDescription(offer);\n    socketClient.emit(\"offer\", user.nickname, to, offer);\n    peerConnects.current[to] = pc;\n    dataChannelsRef.current[to] = channel;\n  };\n\n  // 연결 시작\n  let start = async () => {\n    try {\n      var _room$participants;\n      let stream = await navigator.mediaDevices.getUserMedia({\n        video,\n        audio\n      });\n      localRef.current.srcObject = stream;\n      localStreamRef.current = stream;\n\n      // 트랙을 더해줌\n      (_room$participants = room.participants) === null || _room$participants === void 0 ? void 0 : _room$participants.map(async val => {\n        if (val.nickname !== user.nickname) await peerConnect(val.nickname, stream);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // offer처리\n  let offerHandler = async (from, offer) => {\n    try {\n      var _peerConnects$current, _peerConnects$current2;\n      if (!peerConnects.current[from]) peerConnect(from);\n      await ((_peerConnects$current = peerConnects.current[from]) === null || _peerConnects$current === void 0 ? void 0 : _peerConnects$current.setRemoteDescription(new RTCSessionDescription(offer)));\n      if (((_peerConnects$current2 = peerConnects.current[from]) === null || _peerConnects$current2 === void 0 ? void 0 : _peerConnects$current2.signalingState) == \"have-remote-offer\" && user.nickname !== \"\") {\n        var _peerConnects$current3, _peerConnects$current4;\n        const answer = await ((_peerConnects$current3 = peerConnects.current[from]) === null || _peerConnects$current3 === void 0 ? void 0 : _peerConnects$current3.createAnswer());\n        await ((_peerConnects$current4 = peerConnects.current[from]) === null || _peerConnects$current4 === void 0 ? void 0 : _peerConnects$current4.setLocalDescription(answer));\n        socketClient.emit(\"answer\", user.nickname, from, answer);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // answer 처리\n  let answerHandler = async (from, answer) => {\n    try {\n      var _peerConnects$current5, _peerConnects$current6;\n      if (!((_peerConnects$current5 = peerConnects.current[from]) !== null && _peerConnects$current5 !== void 0 && _peerConnects$current5.currentRemoteDescription)) await ((_peerConnects$current6 = peerConnects.current[from]) === null || _peerConnects$current6 === void 0 ? void 0 : _peerConnects$current6.setRemoteDescription(answer));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // candidate처리\n  let candidateHandler = async (from, candidate) => {\n    var _peerConnects$current7;\n    const iceCandidate = new RTCIceCandidate(candidate);\n    await ((_peerConnects$current7 = peerConnects.current[from]) === null || _peerConnects$current7 === void 0 ? void 0 : _peerConnects$current7.addIceCandidate(iceCandidate));\n  };\n\n  // useEffect -----------------------------\n  // 시작시 방 정보 얻어옴\n  useEffect(() => {\n    let data = async () => {\n      try {\n        let room = await stream_service.getStreamRoomData(id);\n        setRoom(room.room);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    data();\n  }, []);\n  useEffect(() => {\n    console.log(room);\n  }, [room]);\n\n  // 룸정보가 오면 start시작\n  useEffect(() => {\n    var _room$participants2;\n    if ((_room$participants2 = room.participants) !== null && _room$participants2 !== void 0 && _room$participants2.length) {\n      var _room$participants3;\n      (_room$participants3 = room.participants) === null || _room$participants3 === void 0 ? void 0 : _room$participants3.map(val => {\n        if (val.nickname !== user.nickname) {\n          peerConnect(val.nickname);\n          setConnectList(c => ({\n            ...c,\n            [val.nickname]: {\n              stream: new MediaStream()\n            }\n          }));\n        }\n      });\n    }\n    start();\n  }, [room]);\n\n  // 소켓 연결\n  useEffect(() => {\n    socketClient.emit(\"join\", `room${id}`);\n    socketClient.on(\"other join\", joinRoomHandler);\n    socketClient.on(\"offer\", offerHandler); //signaling offer\n    socketClient.on(\"answer\", answerHandler); //signaling answer\n    socketClient.on(\"candidate\", candidateHandler); //signaling candidate\n    socketClient.on(\"leave room\", leaveRoomHandler); // other user leave room\n    socketClient.on(\"toggle track\", trackHandler);\n    return () => {\n      socketClient.on(\"other join\", joinRoomHandler);\n      socketClient.off(\"offer\", offerHandler);\n      socketClient.off(\"answer\", answerHandler);\n      socketClient.off(\"candidate\", candidateHandler);\n      socketClient.off(\"leave room\", leaveRoomHandler);\n      socketClient.off(\"toggle track\", trackHandler);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page streamRoom_page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pwf-streamRoom_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"user_screen_lists\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user_video_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: localRef,\n            autoPlay: true,\n            playsInline: true,\n            className: \"user_video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user_info_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: `fa-solid fa-microphone-lines${audio ? \"\" : \"-slash\"}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: `fa-solid fa-video${video ? \"\" : \"-slash\"}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: user.nickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), Object.entries(connectList).map(([from, stream]) => /*#__PURE__*/_jsxDEV(StreamBox, {\n          from: from,\n          stream: stream\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"streamRoom_footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user_video_options\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleMedia(\"audio\"),\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: `fa-solid fa-microphone-lines${audio ? \"\" : \"-slash\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: audio ? \"음소거\" : \"음소거 해제\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            title: `비디오${video ? \"\" : \" 해제\"}`,\n            onClick: () => toggleMedia(\"video\"),\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: `fa-solid fa-video${video ? \"\" : \"-slash\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: video ? \"비디오\" : \"비디오 해제\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room_options\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-user-plus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uCD08\\uB300\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-desktop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD654\\uBA74\\uACF5\\uC720\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setMenu(c => ({\n              ...c,\n              state: true\n            })),\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-brands fa-elementor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uBA54\\uB274\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"room_exit\",\n          onClick: leaveRoom,\n          children: \"\\uBC29\\uB098\\uAC00\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu_container\",\n      style: {\n        display: menu.state ? \"flex\" : \"none\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"menu_close_btn\",\n        onClick: () => setMenu(c => ({\n          ...c,\n          state: false\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pwf-streamRoom_menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pwf-streamRoom_menu_btn_container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pwf-streamRoom_menu_btn_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setMenu(c => ({\n                ...c,\n                type: \"participants\"\n              })),\n              children: \"\\uCC38\\uAC00\\uC790\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setMenu(c => ({\n                ...c,\n                type: \"chat\"\n              })),\n              children: \"\\uCC44\\uD305\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"pwf-streamRoom_menu_content\",\n          children: menu.type == \"chat\" ? /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 36\n          }, this) : /*#__PURE__*/_jsxDEV(MenuParticipants, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n};\n_s(StreamRoom, \"sudoiXhVF9jrvw8zdpuDAFEjJ3M=\", false, function () {\n  return [useSelector, useParams, useNavigate];\n});\n_c = StreamRoom;\nvar _c;\n$RefreshReg$(_c, \"StreamRoom\");","map":{"version":3,"names":["useEffect","useRef","useState","useNavigate","useParams","socketClient","stream_service","useSelector","Chat","MenuParticipants","jsxDEV","_jsxDEV","StreamRoom","_s","user","state","id","navigate","roomId","localRef","localStreamRef","peerConnects","dataChannelsRef","connectList","setConnectList","room","setRoom","menu","setMenu","type","audio","setAudio","video","setVideo","input","setInput","chatSubmit","e","preventDefault","Object","entries","current","forEach","nickname","channel","readyState","send","joinRoomHandler","who","leaveRoomHandler","leaveRoom","emit","toggleMedia","getTracks","filter","track","kind","enabled","trackHandler","to","c","stInfo","peerConnect","stream","pc","RTCPeerConnection","createDataChannel","addTrack","onicecandidate","candidate","ontrack","MediaStream","includes","onmessage","console","log","onopen","offer","createOffer","setLocalDescription","start","_room$participants","navigator","mediaDevices","getUserMedia","srcObject","participants","map","val","err","offerHandler","from","_peerConnects$current","_peerConnects$current2","setRemoteDescription","RTCSessionDescription","signalingState","_peerConnects$current3","_peerConnects$current4","answer","createAnswer","answerHandler","_peerConnects$current5","_peerConnects$current6","currentRemoteDescription","candidateHandler","_peerConnects$current7","iceCandidate","RTCIceCandidate","addIceCandidate","data","getStreamRoomData","_room$participants2","length","_room$participants3","on","off","className","children","ref","autoPlay","playsInline","fileName","_jsxFileName","lineNumber","columnNumber","StreamBox","onClick","title","style","display","_c","$RefreshReg$"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/page/streamroom.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport \"../css/streamRoom.css\";\r\nimport { Form, useNavigate, useParams } from \"react-router-dom\";\r\nimport { socketClient } from \"../util/socket\";\r\nimport { User } from \"../types/user\";\r\nimport { stream_service } from \"../service/streamservice\";\r\nimport { Room } from \"../types/room\";\r\nimport { off } from \"process\";\r\nimport { userAction } from \"../context/actions/userAction\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../context/store\";\r\nimport { FormSubmit, InputChange } from \"../types/event\";\r\nimport { channel } from \"diagnostics_channel\";\r\nimport { Chat } from \"../components/room/menuchat\";\r\nimport { MenuParticipants } from \"../components/room/participants\";\r\n\r\ninterface UserStream {\r\n  [from: string]: StreamInfomation;\r\n}\r\n\r\ninterface StreamInfomation {\r\n  stream: MediaStream;\r\n  video?: boolean;\r\n  audio?: boolean;\r\n}\r\n\r\nexport const StreamRoom = () => {\r\n  let user = useSelector((state: RootState) => state.user);\r\n  let { id } = useParams();\r\n  let navigate = useNavigate();\r\n\r\n  let roomId = `room${id}`;\r\n\r\n  // ref\r\n  let localRef = useRef<HTMLVideoElement | null>(null);\r\n  let localStreamRef = useRef<MediaStream | null>(null);\r\n  let peerConnects = useRef<{ [nickname: string]: RTCPeerConnection }>({});\r\n  let dataChannelsRef = useRef<{ [nickname: string]: RTCDataChannel }>({});\r\n\r\n  // state\r\n  let [connectList, setConnectList] = useState<UserStream>({});\r\n  let [room, setRoom] = useState<Room>({});\r\n  let [menu, setMenu] = useState<{\r\n    state: boolean;\r\n    type: \"participants\" | \"chat\";\r\n  }>({ state: false, type: \"participants\" }); //메뉴\r\n  let [audio, setAudio] = useState<boolean>(true); //오디오\r\n  let [video, setVideo] = useState<boolean>(true); //비디오\r\n\r\n  // 채팅 인풋\r\n  let [input, setInput] = useState<string>(\"\");\r\n\r\n  // 채팅관련 ----------------------------------\r\n  let chatSubmit = async (e: FormSubmit) => {\r\n    e.preventDefault();\r\n    if (input == \"\") return;\r\n\r\n    Object.entries(dataChannelsRef.current).forEach(([nickname, channel]) => {\r\n      if (channel.readyState == \"open\") channel.send(input);\r\n    });\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  // 방 입장/퇴장 관련 --------------------------\r\n  let joinRoomHandler = (who: string) => {\r\n    // setConnectList((c) => [...c, { from: who, stream: new MediaStream() }]);\r\n  };\r\n\r\n  // room leave 처리\r\n  let leaveRoomHandler = (who: string) => {\r\n    delete peerConnects.current[who];\r\n    // setConnectList((c) => c.filter((val) => val.from !== who));\r\n  };\r\n\r\n  // 방을 떠남\r\n  let leaveRoom = () => {\r\n    if (user.nickname !== \"\") {\r\n      socketClient.emit(\"leave room\", user.nickname, roomId);\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  // 비디오/오디오 상태 ----------------------------\r\n  // 화면 on/off\r\n  let toggleMedia = (type: \"audio\" | \"video\") => {\r\n    let state: boolean = false;\r\n    if (!localStreamRef.current) return;\r\n\r\n    localStreamRef.current\r\n      .getTracks()\r\n      .filter((track) => track.kind === type)\r\n      .forEach((track) => {\r\n        state = !track.enabled;\r\n        track.enabled = !track.enabled;\r\n      });\r\n\r\n    socketClient.emit(\"toggle track\", roomId, user.nickname, type, state);\r\n    type == \"audio\" ? setAudio(!audio) : setVideo(!video);\r\n  };\r\n\r\n  // 상대 화면 on/off\r\n  let trackHandler = (to: string, type: \"audio\" | \"video\", state: boolean) => {\r\n    setConnectList((c) => {\r\n      let stInfo = c[to];\r\n\r\n      type == \"audio\" ? (stInfo.audio = state) : (stInfo.video = state);\r\n\r\n      return { ...c, [to]: stInfo };\r\n    });\r\n  };\r\n\r\n  // p2p연결 관련 --------------------------------\r\n  // connect 연결\r\n  let peerConnect = async (to: string, stream?: MediaStream) => {\r\n    let pc = new RTCPeerConnection();\r\n    const channel = pc.createDataChannel(\"chat\");\r\n\r\n    stream?.getTracks().forEach((track) => {\r\n      pc.addTrack(track, stream);\r\n    });\r\n\r\n    pc.onicecandidate = (e) => {\r\n      if (e.candidate)\r\n        socketClient.emit(\"candidate\", user.nickname, to, e.candidate);\r\n    };\r\n\r\n    pc.ontrack = (e) => {\r\n      let kind = e.track.kind;\r\n      setConnectList((c) => {\r\n        let stream = c[to];\r\n\r\n        if (!stream.stream) stream.stream = new MediaStream();\r\n\r\n        if (!stream.stream.getTracks().includes(e.track))\r\n          stream.stream.addTrack(e.track);\r\n\r\n        kind == \"audio\"\r\n          ? (stream.audio = e.track.enabled)\r\n          : (stream.video = e.track.enabled);\r\n\r\n        return {\r\n          ...c,\r\n          [to]: stream,\r\n        };\r\n      });\r\n    };\r\n\r\n    channel.onmessage = (e) => {\r\n      console.log(`send to ${to}`, e);\r\n    };\r\n\r\n    channel.onopen = () => {\r\n      console.log(`DataChannel open with ${to}`);\r\n    };\r\n\r\n    let offer = await pc.createOffer();\r\n    await pc.setLocalDescription(offer!);\r\n    socketClient.emit(\"offer\", user.nickname, to, offer);\r\n\r\n    peerConnects.current[to] = pc;\r\n    dataChannelsRef.current[to] = channel;\r\n  };\r\n\r\n  // 연결 시작\r\n  let start = async () => {\r\n    try {\r\n      let stream = await navigator.mediaDevices.getUserMedia({ video, audio });\r\n      localRef.current!.srcObject = stream;\r\n      localStreamRef.current = stream;\r\n\r\n      // 트랙을 더해줌\r\n      room.participants?.map(async (val: any) => {\r\n        if (val.nickname !== user.nickname)\r\n          await peerConnect(val.nickname, stream);\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  // offer처리\r\n  let offerHandler = async (from: string, offer: RTCSessionDescriptionInit) => {\r\n    try {\r\n      if (!peerConnects.current[from]) peerConnect(from);\r\n\r\n      await peerConnects.current[from]?.setRemoteDescription(\r\n        new RTCSessionDescription(offer)\r\n      );\r\n\r\n      if (\r\n        peerConnects.current[from]?.signalingState == \"have-remote-offer\" &&\r\n        user.nickname !== \"\"\r\n      ) {\r\n        const answer = await peerConnects.current[from]?.createAnswer();\r\n        await peerConnects.current[from]?.setLocalDescription(answer!);\r\n        socketClient.emit(\"answer\", user.nickname, from, answer);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  // answer 처리\r\n  let answerHandler = async (\r\n    from: string,\r\n    answer: RTCSessionDescriptionInit\r\n  ) => {\r\n    try {\r\n      if (!peerConnects.current[from]?.currentRemoteDescription)\r\n        await peerConnects.current[from]?.setRemoteDescription(answer!);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  // candidate처리\r\n  let candidateHandler = async (from: string, candidate: RTCIceCandidate) => {\r\n    const iceCandidate = new RTCIceCandidate(candidate);\r\n    await peerConnects.current[from]?.addIceCandidate(iceCandidate);\r\n  };\r\n\r\n  // useEffect -----------------------------\r\n  // 시작시 방 정보 얻어옴\r\n  useEffect(() => {\r\n    let data = async () => {\r\n      try {\r\n        let room = await stream_service.getStreamRoomData(id!);\r\n        setRoom(room.room);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    data();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(room);\r\n  }, [room]);\r\n\r\n  // 룸정보가 오면 start시작\r\n  useEffect(() => {\r\n    if (room.participants?.length) {\r\n      room.participants?.map((val: any) => {\r\n        if (val.nickname !== user.nickname) {\r\n          peerConnect(val.nickname);\r\n          setConnectList((c) => ({\r\n            ...c,\r\n            [val.nickname]: { stream: new MediaStream() },\r\n          }));\r\n        }\r\n      });\r\n    }\r\n    start();\r\n  }, [room]);\r\n\r\n  // 소켓 연결\r\n  useEffect(() => {\r\n    socketClient.emit(\"join\", `room${id}`);\r\n\r\n    socketClient.on(\"other join\", joinRoomHandler);\r\n    socketClient.on(\"offer\", offerHandler); //signaling offer\r\n    socketClient.on(\"answer\", answerHandler); //signaling answer\r\n    socketClient.on(\"candidate\", candidateHandler); //signaling candidate\r\n    socketClient.on(\"leave room\", leaveRoomHandler); // other user leave room\r\n    socketClient.on(\"toggle track\", trackHandler);\r\n\r\n    return () => {\r\n      socketClient.on(\"other join\", joinRoomHandler);\r\n      socketClient.off(\"offer\", offerHandler);\r\n      socketClient.off(\"answer\", answerHandler);\r\n      socketClient.off(\"candidate\", candidateHandler);\r\n      socketClient.off(\"leave room\", leaveRoomHandler);\r\n      socketClient.off(\"toggle track\", trackHandler);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"page streamRoom_page\">\r\n      {/* main */}\r\n      <div className=\"pwf-streamRoom_container\">\r\n        {/* 화면창 */}\r\n        <ul className=\"user_screen_lists\">\r\n          <div className=\"user_video_box\">\r\n            {/* 유저 비디오 */}\r\n            <video\r\n              ref={localRef}\r\n              autoPlay\r\n              playsInline\r\n              className=\"user_video\"\r\n            ></video>\r\n            {/* 유저 정보 */}\r\n            <div className=\"user_info_box\">\r\n              <div>\r\n                <span>\r\n                  <i\r\n                    className={`fa-solid fa-microphone-lines${\r\n                      audio ? \"\" : \"-slash\"\r\n                    }`}\r\n                  ></i>\r\n                </span>\r\n                <span>\r\n                  <i\r\n                    className={`fa-solid fa-video${video ? \"\" : \"-slash\"}`}\r\n                  ></i>\r\n                </span>\r\n              </div>\r\n              <span>{user.nickname}</span>\r\n            </div>\r\n          </div>\r\n          {/* 다른 참가자 스트리밍 */}\r\n          {Object.entries(connectList).map(([from, stream]) => (\r\n            <StreamBox from={from} stream={stream} />\r\n          ))}\r\n        </ul>\r\n        {/* main footer */}\r\n        <footer className=\"streamRoom_footer\">\r\n          {/* 유저 음성 및 비디오 */}\r\n          <div className=\"user_video_options\">\r\n            {/* 음성 */}\r\n            <button onClick={() => toggleMedia(\"audio\")}>\r\n              <i\r\n                className={`fa-solid fa-microphone-lines${\r\n                  audio ? \"\" : \"-slash\"\r\n                }`}\r\n              ></i>\r\n              <span>{audio ? \"음소거\" : \"음소거 해제\"}</span>\r\n            </button>\r\n            {/* 비디오 */}\r\n            <button\r\n              title={`비디오${video ? \"\" : \" 해제\"}`}\r\n              onClick={() => toggleMedia(\"video\")}\r\n            >\r\n              <i className={`fa-solid fa-video${video ? \"\" : \"-slash\"}`}></i>\r\n              <span>{video ? \"비디오\" : \"비디오 해제\"}</span>\r\n            </button>\r\n          </div>\r\n          {/* 비디오 메뉴 */}\r\n          <div className=\"room_options\">\r\n            <button>\r\n              <i className=\"fa-solid fa-user-plus\"></i>\r\n              <span>초대</span>\r\n            </button>\r\n\r\n            <button>\r\n              <i className=\"fa-solid fa-desktop\"></i>\r\n              <span>화면공유</span>\r\n            </button>\r\n\r\n            <button onClick={() => setMenu((c) => ({ ...c, state: true }))}>\r\n              <i className=\"fa-brands fa-elementor\"></i>\r\n              <span>메뉴</span>\r\n            </button>\r\n          </div>\r\n          {/* 방 나가기 */}\r\n          <button className=\"room_exit\" onClick={leaveRoom}>\r\n            방나가기\r\n          </button>\r\n        </footer>\r\n      </div>\r\n\r\n      {/* menu */}\r\n      <div\r\n        className=\"menu_container\"\r\n        style={{ display: menu.state ? \"flex\" : \"none\" }}\r\n      >\r\n        <button\r\n          className=\"menu_close_btn\"\r\n          onClick={() => setMenu((c) => ({ ...c, state: false }))}\r\n        ></button>\r\n        <div className=\"pwf-streamRoom_menu\">\r\n          <div className=\"pwf-streamRoom_menu_btn_container\">\r\n            <div className=\"pwf-streamRoom_menu_btn_box\">\r\n              <button\r\n                onClick={() => setMenu((c) => ({ ...c, type: \"participants\" }))}\r\n              >\r\n                참가자\r\n              </button>\r\n              <button onClick={() => setMenu((c) => ({ ...c, type: \"chat\" }))}>\r\n                채팅\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <ul className=\"pwf-streamRoom_menu_content\">\r\n            {/* 참가자 채팅창 */}\r\n            {menu.type == \"chat\" ? <Chat /> : <MenuParticipants />}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}