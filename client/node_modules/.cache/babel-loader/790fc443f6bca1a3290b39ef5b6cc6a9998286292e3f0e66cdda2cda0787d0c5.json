{"ast":null,"code":"// import { getUser } from \"../reducer/userSlice\";\nimport { streamService } from \"../../service/stream.service\";\n// import { AppDispatch } from \"\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// types\n// import { UserAction, UserActionTypes } from \"../../types/user\";\n\nclass RoomAction extends streamService {\n  constructor(...args) {\n    super(...args);\n    //   requestFriendHandle = createAsyncThunk(\n    //     \"request/friend\",\n    //     async (data: FormData): Promise<any> => {\n    //       try {\n    //         let res = await this.handleRequestFriend(data);\n    //         return await res!;\n    //       } catch (error) {\n    //         alert(error);\n    //       }\n    //     }\n    //   );\n    this.createRoom = createAsyncThunk(\"create/room\", async data => {\n      try {\n        let room = await this.createStreamRoom(data);\n        return room;\n      } catch (err) {\n        console.log(err);\n      }\n    });\n  }\n}\nexport let roomAction = new RoomAction();","map":{"version":3,"names":["streamService","createAsyncThunk","RoomAction","constructor","args","createRoom","data","room","createStreamRoom","err","console","log","roomAction"],"sources":["C:/Users/ashh1/Desktop/project/PlayWithFriends/client/src/redux/actions/roomAction.ts"],"sourcesContent":["// import { getUser } from \"../reducer/userSlice\";\r\nimport { streamService } from \"../../service/stream.service\";\r\nimport { userService } from \"../../service/user.service\";\r\n// import { AppDispatch } from \"\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// types\r\n// import { UserAction, UserActionTypes } from \"../../types/user\";\r\n\r\nclass RoomAction extends streamService {\r\n  //   requestFriendHandle = createAsyncThunk(\r\n  //     \"request/friend\",\r\n  //     async (data: FormData): Promise<any> => {\r\n  //       try {\r\n  //         let res = await this.handleRequestFriend(data);\r\n  //         return await res!;\r\n  //       } catch (error) {\r\n  //         alert(error);\r\n  //       }\r\n  //     }\r\n  //   );\r\n  createRoom = createAsyncThunk(\r\n    \"create/room\",\r\n    async (data: FormData): Promise<any> => {\r\n      try {\r\n        let room = await this.createStreamRoom(data);\r\n        return room;\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\nexport let roomAction = new RoomAction();\r\n"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,8BAA8B;AAE5D;AACA,SAASC,gBAAgB,QAAQ,kBAAkB;;AAEnD;AACA;;AAEA,MAAMC,UAAU,SAASF,aAAa,CAAC;EAAAG,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IACrC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAAA,KACAC,UAAU,GAAGJ,gBAAgB,CAC3B,aAAa,EACb,MAAOK,IAAc,IAAmB;MACtC,IAAI;QACF,IAAIC,IAAI,GAAG,MAAM,IAAI,CAACC,gBAAgB,CAACF,IAAI,CAAC;QAC5C,OAAOC,IAAI;MACb,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;IACF,CACF,CAAC;EAAA;AACH;AAEA,OAAO,IAAIG,UAAU,GAAG,IAAIV,UAAU,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}